var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.7","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,2.542,1,2.635]],["body/controllers/AppController.html",[0,4.265,1,4.42,2,3.904,3,0.077,4,0.066,5,0.077,6,5.238,7,5.61,8,0.317,9,1.27,10,5.384,11,3.16,12,0.008,13,0.578,14,6.321,15,1.017,16,0.902,17,0.343,18,1.059,19,4.059,20,4.511,21,0.087,22,0.132,23,4.079,24,1.912,25,1.192,26,4.79,27,0.005,28,0.006,29,0.005]],["title/controllers/AppController-1.html",[0,2.12,1,2.197,30,2.603]],["body/controllers/AppController-1.html",[0,4.265,1,4.42,2,3.904,3,0.077,4,0.066,5,0.077,8,0.317,9,1.27,10,5.384,11,3.16,12,0.008,13,0.578,15,1.017,16,0.902,17,0.343,18,1.059,19,4.059,20,4.511,21,0.087,22,0.132,23,4.079,24,1.912,25,1.192,26,4.79,27,0.005,28,0.006,29,0.005,31,3.278,32,5.61,33,6.321]],["title/controllers/AppController-2.html",[0,2.12,1,2.197,34,2.915]],["body/controllers/AppController-2.html",[0,4.265,1,4.42,2,3.904,3,0.077,4,0.066,5,0.077,8,0.317,9,1.27,10,5.384,11,3.16,12,0.008,13,0.578,15,1.017,16,0.902,17,0.343,18,1.059,19,4.059,20,4.511,21,0.087,22,0.132,23,4.079,24,1.912,25,1.192,26,4.79,27,0.005,28,0.006,29,0.005,31,3.278,35,5.61,36,6.321]],["title/controllers/AppController-3.html",[0,2.12,1,2.197,37,3.128]],["body/controllers/AppController-3.html",[0,4.265,1,4.42,2,3.904,3,0.077,4,0.066,5,0.077,8,0.317,9,1.27,10,5.384,11,3.16,12,0.008,13,0.578,15,1.017,16,0.902,17,0.343,18,1.059,19,4.059,20,4.511,21,0.087,22,0.132,23,4.079,24,1.912,25,1.192,26,4.79,27,0.005,28,0.006,29,0.005,31,3.278,38,5.61,39,6.321]],["title/classes/AppError.html",[22,0.097,40,3.752]],["body/classes/AppError.html",[3,0.073,4,0.063,5,0.073,8,0.302,12,0.007,13,0.687,16,0.955,17,0.267,18,1.009,21,0.083,22,0.126,27,0.005,28,0.006,29,0.005,40,6.659,41,1.381,42,5.347,43,2.227,44,6.205,45,1.208,46,2.529,47,0.848,48,6.685,49,1.584,50,6.668,51,4.286,52,6.026,53,0.911,54,0.522,55,0.438,56,4.078,57,3.012,58,6.026,59,4.567,60,5.347,61,6.026,62,6.026]],["title/modules/AppModule.html",[63,1.367,64,3.497]],["body/modules/AppModule.html",[1,4.207,2,4.023,3,0.059,4,0.051,5,0.059,6,3.272,12,0.008,17,0.365,18,0.81,19,4.113,20,3.45,21,0.067,22,0.101,25,0.912,27,0.004,28,0.005,29,0.004,54,0.638,63,2.183,64,6.675,65,2.157,66,2.101,67,2.493,68,2.493,69,2.346,70,3.377,71,2.417,72,4.291,73,4.291,74,4.291,75,5.872,76,3.359,77,2.493,78,2.493,79,4.836,80,4.409,81,4.836,82,4.836,83,4.203,84,4.937,85,4.836,86,4.836,87,4.291,88,2.986,89,3.272,90,3.272,91,3.924,92,3.45,93,2.986,94,6.236,95,4.836,96,2.493,97,4.836,98,3.12,99,4.836,100,4.836,101,3.932,102,4.291,103,1.858,104,3.932,105,4.836,106,2.986,107,3.272,108,4.836,109,4.836,110,4.291,111,4.836,112,4.836,113,4.836]],["title/injectables/AppService.html",[19,2.239,114,0.742]],["body/injectables/AppService.html",[3,0.08,4,0.069,5,0.08,6,5.356,8,0.329,9,1.299,10,5.452,12,0.007,13,0.599,15,1.055,16,0.923,17,0.291,18,1.098,19,3.84,21,0.091,22,0.137,25,1.237,27,0.005,28,0.006,29,0.005,114,1.273,115,2.111,116,5.819,117,6.557,118,4.969,119,4.969]],["title/injectables/AppService-1.html",[19,1.866,30,2.603,114,0.619]],["body/injectables/AppService-1.html",[3,0.08,4,0.069,5,0.08,8,0.329,9,1.299,10,5.452,12,0.007,13,0.599,15,1.055,16,0.923,17,0.291,18,1.098,19,3.84,21,0.091,22,0.137,25,1.237,27,0.005,28,0.006,29,0.005,31,3.352,114,1.273,115,2.111,118,4.969,119,4.969,120,5.819,121,6.557]],["title/injectables/AppService-2.html",[19,1.866,34,2.915,114,0.619]],["body/injectables/AppService-2.html",[3,0.08,4,0.069,5,0.08,8,0.329,9,1.299,10,5.452,12,0.007,13,0.599,15,1.055,16,0.923,17,0.291,18,1.098,19,3.84,21,0.091,22,0.137,25,1.237,27,0.005,28,0.006,29,0.005,31,3.352,114,1.273,115,2.111,118,4.969,119,4.969,122,5.819,123,6.557]],["title/injectables/AppService-3.html",[19,1.866,37,3.128,114,0.619]],["body/injectables/AppService-3.html",[3,0.08,4,0.069,5,0.08,8,0.329,9,1.299,10,5.452,12,0.007,13,0.599,15,1.055,16,0.923,17,0.291,18,1.098,19,3.84,21,0.091,22,0.137,25,1.237,27,0.005,28,0.006,29,0.005,31,3.352,114,1.273,115,2.111,118,4.969,119,4.969,124,5.819,125,6.557]],["title/classes/AppUtils.html",[22,0.097,126,3.752]],["body/classes/AppUtils.html",[3,0.072,4,0.062,5,0.072,8,0.297,12,0.008,13,0.54,17,0.262,18,0.991,21,0.082,22,0.124,27,0.005,28,0.006,29,0.005,41,1.356,45,1.195,46,1.827,126,6.04,127,5.249,128,4.474,129,8.12,130,2.327,131,2.443,132,5.915,133,7.428,134,4.483,135,5.915,136,2.665,137,7.428,138,7.428,139,7.428,140,3.314,141,7.428,142,7.428,143,5.915,144,5.915,145,5.915]],["title/controllers/AuthController.html",[0,2.542,146,3.497]],["body/controllers/AuthController.html",[0,3.011,2,3.375,3,0.066,4,0.057,5,0.066,8,0.274,9,1.159,11,3.53,12,0.008,13,0.645,15,1.136,17,0.313,18,0.915,21,0.075,22,0.114,25,1.031,27,0.004,28,0.006,29,0.004,31,3.314,47,0.732,53,1.068,54,0.612,55,0.411,93,3.375,136,3.147,146,5.351,147,4.849,148,4.849,149,7.062,150,7.062,151,5.464,152,6.041,153,7.062,154,5.464,155,5.079,156,5.464,157,7.062,158,5.464,159,3.241,160,5.351,161,5.464,162,5.464,163,5.464,164,5.464,165,5.464,166,4.849,167,5.464,168,5.464]],["title/classes/AuthCreatedEvent.html",[22,0.097,169,3.497]],["body/classes/AuthCreatedEvent.html",[3,0.074,4,0.064,5,0.074,8,0.307,12,0.007,13,0.693,17,0.336,21,0.085,22,0.128,24,2.495,27,0.005,28,0.006,29,0.005,41,1.403,45,1.22,46,2.546,47,0.634,49,1.994,53,0.926,54,0.53,55,0.442,93,5.324,169,5.75,170,6.25,171,5.432,172,2.849,173,6.25,174,4.978,175,4.72,176,6.121,177,6.121,178,2.97,179,5.432]],["title/classes/AuthCreatedHandler.html",[22,0.097,180,3.497]],["body/classes/AuthCreatedHandler.html",[3,0.075,4,0.065,5,0.075,8,0.31,9,1.253,12,0.007,13,0.565,15,0.994,17,0.367,18,1.035,21,0.085,22,0.129,27,0.005,28,0.006,29,0.005,41,1.416,47,0.64,53,0.935,54,0.535,55,0.36,169,6.735,172,2.866,178,2.998,180,5.784,181,5.784,182,5.484,183,6.735,184,6.207,185,6.207,186,6.18,187,2.617,188,4.182,189,5.026,190,5.026,191,6.18,192,5.026,193,5.026,194,5.026]],["title/classes/AuthDeletedEvent.html",[22,0.097,195,3.497]],["body/classes/AuthDeletedEvent.html",[3,0.075,4,0.065,5,0.075,8,0.31,12,0.007,13,0.697,16,1.008,17,0.274,21,0.085,22,0.129,24,2.505,27,0.005,28,0.006,29,0.005,41,1.416,45,1.228,46,2.557,47,0.64,49,2.006,53,0.935,54,0.535,55,0.444,170,6.276,172,2.866,173,6.276,178,2.998,195,5.784,196,5.484,197,8.65,198,6.18,199,6.18,200,6.18]],["title/classes/AuthDeletedHandler.html",[22,0.097,201,3.497]],["body/classes/AuthDeletedHandler.html",[3,0.075,4,0.065,5,0.075,8,0.31,9,1.253,12,0.007,13,0.565,15,0.994,17,0.367,18,1.035,21,0.085,22,0.129,27,0.005,28,0.006,29,0.005,41,1.416,47,0.64,53,0.935,54,0.535,55,0.36,172,2.866,178,2.998,181,5.784,183,6.735,184,6.207,185,6.207,187,2.617,188,4.182,189,5.026,190,5.026,192,5.026,193,5.026,194,5.026,195,6.735,201,5.784,202,5.484,203,6.18,204,6.18]],["title/classes/AuthEntity.html",[22,0.097,175,2.458]],["body/classes/AuthEntity.html",[3,0.045,4,0.039,5,0.045,8,0.188,9,0.894,11,3.744,12,0.008,13,0.821,15,1.257,16,0.749,17,0.357,21,0.052,22,0.079,27,0.003,28,0.004,29,0.003,41,0.859,43,1.615,45,0.876,46,1.683,47,0.917,53,0.567,54,0.325,55,0.491,57,1.874,96,1.933,175,2.902,205,3.326,206,5.833,207,4.582,208,5.676,209,3.366,210,4.13,211,4.13,212,1.871,213,3.889,214,3.366,215,3.889,216,7.05,217,4.866,218,4.866,219,3.889,220,4.866,221,4.866,222,4.181,223,3.748,224,3.748,225,3.808,226,5.005,227,3.048,228,1.287,229,3.048,230,3.048,231,1.587,232,2.537,233,3.048,234,3.048,235,3.048,236,1.407,237,3.048,238,3.748,239,3.748,240,3.341,241,4.866,242,3.048,243,3.048,244,2.84,245,2.14,246,2.84,247,3.048,248,1.683,249,3.048,250,2.84,251,3.048,252,3.048,253,3.748,254,4.13,255,3.048,256,2.84,257,2.79,258,3.966,259,3.326,260,3.748,261,2.84,262,3.003,263,1.551,264,1.933,265,3.048,266,1.718,267,3.048,268,2.84,269,3.748,270,3.748,271,3.748]],["title/classes/AuthExistHandler.html",[22,0.097,272,3.497]],["body/classes/AuthExistHandler.html",[3,0.066,4,0.057,5,0.066,8,0.271,9,1.151,12,0.008,13,0.64,15,0.869,17,0.365,18,0.905,21,0.075,22,0.113,24,1.634,25,1.019,27,0.004,28,0.006,29,0.004,41,1.238,47,0.726,49,1.842,53,1.06,54,0.607,55,0.408,136,2.792,172,2.632,178,2.621,188,3.656,222,4.158,272,5.313,273,6.906,274,4.795,275,6.906,276,5.701,277,4.094,278,4.994,279,5.403,280,6.221,281,6.467,282,5.403,283,4.523,284,2.257,285,4.795,286,3.855,287,5.403,288,2.126,289,4.795,290,1.42,291,3.486,292,4.795,293,4.795,294,2.786,295,5.403]],["title/classes/AuthExistQuery.html",[22,0.097,281,3.497]],["body/classes/AuthExistQuery.html",[3,0.074,4,0.064,5,0.074,8,0.307,12,0.007,13,0.693,17,0.336,21,0.085,22,0.128,24,2.495,27,0.005,28,0.006,29,0.005,41,1.403,45,1.22,46,2.546,47,0.634,49,1.994,53,0.926,54,0.53,55,0.442,172,2.849,178,2.97,222,5.531,281,5.75,296,7.318,297,5.432,298,7.318,299,6.121,300,6.121,301,6.121,302,6.121]],["title/guards/AuthGuard.html",[303,3.752,304,3.752]],["body/guards/AuthGuard.html",[3,0.073,4,0.063,5,0.073,8,0.303,9,1.236,12,0.008,13,0.552,15,0.972,17,0.334,18,1.012,21,0.083,22,0.127,25,1.14,27,0.005,28,0.006,29,0.005,47,0.626,53,0.914,54,0.524,55,0.352,91,4.01,106,2.771,114,1.211,172,2.269,228,2.585,284,2.424,304,6.123,305,4.916,306,5.364,307,7.836,308,5.364,309,6.124,310,6.045,311,6.214,312,3.9]],["title/modules/AuthModule.html",[63,1.367,313,3.497]],["body/modules/AuthModule.html",[2,4.156,3,0.062,4,0.053,5,0.062,12,0.008,17,0.395,18,0.85,21,0.07,22,0.106,27,0.004,28,0.005,29,0.004,31,2.15,63,2.237,65,2.265,66,2.206,67,2.618,68,2.618,69,2.463,70,3.461,71,2.538,76,3.47,77,2.618,78,2.618,80,4.554,146,5.721,262,2.797,263,1.445,313,7.075,314,4.505,315,4.505,316,4.505,317,6.134,318,5.309,319,6.134,320,6.134,321,6.134,322,5.077,323,3.847,324,5.1,325,5.077,326,3.847,327,5.077,328,4.505,329,3.436,330,5.077,331,5.077]],["title/injectables/AuthRepository.html",[114,0.742,278,2.635]],["body/injectables/AuthRepository.html",[3,0.031,4,0.027,5,0.031,8,0.129,9,0.67,12,0.007,13,0.792,15,1.346,16,0.952,17,0.257,18,0.43,21,0.035,22,0.054,24,1.754,25,0.484,27,0.002,28,0.003,29,0.002,43,1.211,45,0.657,46,1.261,47,0.857,49,1.074,51,2.042,53,1.251,54,0.725,55,0.508,103,1.57,114,0.657,115,0.827,130,1.01,131,1.061,136,3.165,155,3.438,175,1.368,187,1.088,212,2.313,226,4.911,228,1.402,231,1.088,240,1.146,245,2.905,248,1.571,262,1.415,263,0.731,264,1.324,278,2.333,284,2.664,288,2.885,332,2.279,333,5.661,334,2.898,335,2.543,336,3.263,337,2.765,338,2.765,339,2.915,340,3.63,341,4.364,342,2.915,343,2.915,344,3.442,345,2.915,346,2.915,347,3.63,348,2.915,349,3.923,350,2.915,351,2.915,352,2.089,353,2.733,354,3.457,355,2.568,356,4.137,357,1.833,358,2.765,359,1.946,360,3.757,361,1.467,362,1.833,363,1.946,364,2.915,365,2.915,366,3.589,367,1.833,368,1.946,369,5.043,370,1.833,371,1.946,372,1.946,373,1.833,374,2.042,375,1.946,376,3.63,377,1.833,378,1.946,379,2.915,380,1.833,381,1.946,382,1.833,383,2.915,384,1.833,385,1.946,386,1.833,387,2.042,388,1.946,389,3.442,390,2.636,391,1.833,392,2.042,393,1.946,394,1.946,395,1.833,396,1.833,397,1.738,398,1.833,399,2.765,400,1.946,401,2.915,402,3.282,403,1.657,404,1.146,405,2.915,406,1.523,407,1.284,408,1.284,409,1.738,410,1.738,411,1.833,412,1.946,413,1.833,414,1.833,415,3.442,416,1.946,417,1.833,418,1.833,419,1.833,420,1.833,421,1.833,422,1.946,423,1.946,424,1.646,425,1.368,426,1.246,427,1.946,428,1.523,429,2.765,430,2.765,431,2.765,432,2.279,433,1.586,434,1.284]],["title/classes/AuthResolver.html",[22,0.097,324,3.497]],["body/classes/AuthResolver.html",[3,0.055,4,0.047,5,0.055,8,0.226,9,1.019,11,3.105,12,0.008,13,0.649,15,0.999,17,0.339,18,0.755,21,0.062,22,0.094,24,1.364,25,1.34,27,0.004,28,0.005,29,0.004,31,3.243,41,1.033,47,0.736,49,1.632,53,1.075,54,0.663,55,0.414,88,2.785,91,4.53,96,3.203,106,2.067,136,2.978,140,3.17,166,5.512,207,3.217,288,1.774,290,1.632,318,5.127,323,3.417,324,4.707,435,4.001,436,6.211,437,3.666,438,4.509,439,4.509,440,6.211,441,4.509,442,4.509,443,4.509,444,4.509,445,3.051,446,4.001,447,3.217,448,2.401,449,4.509,450,3.417,451,4.509,452,4.509,453,4.509,454,5.512,455,3.547,456,6.211,457,4.509,458,4.509,459,4.509,460,4.509,461,4.509,462,4.509,463,4.509,464,4.509,465,2.574,466,4.509,467,4.001,468,4.509,469,4.509,470,4.509,471,4.509,472,3.051,473,4.509,474,6.211,475,2.785,476,3.417]],["title/classes/AuthResponseDto.html",[22,0.097,254,3.497]],["body/classes/AuthResponseDto.html",[3,0.073,4,0.063,5,0.073,8,0.3,12,0.007,13,0.782,16,1.027,17,0.265,21,0.083,22,0.125,27,0.005,28,0.006,29,0.005,41,1.373,43,2.218,45,1.204,54,0.708,55,0.498,209,4.623,212,2.57,214,4.623,225,4.439,226,4.663,231,2.536,254,5.673,477,5.314,478,5.795,479,5.989,480,4.87,481,4.87,482,4.87,483,4.87,484,3.864]],["title/injectables/AuthService.html",[114,0.742,318,2.85]],["body/injectables/AuthService.html",[3,0.06,4,0.051,5,0.06,8,0.246,9,1.08,12,0.008,13,0.678,15,1.058,16,0.993,17,0.292,18,0.822,21,0.068,22,0.103,23,3.167,25,1.4,27,0.006,28,0.005,29,0.004,31,3.359,47,0.769,49,1.29,53,1.123,54,0.643,55,0.432,96,3.828,114,1.058,115,1.58,136,3.055,140,2.19,207,3.503,277,3.72,278,4.862,284,2.119,290,1.73,294,2.531,318,4.064,336,3.393,455,3.758,465,4.239,485,4.356,486,6.581,487,4.909,488,6.581,489,4.909,490,4.909,491,6.581,492,7.932,493,4.909,494,4.356,495,2.705,496,2.615,497,4.909,498,4.909,499,3.72,500,4.909,501,4.909,502,4.909,503,4.909]],["title/classes/AuthUpdatedEvent.html",[22,0.097,504,3.497]],["body/classes/AuthUpdatedEvent.html",[3,0.074,4,0.064,5,0.074,8,0.307,12,0.007,13,0.693,17,0.336,21,0.085,22,0.128,24,2.495,27,0.005,28,0.006,29,0.005,41,1.403,45,1.22,46,2.546,47,0.634,49,1.994,53,0.926,54,0.53,55,0.442,93,5.324,170,6.25,172,2.849,173,6.25,174,4.978,175,4.72,178,2.97,179,5.432,504,5.75,505,5.432,506,6.121,507,6.121]],["title/classes/AuthUpdatedHandler.html",[22,0.097,508,3.497]],["body/classes/AuthUpdatedHandler.html",[3,0.075,4,0.065,5,0.075,8,0.31,9,1.253,12,0.007,13,0.565,15,0.994,17,0.367,18,1.035,21,0.085,22,0.129,27,0.005,28,0.006,29,0.005,41,1.416,47,0.64,53,0.935,54,0.535,55,0.36,172,2.866,178,2.998,181,5.784,183,6.735,184,6.207,185,6.207,187,2.617,188,4.182,189,5.026,190,5.026,192,5.026,193,5.026,194,5.026,504,6.735,508,5.784,509,5.484,510,6.18,511,6.18]],["title/injectables/AwsS3Service.html",[114,0.742,512,3.123]],["body/injectables/AwsS3Service.html",[3,0.052,4,0.045,5,0.073,8,0.215,9,0.985,12,0.008,13,0.721,15,0.69,16,0.5,17,0.362,18,0.718,21,0.059,22,0.09,24,2.093,25,0.809,27,0.003,28,0.005,29,0.003,30,2.902,45,0.965,46,2.59,47,0.622,49,1.577,53,0.907,54,0.6,55,0.459,103,1.648,114,0.965,115,1.381,136,2.482,140,1.913,248,1.324,284,1.381,288,2.722,290,1.969,406,2.544,512,4.06,513,7.252,514,3.806,515,6.919,516,5.371,517,5.684,518,5.999,519,4.289,520,5.999,521,5.999,522,5.679,523,4.289,524,5.999,525,4.289,526,4.289,527,4.879,528,3.806,529,5.999,530,1.221,531,4.289,532,4.289,533,2.284,534,1.913,535,3.488,536,4.289,537,4.289,538,4.289,539,4.289,540,4.289,541,4.289,542,4.289,543,4.289,544,5.324,545,4.289,546,4.289,547,4.289,548,4.289,549,4.289,550,4.289,551,5.324,552,4.289,553,3.343,554,4.289,555,4.289,556,4.289,557,4.289,558,3.806,559,4.289,560,4.289,561,4.289]],["title/classes/BaseDto.html",[22,0.097,478,2.977]],["body/classes/BaseDto.html",[3,0.068,4,0.059,5,0.068,8,0.282,12,0.008,13,0.764,16,1.03,17,0.319,21,0.078,22,0.118,27,0.004,28,0.006,29,0.004,41,1.289,45,1.157,47,0.583,49,1.478,53,0.85,54,0.487,55,0.487,206,5.394,209,4.898,212,2.723,214,4.898,225,4.958,231,3.359,257,2.443,424,2.266,428,3.335,478,4.641,562,4.99,563,7.193,564,7.193,565,5.623,566,5.623,567,5.623,568,5.623,569,4.99,570,5.623,571,4.99,572,5.623]],["title/classes/BaseEntity.html",[22,0.097,206,2.977]],["body/classes/BaseEntity.html",[3,0.042,4,0.037,5,0.042,8,0.175,9,0.85,11,3.409,12,0.008,13,0.79,15,1.171,16,0.889,17,0.338,21,0.048,22,0.108,25,0.66,27,0.003,28,0.004,29,0.003,41,0.802,43,1.535,45,0.833,46,1.905,47,0.905,53,0.529,54,0.303,55,0.459,57,1.748,88,3.199,103,2.798,106,2.374,130,1.376,178,1.697,206,3.98,208,4.675,209,3.81,210,4.675,211,4.675,212,2.118,213,4.866,214,3.81,215,4.402,217,5.168,218,5.168,219,3.696,220,5.168,221,5.168,225,4.993,228,1.778,231,2.613,232,4.175,236,1.945,240,3.248,241,5.168,244,3.925,245,2.958,246,3.925,248,1.905,250,3.925,257,1.52,261,2.65,262,1.927,263,0.995,264,1.803,266,3.126,328,3.104,361,1.997,424,1.409,478,2.257,484,3.342,569,3.104,571,3.104,573,7.751,574,3.104,575,6.169,576,3.497,577,3.497,578,3.497,579,3.497,580,3.497,581,3.497,582,3.497,583,3.497,584,3.497,585,3.497,586,3.497,587,3.497,588,7.281,589,2.496,590,2.65,591,3.497,592,3.342,593,3.497,594,3.497,595,5.18,596,3.497]],["title/classes/BaseRepository.html",[22,0.097,333,2.977]],["body/classes/BaseRepository.html",[3,0.014,4,0.012,5,0.014,8,0.102,9,0.333,12,0.008,13,0.645,15,1.263,16,0.894,17,0.09,21,0.016,22,0.042,24,0.835,25,1.288,27,0.002,28,0.002,29,0.003,41,0.258,45,0.326,46,0.626,47,0.663,49,0.296,51,2.161,53,0.967,54,0.568,55,0.433,57,0.564,88,2.67,98,0.728,103,2.391,106,1.265,130,0.444,131,0.466,136,2.909,140,3.597,155,2.987,187,1.169,212,2.195,228,1.156,231,1.169,240,0.503,245,3.741,248,1.335,263,2.04,283,1.307,284,2.697,288,2.373,290,2.079,291,0.728,333,4.556,334,3.53,335,2.911,336,2.883,337,2.28,338,2.28,339,1.446,340,2.404,341,4.046,342,1.446,343,1.446,344,2.628,345,1.446,346,1.446,347,2.404,348,1.446,349,3.783,350,1.969,351,1.446,354,0.532,357,1.446,358,2.28,360,4.094,361,1.576,362,1.446,364,2.404,365,2.404,366,3.636,367,1.446,369,4.563,370,1.446,373,1.446,374,1.941,376,3.085,377,1.446,379,2.404,380,1.446,382,1.446,383,3.085,384,1.446,386,1.446,387,1.941,389,3.409,390,2.173,391,1.446,392,1.941,395,1.446,396,1.446,397,1.371,398,1.446,399,2.628,401,2.404,402,2.789,403,1.307,404,0.904,405,2.404,406,1.202,407,1.379,408,1.379,409,2.28,410,2.28,411,1.446,413,1.446,414,1.446,415,3.183,417,1.446,418,1.446,419,1.446,420,1.446,421,2.404,424,1.358,425,1.47,426,2.282,472,1.867,475,1.704,495,2.139,496,2.068,530,0.321,597,2.408,598,1.001,599,1.128,600,2.989,601,2.026,602,1.798,603,1.536,604,1.128,605,1.128,606,1.128,607,1.128,608,1.128,609,1.128,610,1.128,611,1.128,612,1.128,613,1.128,614,1.128,615,1.128,616,1.128,617,1.128,618,1.128,619,1.128,620,1.128,621,1.128,622,0.644,623,1.128,624,2.026,625,4.292,626,5.813,627,0.917,628,1.001,629,1.001,630,1.128,631,1.001,632,0.854,633,5.33,634,1.128,635,1.128,636,3.883,637,3.369,638,1.128,639,1.798,640,1.128,641,1.128,642,1.128,643,5.037,644,1.128,645,1.128,646,2.759,647,1.128,648,3.446,649,1.128,650,1.128,651,1.128,652,1.128,653,1.128,654,1.128,655,1.128,656,1.128,657,1.128,658,2.026,659,1.128,660,1.128,661,1.128,662,1.128,663,3.883,664,2.244,665,1.128,666,5.824,667,1.128,668,1.128,669,2.026,670,1.128,671,2.398,672,1.128,673,1.128,674,1.128,675,0.763,676,1.704,677,1.128,678,1.128,679,1.128,680,1.128,681,1.128,682,1.128,683,1.128,684,1.128,685,1.128,686,1.128,687,2.026,688,2.026,689,1.128,690,1.128,691,1.128,692,1.128,693,4.323,694,1.128,695,1.128,696,2.759,697,2.759,698,1.128,699,1.128,700,1.001,701,0.917,702,1.128,703,1.128,704,1.128,705,1.798,706,2.026,707,1.128,708,0.669,709,1.128,710,0.696,711,1.128,712,0.564,713,1.128,714,1.128,715,1.128,716,1.128,717,0.696,718,2.026,719,0.644,720,2.026,721,2.026,722,1.128,723,1.128,724,1.128,725,1.128,726,1.128,727,2.026,728,1.128,729,1.128,730,1.128,731,1.128,732,1.128,733,1.128,734,1.128,735,1.128,736,1.128,737,1.001,738,1.536,739,1.128,740,1.128,741,1.001,742,1.128,743,0.644,744,1.128]],["title/classes/BaseSearchDto.html",[22,0.097,745,3.752]],["body/classes/BaseSearchDto.html",[3,0.065,4,0.056,5,0.065,8,0.27,11,3.492,12,0.008,13,0.751,16,0.814,17,0.344,21,0.074,22,0.163,25,1.318,27,0.004,28,0.006,29,0.004,30,3.636,41,1.231,45,1.123,55,0.407,213,3.834,236,2.622,484,5.008,589,3.834,745,5.68,746,7.56,747,4.768,748,5.882,749,6.887,750,5.293,751,4.603,752,5.882,753,6.928,754,5.373,755,5.373,756,4.768,757,5.373,758,5.373,759,5.373,760,3.834,761,4.768,762,4.072,763,6.199,764,6.985,765,5.373,766,4.072,767,4.072,768,4.768]],["title/interfaces/CollectionProps.html",[426,2.239,769,0.757]],["body/interfaces/CollectionProps.html",[3,0.052,4,0.045,5,0.052,8,0.376,12,0.008,16,0.978,17,0.19,21,0.124,27,0.003,28,0.005,29,0.003,43,1.271,45,0.965,47,0.913,54,0.649,55,0.476,159,2.544,212,1.472,228,2.939,231,2.541,236,3.213,248,1.852,257,1.864,263,1.221,266,1.966,284,1.931,290,2.073,334,2.144,335,2.144,353,2.828,354,3.262,360,2.081,366,3.195,374,2.144,387,2.144,392,2.999,407,2.144,408,2.144,424,1.728,426,2.911,434,2.144,530,1.221,553,1.913,597,1.441,622,2.449,671,2.649,676,2.649,708,4.444,710,4.628,712,3.746,717,4.628,719,4.279,751,2.544,769,1.377,770,2.544,771,4.835,772,3.871,773,2.544,774,2.544,775,2.649,776,2.767,777,2.767,778,2.767,779,3.871,780,2.649,781,3.871,782,2.767,783,2.767,784,2.544]],["title/interfaces/ColumnCommonOptions.html",[769,0.757,785,3.497]],["body/interfaces/ColumnCommonOptions.html",[3,0.037,4,0.032,5,0.037,8,0.153,12,0.008,16,0.844,21,0.065,22,0.064,27,0.002,28,0.004,29,0.002,43,0.904,45,0.751,47,0.89,54,0.673,55,0.5,106,2.604,130,3.301,131,3.546,228,3.022,248,1.443,257,2.031,263,0.868,266,4.179,294,2.928,336,1.573,341,2.886,390,1.968,404,1.361,406,3.775,530,0.868,533,1.625,534,1.361,553,2.085,592,4.427,597,1.025,675,4.308,769,0.767,784,2.771,785,4.304,786,2.481,787,2.481,788,4.146,789,6.897,790,6.897,791,5.648,792,4.8,793,3.855,794,5.648,795,5.04,796,4.146,797,4.146,798,5.648,799,3.8,800,6.089,801,3.015,802,4.146,803,4.146,804,3.8,805,4.146,806,4.053,807,4.146,808,6.897,809,6.424,810,4.146,811,4.146,812,3.8,813,3.664,814,4.146,815,4.146,816,4.146,817,4.146,818,2.312,819,2.707,820,2.707,821,5.176,822,2.177,823,2.481,824,2.707,825,2.707,826,2.707,827,2.707,828,4.824,829,2.707,830,2.707,831,2.707,832,2.481,833,2.707,834,2.707,835,1.968,836,2.707,837,2.707,838,2.707,839,2.707,840,2.707,841,2.707,842,2.707,843,2.707,844,2.707]],["title/interfaces/ColumnOptions.html",[769,0.757,818,3.497]],["body/interfaces/ColumnOptions.html",[3,0.036,4,0.031,5,0.036,8,0.149,12,0.008,16,0.957,21,0.063,22,0.096,27,0.002,28,0.004,29,0.002,43,1.354,45,0.735,47,0.914,51,2.283,54,0.667,55,0.525,106,2.556,130,3.174,131,3.486,228,2.898,236,1.715,248,1.41,257,1.287,263,0.843,266,4.111,294,2.875,336,2.355,341,1.829,390,2.947,404,1.321,406,3.717,530,0.843,533,1.577,534,1.321,553,1.321,592,4.369,597,0.995,675,4.582,769,0.75,784,1.757,785,4.225,786,2.409,787,2.409,788,2.628,789,4.948,790,4.948,791,2.628,792,4.755,793,3.81,794,4.053,795,4.948,796,2.628,797,2.628,798,2.628,800,5.561,801,1.911,802,2.628,803,2.628,804,2.409,805,2.628,806,3.979,807,2.628,808,6.616,809,6.616,810,2.628,811,2.628,812,2.409,813,3.597,814,2.628,815,2.628,816,2.628,817,2.628,818,3.462,819,4.053,820,4.053,821,6.561,822,3.259,823,3.715,824,4.053,825,4.053,826,4.053,827,2.628,828,6.316,829,4.053,830,4.053,831,2.628,832,5.096,833,2.628,834,4.053,835,2.947,836,4.053,837,4.053,838,4.053,839,4.053,840,4.053,841,4.053,842,4.053,843,5.561,844,2.628,845,2.628]],["title/modules/CommonModule.html",[63,1.367,846,3.497]],["body/modules/CommonModule.html",[3,0.058,4,0.05,5,0.058,12,0.008,17,0.382,18,0.796,21,0.066,22,0.1,25,0.896,27,0.004,28,0.005,29,0.004,63,2.164,65,2.12,66,2.065,67,2.45,68,2.45,69,2.306,70,3.75,71,3.65,76,3.32,77,2.45,78,2.45,80,4.357,290,1.249,512,5.837,516,5.553,517,5.564,846,6.928,847,4.217,848,4.217,849,4.217,850,6.523,851,5.837,852,3.865,853,4.752,854,5.236,855,7.302,856,4.752,857,4.217,858,4.752,859,4.752,860,4.752,861,4.752,862,4.752,863,4.752,864,2.819,865,4.752,866,4.752,867,2.376]],["title/injectables/CommonService.html",[114,0.742,850,3.293]],["body/injectables/CommonService.html",[3,0.086,4,0.074,5,0.086,12,0.007,17,0.313,18,1.182,21,0.097,22,0.148,27,0.006,28,0.007,29,0.006,114,1.33,115,2.273,850,5.901,868,6.265]],["title/classes/ConfigService.html",[22,0.097,516,2.85]],["body/classes/ConfigService.html",[3,0.043,4,0.037,5,0.043,8,0.177,9,0.856,12,0.008,13,0.742,15,1.102,16,1.01,17,0.324,21,0.049,22,0.074,25,1.493,27,0.003,28,0.004,29,0.003,41,0.809,46,2.362,47,0.71,49,1.63,53,1.036,54,0.594,55,0.445,89,3.529,103,1.356,106,2.39,107,2.388,228,1.212,236,1.958,248,1.09,290,1.37,415,2.388,428,3.093,455,2.978,495,2.873,496,2.777,516,3.221,527,2.87,530,1.004,544,5.503,553,2.327,712,1.764,750,3.952,793,1.88,869,3.132,870,5.215,871,5.215,872,5.215,873,6.85,874,5.503,875,3.529,876,4.627,877,3.529,878,5.215,879,3.529,880,5.215,881,3.529,882,5.215,883,5.215,884,3.529,885,6.202,886,3.529,887,3.529,888,3.529,889,3.529,890,3.132,891,3.529,892,3.132,893,4.627,894,3.529,895,3.952,896,3.721,897,3.952,898,3.529,899,3.529,900,6.85,901,3.529,902,3.529,903,6.202,904,2.87,905,3.529,906,3.529,907,3.529,908,3.529,909,3.529,910,3.529,911,3.529,912,3.529,913,5.215,914,6.078,915,5.215,916,3.529,917,3.529,918,3.529,919,3.529,920,3.529,921,4.241,922,3.529,923,4.425,924,3.529,925,3.721,926,3.529,927,3.529,928,3.529,929,3.529,930,5.215,931,3.529,932,3.529,933,3.529,934,3.529,935,3.529,936,3.529,937,3.529,938,3.529,939,3.132,940,3.529,941,3.529,942,3.529,943,3.132,944,3.529,945,3.132,946,3.529,947,3.132,948,3.529,949,2.518,950,3.529,951,3.529,952,2.518,953,3.529,954,3.529,955,3.529,956,2.518,957,3.529,958,2.388,959,3.529]],["title/classes/ContextProvider.html",[22,0.097,960,3.752]],["body/classes/ContextProvider.html",[3,0.06,4,0.052,5,0.06,8,0.247,9,1.082,12,0.008,13,0.725,15,1.195,16,1.072,17,0.218,21,0.068,22,0.103,24,2.248,25,1.244,27,0.004,28,0.005,29,0.004,41,1.128,45,1.06,47,0.77,53,1.201,54,0.688,55,0.482,91,2.621,128,5.065,130,1.936,131,3.419,152,5.03,240,2.941,288,3.352,361,4.245,533,2.621,534,2.196,535,4.002,553,3.316,675,4.461,876,5.85,960,5.361,961,4.367,962,7.433,963,6.592,964,4.922,965,6.592,966,4.922,967,4.922,968,6.592,969,4.922,970,4.922,971,4.922,972,4.922,973,4.922]],["title/injectables/CookieSerializer.html",[114,0.742,319,3.293]],["body/injectables/CookieSerializer.html",[3,0.069,4,0.06,5,0.069,8,0.286,9,1.192,12,0.008,13,0.663,15,1.168,17,0.322,18,0.955,21,0.079,22,0.12,27,0.005,28,0.006,29,0.005,43,2.152,47,0.752,53,1.098,54,0.629,55,0.423,96,3.744,114,1.168,115,1.837,240,3.75,319,5.181,743,4.146,974,5.063,975,7.986,976,7.261,977,7.261,978,7.261,979,8.872,980,7.261,981,5.706,982,6.443,983,7.261,984,5.706,985,4.324,986,6.443,987,7.261]],["title/modules/CoreModule.html",[63,1.367,988,3.497]],["body/modules/CoreModule.html",[3,0.074,4,0.064,5,0.074,12,0.007,17,0.336,18,1.025,21,0.085,22,0.128,27,0.005,28,0.006,29,0.005,63,2.444,65,2.731,66,2.66,67,3.156,68,3.156,69,2.97,70,3.78,71,4.122,76,3.913,77,3.156,78,3.156,988,6.938,989,5.432,990,5.432,991,5.432,992,6.766,993,6.121,994,6.121]],["title/injectables/CoreService.html",[114,0.742,992,3.293]],["body/injectables/CoreService.html",[3,0.086,4,0.074,5,0.086,12,0.007,17,0.313,18,1.182,21,0.097,22,0.148,27,0.006,28,0.007,29,0.006,114,1.33,115,2.273,992,5.901,995,6.265]],["title/classes/CreateAuthCommand.html",[22,0.097,996,3.497]],["body/classes/CreateAuthCommand.html",[3,0.072,4,0.063,5,0.072,8,0.3,12,0.007,13,0.683,17,0.331,21,0.082,22,0.125,24,2.466,27,0.005,28,0.006,29,0.005,41,1.368,45,1.201,46,2.518,47,0.619,49,1.963,53,0.903,54,0.517,55,0.435,93,5.277,172,2.805,174,4.855,175,4.686,178,2.897,286,4.26,533,3.18,534,2.664,996,5.662,997,7.236,998,5.298,999,8.154,1000,5.97,1001,5.97,1002,4.524,1003,5.97]],["title/classes/CreateAuthHandler.html",[22,0.097,1004,3.497]],["body/classes/CreateAuthHandler.html",[3,0.059,4,0.051,5,0.059,8,0.246,9,1.078,12,0.008,13,0.6,15,0.788,17,0.351,18,0.82,21,0.068,22,0.103,24,1.987,25,1.239,27,0.006,28,0.005,29,0.004,41,1.122,47,0.681,49,1.727,53,0.994,54,0.569,55,0.383,93,3.024,136,2.66,140,2.931,172,2.466,175,2.608,178,2.376,188,3.314,276,5.343,277,3.711,278,4.858,284,2.115,286,3.494,288,2.585,290,2.172,294,2.525,472,3.314,475,3.024,996,6.263,1004,6.004,1005,6.579,1006,3.982,1007,7.414,1008,7.414,1009,7.923,1010,4.345,1011,6.57,1012,4.897,1013,5.83,1014,4.897,1015,4.897,1016,4.897,1017,4.897,1018,4.345,1019,4.897,1020,6.57,1021,4.897,1022,4.897,1023,4.897,1024,4.897,1025,4.897,1026,4.897,1027,3.159,1028,4.897]],["title/interfaces/DBSource.html",[335,2.307,769,0.757]],["body/interfaces/DBSource.html",[3,0.056,4,0.048,5,0.056,8,0.387,12,0.008,16,0.942,17,0.204,21,0.126,27,0.004,28,0.005,29,0.004,43,1.362,45,1.012,54,0.398,55,0.366,159,2.725,212,1.577,228,2.65,231,2.665,236,2.897,248,1.943,257,1.996,263,1.308,266,2.106,284,2.688,290,2.125,334,2.297,335,3.145,353,3.638,354,4.103,360,2.229,366,3.351,374,2.297,387,2.297,392,3.145,407,2.297,408,2.297,424,1.852,426,2.229,434,3.858,530,1.308,553,2.05,597,1.543,622,2.623,671,2.837,676,2.837,708,2.725,710,2.837,712,2.297,717,2.837,719,3.593,751,2.725,769,1.403,770,2.725,771,2.964,772,4.06,773,2.725,774,2.725,775,2.837,776,2.964,777,2.964,778,2.964,779,4.06,780,2.837,781,4.06,782,2.964,783,2.964,784,2.725]],["title/classes/DatabaseClient.html",[22,0.097,1029,3.752]],["body/classes/DatabaseClient.html",[3,0.036,4,0.031,5,0.036,8,0.148,9,0.749,12,0.008,13,0.721,15,0.896,16,0.897,17,0.278,21,0.041,22,0.062,25,1.181,27,0.002,28,0.004,29,0.002,41,0.678,43,1.352,45,0.734,47,0.741,49,1.464,53,0.69,54,0.395,55,0.434,57,2.784,103,2.14,106,1.356,136,2.565,140,2.036,248,1.409,263,2.295,284,2.717,288,3.32,290,1.646,336,2.352,353,2.952,354,2.952,404,1.319,424,3.308,425,4.295,433,1.826,434,4.103,472,2.001,475,1.826,476,3.457,597,2.709,600,4.049,602,4.049,603,5.418,625,4.179,626,5.557,629,2.624,701,2.405,738,2.241,1029,6.258,1030,2.624,1031,5.57,1032,5.57,1033,5.57,1034,4.981,1035,6.345,1036,3.714,1037,4.562,1038,4.562,1039,2.957,1040,2.957,1041,5.647,1042,2.957,1043,2.957,1044,2.957,1045,4.562,1046,8.065,1047,5.647,1048,2.957,1049,4.562,1050,4.562,1051,2.957,1052,6.262,1053,4.562,1054,4.562,1055,2.957,1056,2.957,1057,4.049,1058,2.957,1059,2.957,1060,4.562,1061,2.957,1062,2.957,1063,1.689,1064,2.957,1065,2.957,1066,2.957,1067,2.957,1068,2.957,1069,2.624,1070,2.624,1071,2.957,1072,2.405,1073,2.957,1074,2.957,1075,2.957,1076,2.957,1077,2.957,1078,2.957,1079,2.957,1080,2.957]],["title/classes/Deferred.html",[22,0.097,1041,3.497]],["body/classes/Deferred.html",[3,0.071,4,0.061,5,0.071,8,0.292,12,0.007,13,0.774,21,0.08,22,0.122,27,0.005,28,0.006,29,0.005,41,1.335,45,1.183,49,2.119,51,2.912,55,0.339,103,2.239,263,2.486,284,2.812,403,3.759,404,2.599,597,2.934,700,7.516,701,7.103,822,4.157,1041,6.111,1069,5.17,1081,5.17,1082,5.826,1083,5.826,1084,5.826,1085,5.826,1086,7.357,1087,5.826,1088,5.826,1089,5.826,1090,5.826,1091,5.826,1092,5.826]],["title/interfaces/Document.html",[360,2.239,769,0.757]],["body/interfaces/Document.html",[3,0.056,4,0.048,5,0.056,8,0.388,12,0.008,13,0.422,16,1.016,17,0.205,21,0.126,27,0.004,28,0.005,29,0.004,43,1.368,45,1.015,47,0.654,54,0.4,55,0.269,159,2.738,212,2.655,228,2.655,231,3.275,236,2.903,248,1.949,257,2.006,263,1.797,266,2.116,284,2.032,290,2.128,334,2.307,335,2.307,353,2.976,354,3.391,360,3.063,366,3.362,374,2.307,387,2.307,392,3.155,407,2.307,408,2.307,424,1.86,426,2.24,434,2.307,530,1.314,553,2.816,597,2.121,622,2.636,671,2.851,676,2.851,708,2.738,710,2.851,712,2.307,717,2.851,719,3.605,751,2.738,769,1.405,770,2.738,771,2.978,772,4.073,773,2.738,774,2.738,775,2.851,776,2.978,777,2.978,778,2.978,779,4.073,780,2.851,781,4.073,782,2.978,783,2.978,784,2.738,1093,3.754,1094,4.616]],["title/classes/DtoMapperUtils.html",[22,0.097,590,3.497]],["body/classes/DtoMapperUtils.html",[3,0.041,4,0.035,5,0.041,8,0.168,9,0.825,12,0.008,13,0.654,15,1.208,16,0.586,17,0.149,21,0.046,22,0.126,25,1.417,27,0.003,28,0.004,29,0.003,41,0.77,46,1.859,47,0.742,53,1.238,54,0.62,55,0.477,57,3.341,103,2.75,128,4.86,131,2.075,219,5.36,236,2.261,240,1.498,248,2.743,257,3.833,268,2.545,290,0.882,358,3.401,361,5.073,472,2.272,475,2.074,476,6.913,495,2.769,496,2.676,590,3.808,603,3.808,625,4.128,743,1.917,821,4.897,986,5.931,1063,2.869,1095,6.665,1096,2.98,1097,5.025,1098,5.025,1099,3.358,1100,4.459,1101,5.025,1102,5.025,1103,7.157,1104,7.511,1105,3.358,1106,5.025,1107,7.511,1108,3.358,1109,4.459,1110,6.684,1111,3.358,1112,3.358,1113,2.545,1114,2.396,1115,3.358,1116,3.358,1117,3.358,1118,3.358,1119,3.358,1120,3.358,1121,3.358,1122,3.358,1123,3.358,1124,3.358]],["title/interfaces/EntityOptions.html",[769,0.757,1125,3.752]],["body/interfaces/EntityOptions.html",[3,0.069,4,0.059,5,0.069,8,0.284,12,0.007,16,1.032,21,0.078,27,0.004,28,0.006,29,0.004,45,1.161,47,0.868,54,0.813,55,0.42,130,2.84,248,1.746,257,3.137,263,2.263,326,5.471,334,4.188,354,3.403,404,2.523,530,1.61,597,1.9,769,0.928,793,4.714,835,4.658,845,5.019,1100,6.407,1125,5.871,1126,5.019,1127,5.019,1128,5.656,1129,6.407,1130,4.886,1131,7.22]],["title/injectables/ErrorsInterceptor.html",[114,0.742,1132,3.752]],["body/injectables/ErrorsInterceptor.html",[3,0.067,4,0.058,5,0.067,8,0.279,9,1.172,12,0.008,13,0.508,15,0.894,17,0.35,18,0.931,21,0.077,22,0.116,25,1.488,27,0.004,28,0.006,29,0.004,44,5.411,47,0.576,53,0.841,54,0.482,55,0.324,56,4.832,91,2.96,114,1.148,115,1.789,172,2.087,309,5.94,311,5.978,312,3.586,534,3.519,1027,3.586,1132,5.806,1133,4.932,1134,5.806,1135,5.806,1136,6.769,1137,5.558,1138,5.806,1139,4.932,1140,4.52,1141,5.558,1142,4.52,1143,7.14,1144,6.336,1145,5.558,1146,5.558,1147,7.14,1148,7.14]],["title/injectables/EventStore.html",[114,0.742,1149,3.293]],["body/injectables/EventStore.html",[3,0.031,4,0.027,5,0.031,8,0.128,9,0.665,12,0.008,13,0.688,15,0.812,16,0.82,17,0.312,18,0.426,21,0.035,22,0.085,24,2.278,25,1.087,27,0.002,28,0.003,29,0.002,45,0.651,47,0.597,49,1.065,51,2.025,53,1.014,54,0.499,55,0.467,96,1.31,114,0.651,115,0.818,136,2.525,140,1.807,172,0.954,173,1.926,178,1.233,187,3.71,228,1.391,240,1.134,288,3.285,290,2.169,294,1.31,312,1.64,361,3.594,404,1.807,472,2.742,475,2.502,495,1.4,496,1.353,516,3.12,533,2.69,534,2.254,625,1.57,705,3.595,738,3.828,741,2.255,822,1.813,867,1.27,1002,3.828,1018,2.255,1027,2.614,1036,1.507,1063,1.451,1149,5.374,1150,4.253,1151,6.278,1152,2.255,1153,7.037,1154,6.295,1155,5.051,1156,4.483,1157,4.051,1158,4.051,1159,4.051,1160,2.541,1161,3.718,1162,4.483,1163,4.112,1164,4.051,1165,4.051,1166,6.708,1167,2.541,1168,4.051,1169,2.541,1170,4.051,1171,2.541,1172,2.541,1173,2.541,1174,2.541,1175,2.541,1176,4.051,1177,4.051,1178,3.595,1179,2.525,1180,2.255,1181,1.813,1182,1.926,1183,2.067,1184,2.067,1185,1.926,1186,2.541,1187,4.051,1188,2.255,1189,3.294,1190,2.541,1191,4.051,1192,2.541,1193,2.541,1194,2.541,1195,2.541,1196,2.541,1197,2.541,1198,2.255,1199,2.541,1200,2.541,1201,2.541,1202,4.051,1203,2.541,1204,4.051,1205,2.541,1206,2.541,1207,2.541,1208,2.541,1209,2.541,1210,2.541,1211,2.541,1212,4.051,1213,2.541,1214,4.051,1215,2.541,1216,2.541,1217,4.108,1218,4.051,1219,2.541,1220,5.051,1221,4.051,1222,2.541,1223,4.051,1224,2.541,1225,4.051,1226,3.595,1227,2.541,1228,2.742,1229,4.051,1230,4.051,1231,2.541,1232,2.541,1233,2.541,1234,2.541,1235,2.541,1236,2.541,1237,2.541,1238,2.541,1239,2.541,1240,4.051,1241,2.541,1242,4.051,1243,2.541,1244,2.541,1245,2.541,1246,2.541,1247,4.051,1248,2.541,1249,4.051,1250,2.541,1251,2.541,1252,2.541]],["title/interfaces/EventStoreOptionConfig.html",[769,0.757,1163,3.293]],["body/interfaces/EventStoreOptionConfig.html",[3,0.078,4,0.067,5,0.078,8,0.321,12,0.007,16,1.064,21,0.088,27,0.005,28,0.006,29,0.005,45,1.255,47,0.808,54,0.759,55,0.454,187,2.713,228,2.889,530,1.823,769,1.051,1150,3.529,1151,5.209,1156,7.772,1163,5.568,1179,3.202,1253,5.684]],["title/injectables/ExitInterceptor.html",[114,0.742,1254,3.752]],["body/injectables/ExitInterceptor.html",[3,0.065,4,0.056,5,0.065,8,0.267,9,1.14,12,0.008,13,0.487,15,0.857,17,0.363,18,0.892,21,0.074,22,0.112,25,1.545,27,0.004,28,0.005,29,0.004,44,5.265,46,2.387,47,0.552,53,0.806,54,0.462,55,0.31,91,2.838,114,1.117,115,1.715,172,2,309,5.846,311,5.858,312,3.438,476,4.038,534,3.449,1027,3.438,1134,5.65,1135,5.65,1136,6.662,1138,5.65,1139,4.728,1140,4.333,1142,4.333,1228,3.606,1254,5.65,1255,6.165,1256,4.728,1257,5.329,1258,5.329,1259,4.333,1260,3.291,1261,3.291,1262,2.936,1263,4.038,1264,5.329,1265,6.947,1266,5.329,1267,5.329,1268,5.329,1269,5.329,1270,5.329,1271,5.329]],["title/classes/FacebookAuth.html",[22,0.097,1272,3.293]],["body/classes/FacebookAuth.html",[3,0.061,4,0.053,5,0.061,8,0.251,12,0.008,13,0.731,16,1.087,21,0.104,22,0.157,27,0.004,28,0.005,29,0.004,41,1.148,45,1.073,54,0.693,55,0.499,106,4.162,212,2.745,222,2.972,266,4.162,465,4.756,499,3.797,592,5.858,1272,4.761,1273,3.797,1274,5.707,1275,5.011,1276,5.011,1277,5.011,1278,5.011,1279,3.576,1280,4.075,1281,5.426]],["title/injectables/FacebookStrategy.html",[114,0.742,320,3.293]],["body/injectables/FacebookStrategy.html",[3,0.063,4,0.055,5,0.063,8,0.262,9,1.124,12,0.008,13,0.626,15,0.838,16,1.01,17,0.36,18,0.873,21,0.072,22,0.109,23,3.364,24,1.577,25,0.983,27,0.004,28,0.005,29,0.004,31,3.24,43,1.545,47,0.71,49,1.37,53,1.036,54,0.593,55,0.399,96,3.944,103,2.003,114,1.101,115,1.678,136,2.744,140,2.326,160,3.951,284,2.205,290,1.37,291,3.364,318,5.349,320,4.887,323,3.951,326,3.951,433,3.22,437,4.24,455,4.639,465,2.977,985,3.951,1282,4.626,1283,6.078,1284,5.214,1285,6.078,1286,5.214,1287,4.626,1288,6.078,1289,4.626,1290,5.214,1291,5.214,1292,5.214,1293,5.214,1294,5.214,1295,5.214,1296,5.214,1297,4.626,1298,5.214]],["title/interfaces/FindRequest.html",[374,2.307,769,0.757]],["body/interfaces/FindRequest.html",[3,0.054,4,0.046,5,0.054,8,0.382,12,0.008,16,0.931,17,0.197,21,0.125,27,0.003,28,0.005,29,0.003,43,1.315,45,0.988,47,0.894,54,0.384,55,0.465,159,2.631,212,1.523,228,2.61,231,2.601,236,3.24,248,1.897,257,1.928,263,1.263,266,2.034,284,1.977,290,2.098,334,2.217,335,2.217,353,2.895,354,3.321,360,2.152,366,4.252,374,3.07,387,2.217,392,3.07,407,2.217,408,2.217,424,1.788,426,2.152,434,2.217,530,1.263,553,1.979,597,1.49,622,2.533,671,2.74,676,2.74,708,2.631,710,2.74,712,2.217,717,2.74,719,3.507,751,4.51,769,1.39,770,2.631,771,2.862,772,3.963,773,2.631,774,2.631,775,2.74,776,4.906,777,4.906,778,4.906,779,3.963,780,2.74,781,3.963,782,2.862,783,2.862,784,2.631]],["title/injectables/GeneratorService.html",[114,0.742,517,2.977]],["body/injectables/GeneratorService.html",[3,0.072,4,0.062,5,0.072,8,0.296,9,1.217,12,0.008,13,0.677,15,1.192,16,1.043,17,0.329,18,0.988,21,0.081,22,0.124,25,1.398,27,0.005,28,0.006,29,0.005,46,2.763,47,0.611,53,0.892,54,0.511,55,0.343,114,1.192,115,1.899,517,4.783,551,6.579,799,7.276,1299,5.233,1300,7.414,1301,5.897,1302,7.414,1303,5.897,1304,5.897,1305,5.897]],["title/classes/GetAuthHandler.html",[22,0.097,1306,3.497]],["body/classes/GetAuthHandler.html",[3,0.066,4,0.057,5,0.066,8,0.272,9,1.153,12,0.008,13,0.642,15,0.871,17,0.365,18,0.907,21,0.075,22,0.113,24,1.639,25,1.022,27,0.004,28,0.006,29,0.004,41,1.242,47,0.728,49,1.846,53,1.062,54,0.609,55,0.409,136,2.796,140,2.417,172,2.637,175,2.886,178,2.629,188,3.667,275,6.915,276,5.711,277,4.106,278,4.997,280,6.232,283,4.531,284,2.261,285,4.808,286,3.866,288,2.132,289,4.808,290,1.424,291,3.496,292,4.808,293,4.808,1006,4.406,1010,4.808,1306,5.322,1307,6.915,1308,6.473,1309,5.418,1310,5.418,1311,5.418]],["title/classes/GetAuthQuery.html",[22,0.097,1308,3.497]],["body/classes/GetAuthQuery.html",[3,0.074,4,0.064,5,0.074,8,0.307,12,0.007,13,0.693,17,0.366,21,0.085,22,0.128,24,2.495,27,0.005,28,0.006,29,0.005,41,1.403,45,1.22,46,2.546,47,0.634,49,1.994,53,0.926,54,0.53,55,0.442,172,2.849,175,3.26,178,2.97,286,4.368,298,7.318,1308,5.75,1312,7.318,1313,5.432,1314,6.121,1315,8.862,1316,6.121,1317,6.121,1318,3.781]],["title/classes/GoogleAuth.html",[22,0.097,1279,3.293]],["body/classes/GoogleAuth.html",[3,0.061,4,0.053,5,0.061,8,0.251,12,0.008,13,0.731,16,1.087,21,0.104,22,0.157,27,0.004,28,0.005,29,0.004,41,1.148,45,1.073,54,0.693,55,0.499,106,4.162,212,2.745,222,2.972,266,4.162,465,4.756,499,3.797,592,5.858,1272,3.576,1273,3.797,1274,5.707,1279,4.761,1280,4.075,1281,5.426,1319,5.011,1320,5.011,1321,5.011,1322,5.011]],["title/guards/GqlAuthGuard.html",[303,3.752,450,3.497]],["body/guards/GqlAuthGuard.html",[3,0.074,4,0.064,5,0.074,8,0.306,9,1.243,12,0.008,13,0.557,15,0.981,17,0.336,18,1.022,21,0.084,22,0.128,25,1.151,27,0.005,28,0.006,29,0.005,47,0.632,53,0.923,54,0.529,55,0.355,91,3.25,172,2.843,228,2.6,290,1.604,305,4.962,307,7.857,308,6.72,309,6.145,448,3.25,450,5.739,1323,6.72,1324,5.415,1325,6.102,1326,6.102,1327,4.624,1328,6.102,1329,6.102,1330,6.102]],["title/injectables/GraphQLTypesLoader.html",[114,0.742,1331,3.293]],["body/injectables/GraphQLTypesLoader.html",[3,0.053,4,0.046,5,0.053,8,0.22,9,0.998,12,0.008,13,0.556,15,0.978,16,1.051,17,0.374,18,0.733,21,0.06,22,0.092,25,1.426,27,0.003,28,0.005,29,0.003,46,2.54,47,0.63,53,0.92,54,0.527,55,0.407,90,4.733,106,2.006,114,0.978,115,1.409,136,2.951,140,2.714,228,1.502,283,2.823,284,2.434,290,2.161,294,2.256,406,2.595,496,2.331,1114,3.123,1331,4.341,1332,3.854,1333,4.733,1334,3.559,1335,6.084,1336,6.084,1337,6.084,1338,4.376,1339,6.994,1340,6.084,1341,4.376,1342,6.084,1343,4.376,1344,5.399,1345,4.376,1346,4.376,1347,4.376,1348,4.376,1349,4.376,1350,6.084,1351,3.559,1352,3.883,1353,4.376,1354,3.559,1355,4.376,1356,4.376,1357,4.376,1358,4.376,1359,4.376,1360,4.376,1361,4.376,1362,6.084,1363,4.376,1364,4.376,1365,4.376,1366,4.376,1367,4.376,1368,4.376,1369,4.376,1370,4.376,1371,4.376,1372,4.376]],["title/injectables/GraphqlDistributedFactory.html",[114,0.742,1373,3.293]],["body/injectables/GraphqlDistributedFactory.html",[3,0.047,4,0.041,5,0.047,8,0.196,9,0.922,12,0.008,13,0.601,15,0.903,17,0.388,18,0.654,21,0.054,22,0.082,24,2.398,25,1.059,27,0.003,28,0.004,29,0.003,46,2.03,47,0.681,49,1.476,53,0.994,54,0.57,55,0.383,101,3.177,114,0.903,115,1.258,130,1.537,131,1.614,136,2.359,248,1.734,284,1.808,288,3.348,290,1.476,448,2.081,495,3.094,496,2.991,1063,2.231,1260,2.413,1261,2.413,1262,2.153,1332,3.96,1333,4.864,1373,4.007,1374,3.467,1375,5.616,1376,5.616,1377,3.907,1378,7.034,1379,7.247,1380,7.247,1381,5.527,1382,6.641,1383,6.574,1384,6.378,1385,3.907,1386,5.616,1387,3.907,1388,5.834,1389,5.616,1390,4.864,1391,3.907,1392,5.616,1393,3.467,1394,3.467,1395,4.567,1396,3.467,1397,3.467,1398,5.346,1399,3.467,1400,3.467,1401,3.467,1402,3.467,1403,3.907,1404,3.907,1405,3.907,1406,3.907,1407,3.907,1408,3.907,1409,3.907,1410,3.907,1411,5.616,1412,4.983,1413,3.907,1414,3.907,1415,3.907,1416,5.616,1417,3.907]],["title/modules/GraphqlDistributedGatewayModule.html",[63,1.367,75,3.293]],["body/modules/GraphqlDistributedGatewayModule.html",[3,0.051,4,0.044,5,0.051,9,0.696,12,0.008,13,0.544,15,0.957,17,0.361,18,0.71,21,0.059,22,0.089,24,1.801,25,1.297,27,0.003,28,0.005,29,0.003,46,2.124,47,0.713,49,1.115,53,0.641,54,0.368,55,0.247,63,2.038,65,1.892,70,1.944,75,4.908,83,3.841,89,4.029,92,4.248,102,5.283,103,2.287,104,4.841,128,3.28,134,4.511,136,2.136,172,1.592,248,2.303,288,2.706,290,1.96,495,2.337,496,2.259,530,1.207,867,2.12,1063,2.422,1260,2.62,1261,2.62,1262,2.337,1332,3.79,1333,4.655,1418,6.103,1419,4.242,1420,3.027,1421,5.283,1422,5.315,1423,4.242,1424,4.438,1425,6.97,1426,4.242,1427,5.953,1428,2.87,1429,6.103,1430,2.62,1431,6.618,1432,4.841,1433,3.764,1434,2.737,1435,3.214,1436,4.242,1437,5.283,1438,5.283,1439,3.764,1440,5.953,1441,5.953,1442,5.283,1443,5.283,1444,5.283,1445,5.953,1446,5.953,1447,3.764,1448,3.764,1449,3.764,1450,3.764]],["title/modules/GraphqlDistributedModule.html",[63,1.367,1451,3.497]],["body/modules/GraphqlDistributedModule.html",[3,0.03,4,0.026,5,0.03,9,0.407,12,0.008,13,0.568,15,1,17,0.376,18,0.415,21,0.034,22,0.052,24,1.881,25,1.366,27,0.002,28,0.003,29,0.002,46,1.755,47,0.687,49,0.652,53,0.859,54,0.492,55,0.331,63,1.843,65,1.106,66,1.077,67,1.278,68,1.278,69,1.203,70,2.85,71,2.484,76,2.048,77,1.278,78,1.278,80,1.678,87,2.2,89,2.688,90,2.688,101,2.016,103,1.526,104,3.23,128,3.99,130,0.975,131,1.024,134,3.01,136,1.425,140,2.217,172,0.931,248,2.306,288,3.014,290,1.744,291,1.6,448,1.321,495,3.131,496,3.026,628,4.41,631,2.2,864,2.356,867,2.484,904,2.016,1063,1.416,1260,1.531,1261,1.531,1262,1.366,1331,5.856,1332,3.655,1333,4.49,1373,5.167,1378,3.525,1379,3.525,1380,3.525,1381,4.49,1382,5.889,1384,3.525,1390,4.208,1393,2.2,1394,2.2,1395,2.016,1396,2.2,1397,2.2,1398,4.041,1399,2.2,1400,2.2,1401,2.2,1402,2.2,1412,3.525,1420,1.769,1421,3.525,1424,4.012,1425,5.518,1429,4.41,1430,1.531,1431,4.41,1434,4.012,1435,3.01,1437,3.525,1438,3.525,1439,2.2,1442,3.525,1443,3.525,1444,3.525,1447,2.2,1448,2.2,1449,2.2,1450,2.2,1451,6.219,1452,2.2,1453,2.2,1454,2.2,1455,2.479,1456,3.525,1457,2.2,1458,7.662,1459,2.479,1460,5.056,1461,3.525,1462,2.2,1463,2.479,1464,2.479,1465,1.769,1466,3.01,1467,2.479,1468,2.479,1469,2.479,1470,3.525,1471,2.2,1472,2.2,1473,3.972,1474,5.682,1475,3.972,1476,5.042,1477,2.2,1478,3.972,1479,2.479,1480,2.479,1481,2.479,1482,2.479,1483,2.479,1484,2.479,1485,2.479,1486,2.479,1487,2.2,1488,2.2,1489,3.525,1490,4.41,1491,3.525,1492,4.41,1493,1.769,1494,2.2,1495,2.2,1496,2.479,1497,2.2,1498,2.479,1499,2.479,1500,3.972,1501,2.479,1502,2.479,1503,2.479,1504,2.479,1505,2.479,1506,2.479,1507,2.479,1508,2.479,1509,2.479,1510,2.479,1511,2.479]],["title/classes/GraphqlErrors.html",[22,0.097,1512,3.752]],["body/classes/GraphqlErrors.html",[3,0.071,4,0.061,5,0.071,8,0.294,9,1.212,12,0.007,13,0.536,15,0.943,16,1.079,17,0.26,21,0.081,22,0.123,25,1.106,27,0.005,28,0.006,29,0.005,41,1.343,45,1.365,47,0.607,53,0.886,54,0.508,55,0.341,56,5.745,57,3.692,103,2.252,128,4.455,131,2.421,148,6.554,290,1.54,639,5.201,1144,7.533,1259,4.767,1260,3.62,1261,3.62,1262,3.23,1512,6.006,1513,5.201,1514,5.597,1515,7.385,1516,5.862,1517,5.862,1518,5.862,1519,5.201]],["title/classes/HeadersDatasource.html",[22,0.097,84,3.497]],["body/classes/HeadersDatasource.html",[3,0.06,4,0.052,5,0.06,6,5.037,8,0.248,9,1.084,12,0.008,13,0.603,15,1.062,17,0.293,21,0.068,22,0.103,25,0.931,27,0.004,28,0.005,29,0.004,41,1.131,43,1.957,47,0.684,53,0.999,54,0.572,84,5.004,88,3.047,91,4.413,106,2.262,136,2.67,140,2.201,152,5.607,240,2.201,290,2.089,533,2.628,534,2.201,553,2.201,558,5.86,675,3.339,1002,3.739,1217,4.013,1263,3.739,1428,3.339,1520,4.379,1521,7.443,1522,6.603,1523,7.443,1524,6.603,1525,4.934,1526,4.013,1527,4.934,1528,4.934,1529,4.934,1530,5.004,1531,4.379,1532,7.443,1533,6.603,1534,6.603,1535,4.934,1536,4.934,1537,4.934,1538,6.603,1539,4.934,1540,4.934,1541,4.934,1542,4.934,1543,4.934,1544,4.934,1545,4.934,1546,4.934]],["title/classes/HttpExceptionFilter.html",[22,0.097,1547,3.752]],["body/classes/HttpExceptionFilter.html",[3,0.051,4,0.044,5,0.051,8,0.211,9,0.972,12,0.008,13,0.679,15,0.953,17,0.347,18,0.706,21,0.058,22,0.124,27,0.003,28,0.005,29,0.003,41,0.966,45,0.953,46,1.83,47,0.71,49,1.107,53,1.037,54,0.594,55,0.433,56,2.852,59,3.193,130,1.658,172,2.225,240,2.644,288,2.696,290,2.136,475,4.233,589,3.007,627,3.427,921,5.573,1027,2.719,1109,5.258,1113,3.193,1114,3.007,1142,3.427,1262,2.322,1327,3.193,1430,2.602,1526,5.573,1547,4.819,1548,6.953,1549,3.739,1550,6.082,1551,7.687,1552,5.926,1553,3.739,1554,4.214,1555,4.214,1556,5.926,1557,6.326,1558,4.214,1559,6.854,1560,5.258,1561,7.436,1562,6.599,1563,4.214,1564,3.739,1565,4.214,1566,3.739,1567,3.739,1568,6.082,1569,4.214,1570,4.214,1571,4.214,1572,4.214,1573,4.214,1574,4.214,1575,4.214,1576,4.214,1577,4.214,1578,4.214,1579,4.214,1580,3.739,1581,5.258,1582,4.214,1583,3.739,1584,4.214,1585,4.214,1586,4.214,1587,4.214,1588,4.214,1589,4.214,1590,4.214,1591,4.214,1592,4.214]],["title/interfaces/IAuthRepo.html",[769,0.757,1593,3.752]],["body/interfaces/IAuthRepo.html",[3,0.071,4,0.061,5,0.071,8,0.291,9,1.205,12,0.008,13,0.671,15,1.361,17,0.257,21,0.08,27,0.005,28,0.006,29,0.005,47,0.761,53,1.111,54,0.636,55,0.428,175,4.747,207,5.24,222,5.018,284,2.869,428,3.445,530,1.653,625,4.535,769,0.953,1179,3.671,1593,5.972,1594,7.146,1595,4.402,1596,7.343,1597,7.343,1598,5.155,1599,7.343,1600,5.155]],["title/interfaces/IAwsConfigInterface.html",[769,0.757,895,3.497]],["body/interfaces/IAwsConfigInterface.html",[3,0.078,4,0.068,5,0.078,8,0.324,12,0.007,16,1.097,21,0.089,27,0.005,28,0.006,29,0.005,45,1.26,55,0.491,530,1.835,769,1.058,895,5.937,943,7.789,945,7.789,947,7.789,1601,5.722,1602,3.982]],["title/interfaces/IConstraintErrors.html",[769,0.757,1603,3.497]],["body/interfaces/IConstraintErrors.html",[3,0.082,4,0.07,5,0.082,12,0.007,13,0.614,16,1.037,21,0.093,27,0.005,28,0.006,29,0.005,290,1.765,530,1.912,769,1.102,1093,5.462,1580,7.125,1603,6.509,1604,6.53,1605,5.462,1606,6.717,1607,5.09,1608,5.96,1609,5.96]],["title/interfaces/IDistributedGatewayOptions.html",[769,0.757,1422,3.123]],["body/interfaces/IDistributedGatewayOptions.html",[3,0.075,4,0.065,5,0.075,12,0.008,16,0.892,17,0.368,21,0.086,27,0.005,28,0.006,29,0.005,43,2.267,54,0.537,63,1.837,83,4,92,4.424,94,4.698,448,3.302,530,1.764,533,3.302,534,2.766,769,1.361,1332,3.416,1390,4.196,1422,5.176,1428,4.196,1610,4.698,1611,4,1612,5.176,1613,5.042,1614,6.22,1615,5.042,1616,4.424,1617,5.042,1618,5.458,1619,5.458]],["title/interfaces/IEventSourceConfig.html",[769,0.757,896,3.293]],["body/interfaces/IEventSourceConfig.html",[3,0.066,4,0.073,5,0.066,8,0.271,12,0.007,16,1.063,21,0.075,27,0.004,28,0.006,29,0.004,45,1.127,47,0.935,55,0.536,107,5.573,236,3.283,455,3.085,530,1.538,712,2.701,769,1.151,896,5.002,923,6.09,925,3.855,949,6.09,952,5.877,956,5.877,958,3.656,1602,3.337,1620,4.394,1621,6.241,1622,5.573,1623,5.314]],["title/interfaces/IEventStoreConnectConfig.html",[769,0.757,1161,2.977]],["body/interfaces/IEventStoreConnectConfig.html",[3,0.07,4,0.061,5,0.07,8,0.29,12,0.008,16,1.054,21,0.08,27,0.005,28,0.006,29,0.005,45,1.176,55,0.518,107,3.908,187,2.445,236,3.169,455,3.297,530,1.643,712,2.886,769,1.201,923,5.73,925,4.12,949,5.22,952,5.22,956,4.12,958,3.908,1036,3.425,1150,3.181,1161,4.72,1179,2.886,1602,3.566,1621,4.376,1622,5.713,1623,4.72,1624,4.696,1625,6.865,1626,7.492]],["title/interfaces/IEventStoreMessage.html",[769,0.757,1627,3.752]],["body/interfaces/IEventStoreMessage.html",[3,0.067,4,0.058,5,0.067,8,0.279,12,0.007,16,1.069,21,0.077,27,0.004,28,0.006,29,0.004,45,1.148,48,6.308,51,4.405,55,0.529,187,3.024,225,4.678,228,2.708,236,2.961,530,1.582,769,0.912,1150,3.062,1226,7.387,1228,5.633,1627,5.806,1628,4.932,1629,4.932,1630,5.633,1631,8.324,1632,8.324,1633,8.324,1634,8.324]],["title/interfaces/IFile.html",[522,3.497,769,0.757]],["body/interfaces/IFile.html",[3,0.072,4,0.062,5,0.072,8,0.298,12,0.007,16,1.101,21,0.082,27,0.005,28,0.006,29,0.005,45,1.197,55,0.522,236,3.053,522,5.64,530,1.689,708,5.057,769,0.974,780,5.266,1635,5.265,1636,9.094,1637,8.526,1638,7.566,1639,8.526]],["title/interfaces/IGosipConfig.html",[769,0.757,1623,2.977]],["body/interfaces/IGosipConfig.html",[3,0.074,4,0.079,5,0.074,8,0.305,12,0.007,16,1.066,21,0.084,27,0.005,28,0.006,29,0.005,45,1.216,55,0.44,107,4.117,236,3.385,455,3.473,530,1.731,712,3.041,769,1.24,896,4.341,923,6.312,925,4.341,949,6.312,952,4.341,956,4.341,958,4.117,1602,3.757,1620,4.947,1621,4.61,1623,5.306]],["title/interfaces/IGosipConfig-1.html",[30,2.603,769,0.631,1623,2.482]],["body/interfaces/IGosipConfig-1.html",[3,0.071,4,0.061,5,0.071,8,0.293,12,0.008,16,1.079,21,0.081,27,0.005,28,0.006,29,0.005,45,1.185,55,0.429,107,3.955,187,2.475,236,3.351,455,3.337,530,1.663,712,2.921,769,1.21,923,6.37,925,4.17,949,6.238,952,5.26,956,4.17,958,3.955,1036,3.466,1150,3.22,1161,3.77,1179,2.921,1602,3.609,1621,4.429,1623,5.21,1624,4.752,1625,4.752,1626,5.186]],["title/interfaces/IPageMetaDtoParameters.html",[769,0.757,1640,3.497]],["body/interfaces/IPageMetaDtoParameters.html",[3,0.068,4,0.059,5,0.068,8,0.283,12,0.008,17,0.319,21,0.078,22,0.118,24,2.532,27,0.004,28,0.006,29,0.004,45,1.159,49,1.482,55,0.42,236,3.375,530,1.605,748,5.461,752,4.274,753,7.033,760,4.024,766,4.274,767,5.461,769,0.925,1640,6.019,1641,4.274,1642,4.586,1643,7.979,1644,6.56,1645,5.004,1646,4.274,1647,5.004,1648,5.004,1649,5.004,1650,5.004,1651,5.004,1652,5.004]],["title/interfaces/IServiceList.html",[769,0.757,1618,3.293]],["body/interfaces/IServiceList.html",[3,0.073,4,0.063,5,0.073,8,0.303,12,0.008,16,0.878,17,0.363,21,0.083,27,0.005,28,0.006,29,0.005,43,1.791,45,1.211,54,0.524,55,0.352,63,1.791,83,3.9,92,6.124,94,4.581,448,3.219,530,1.72,533,3.219,534,2.697,769,1.346,1332,3.33,1390,4.091,1422,4.091,1428,4.091,1610,4.581,1611,3.9,1612,4.091,1613,4.916,1614,6.123,1615,4.916,1616,4.313,1617,4.916,1618,5.852,1619,6.124]],["title/interfaces/ITenantRepo.html",[769,0.757,1653,3.752]],["body/interfaces/ITenantRepo.html",[3,0.059,4,0.051,5,0.059,8,0.244,9,1.075,12,0.008,13,0.722,15,1.419,16,1.029,17,0.29,21,0.067,27,0.004,28,0.005,29,0.004,47,0.819,53,1.196,54,0.685,55,0.46,89,4.431,212,2.248,264,3.376,284,2.955,428,2.89,530,1.387,625,4.884,769,0.8,1179,3.273,1595,3.692,1598,4.323,1600,4.323,1653,5.325,1654,7.321,1655,5.81,1656,5.81,1657,6.548,1658,5.81,1659,5.583,1660,5.325,1661,5.81,1662,6.548,1663,4.872,1664,6.548,1665,5.323,1666,4.872,1667,4.323]],["title/interfaces/IUserRepo.html",[769,0.757,1668,3.752]],["body/interfaces/IUserRepo.html",[3,0.059,4,0.051,5,0.059,8,0.245,9,1.076,12,0.008,13,0.723,15,1.42,16,1.013,17,0.291,21,0.067,27,0.004,28,0.005,29,0.004,47,0.82,53,1.197,54,0.686,55,0.461,212,2.252,258,5.251,284,2.956,428,2.897,465,3.745,530,1.39,625,4.889,769,0.802,1179,3.278,1595,3.701,1655,5.82,1656,5.82,1658,5.82,1659,5.588,1660,5.334,1661,5.82,1665,3.151,1667,4.334,1668,5.334,1669,7.327,1670,6.559,1671,4.884,1672,6.559,1673,4.884,1674,4.884,1675,6.559,1676,4.884]],["title/interfaces/IndexDefinition.html",[719,2.635,769,0.757]],["body/interfaces/IndexDefinition.html",[3,0.055,4,0.048,5,0.055,8,0.385,12,0.008,16,0.939,17,0.201,21,0.125,27,0.004,28,0.005,29,0.004,43,1.346,45,1.004,47,0.796,54,0.393,55,0.469,159,2.693,212,1.559,228,2.856,231,2.643,236,2.883,248,2.486,257,1.973,263,1.292,266,2.081,284,2.009,290,2.116,334,2.27,335,2.27,353,2.942,354,3.362,360,2.203,366,3.324,374,2.27,387,2.27,392,3.12,407,2.27,408,2.27,424,1.83,426,2.203,434,2.27,530,1.292,553,2.026,597,1.525,622,2.593,671,2.804,676,2.804,708,2.693,710,2.804,712,2.27,717,2.804,719,4.072,751,2.693,769,1.398,770,2.693,771,2.929,772,4.955,773,2.693,774,2.693,775,2.804,776,2.929,777,2.929,778,2.929,779,5.194,780,2.804,781,5.194,782,2.929,783,2.929,784,2.693,1622,4.224]],["title/classes/LocalAuth.html",[22,0.097,222,2.737]],["body/classes/LocalAuth.html",[3,0.063,4,0.054,5,0.063,8,0.261,12,0.008,13,0.625,16,1.081,21,0.105,22,0.16,27,0.004,28,0.005,29,0.004,41,1.192,45,1.1,54,0.592,55,0.473,106,4.19,212,2.347,222,4.055,266,4.19,465,4.814,499,5.789,592,5.897,1272,3.71,1273,3.94,1274,4.879,1279,3.71,1280,4.228,1281,5.56,1677,5.2,1678,5.2]],["title/injectables/LocalStrategy.html",[114,0.742,321,3.293]],["body/injectables/LocalStrategy.html",[3,0.063,4,0.054,5,0.063,8,0.261,9,1.122,12,0.008,13,0.625,15,0.836,16,1.009,17,0.36,18,0.871,21,0.072,22,0.109,23,3.355,24,1.573,25,0.981,27,0.004,28,0.005,29,0.004,31,3.235,43,1.541,47,0.708,49,1.366,53,1.034,54,0.592,55,0.398,90,3.519,96,3.939,103,2.627,114,1.1,115,1.674,136,2.741,140,2.32,160,3.94,284,2.201,290,1.366,291,4.411,318,5.345,321,4.879,323,3.94,433,3.211,437,4.228,455,4.814,465,3.904,985,3.94,1283,6.067,1285,6.067,1287,4.614,1288,6.779,1297,4.614,1679,4.614,1680,5.2,1681,5.2,1682,5.2,1683,5.2,1684,5.2]],["title/modules/MongoCoreModule.html",[63,1.367,1685,3.293]],["body/modules/MongoCoreModule.html",[3,0.028,4,0.024,5,0.028,9,0.379,12,0.008,13,0.548,15,0.964,16,0.873,17,0.323,18,0.386,21,0.032,22,0.048,24,1.134,25,1.474,27,0.002,28,0.003,29,0.002,47,0.565,49,0.607,51,1.154,53,0.824,54,0.472,55,0.317,63,1.776,65,1.03,66,1.003,67,1.19,68,1.19,69,1.12,70,2.17,71,2.366,76,1.933,77,1.19,78,1.19,80,3.204,103,2.303,128,3.884,130,0.908,131,0.953,136,2.304,140,2.674,172,0.866,248,1.983,262,2.065,263,2.132,288,2.526,290,2.172,291,1.489,329,1.562,353,2.569,424,0.93,434,3.21,553,1.673,597,2.157,854,3.048,864,4.322,867,3.524,1034,3.966,1047,4.13,1263,4.543,1420,2.675,1424,3.867,1430,1.425,1434,5.042,1435,2.841,1456,3.327,1457,2.048,1460,4.875,1461,3.327,1462,2.048,1465,1.647,1466,2.841,1487,2.048,1488,2.048,1489,4.201,1490,4.201,1491,3.327,1492,5.319,1493,1.647,1494,2.048,1495,3.327,1616,1.647,1685,5.031,1686,2.048,1687,2.048,1688,4.582,1689,6.422,1690,2.308,1691,4.832,1692,2.308,1693,2.308,1694,2.048,1695,3.204,1696,5.031,1697,4.277,1698,2.308,1699,4.432,1700,4.432,1701,2.308,1702,5.994,1703,2.308,1704,4.201,1705,3.048,1706,1.877,1707,1.877,1708,1.877,1709,2.308,1710,3.85,1711,5.222,1712,2.308,1713,3.966,1714,3.204,1715,2.308,1716,3.749,1717,2.308,1718,1.562,1719,2.048,1720,2.308,1721,5.45,1722,5.45,1723,3.327,1724,6.422,1725,3.327,1726,3.749,1727,3.749,1728,3.749,1729,3.749,1730,2.308,1731,3.749,1732,3.749,1733,6.422,1734,2.048,1735,2.308,1736,3.327,1737,2.308,1738,3.749,1739,3.749,1740,2.308,1741,2.308,1742,3.749,1743,3.749,1744,2.308,1745,2.308,1746,2.308,1747,2.308,1748,2.308,1749,3.749,1750,2.308]],["title/modules/MongoModule.html",[63,1.367,329,3.123]],["body/modules/MongoModule.html",[3,0.041,4,0.035,5,0.041,9,0.551,12,0.008,13,0.55,15,0.968,16,1.028,17,0.317,18,0.562,21,0.046,22,0.07,25,1.136,27,0.003,28,0.004,29,0.003,47,0.624,53,0.911,54,0.751,55,0.351,57,3.01,63,2.307,65,1.498,66,2.184,70,2.76,71,1.678,80,3.401,128,4.138,130,2.816,131,1.387,248,2.613,263,1.902,290,0.882,329,4.843,353,2.369,404,2.982,424,3.138,425,3.56,530,0.956,597,2.246,625,4.809,792,4.128,793,3.56,813,4.313,828,3.808,835,4.313,867,3.754,1034,4.42,1047,5.065,1420,3.586,1424,5.024,1465,2.396,1466,3.808,1630,3.401,1685,2.396,1691,4.313,1694,2.98,1695,4.843,1751,3.358,1752,7.511,1753,4.459,1754,3.358,1755,5.54,1756,3.358,1757,7.104,1758,5.025,1759,6.684,1760,3.358,1761,5.025,1762,3.358,1763,5.025,1764,5.025,1765,3.808,1766,3.808,1767,3.808,1768,4.459,1769,5.025,1770,5.025,1771,2.166,1772,3.358,1773,2.731,1774,3.358,1775,3.358,1776,3.358,1777,2.98]],["title/interfaces/MongoModuleAsyncOptions.html",[769,0.757,1691,2.977]],["body/interfaces/MongoModuleAsyncOptions.html",[3,0.046,4,0.04,5,0.046,8,0.191,12,0.008,16,0.917,17,0.169,21,0.09,22,0.149,27,0.003,28,0.004,29,0.003,43,1.636,45,0.888,47,0.89,54,0.719,55,0.512,63,2.546,66,2.399,114,1.143,130,2.172,248,2.612,263,1.086,284,1.777,336,1.967,404,1.702,424,1.537,425,2.032,445,2.582,530,1.086,597,1.282,632,2.891,743,4.059,769,1.064,792,3.409,793,4.187,801,4.586,806,5.072,813,3.561,835,3.561,864,4.663,867,3.93,1034,5.007,1493,5.61,1611,2.461,1612,3.735,1630,3.735,1691,3.561,1695,2.582,1696,2.722,1697,5.072,1713,4.006,1714,2.582,1755,2.582,1765,5.958,1766,4.183,1767,4.183,1771,3.561,1778,2.891,1779,4.183,1780,4.489,1781,4.489,1782,6.394,1783,4.489,1784,4.183,1785,4.489,1786,4.489,1787,6.394,1788,5.78,1789,4.489,1790,4.489,1791,3.102,1792,3.102,1793,3.102,1794,3.102,1795,2.891]],["title/interfaces/MongoModuleOptions.html",[769,0.757,1713,2.85]],["body/interfaces/MongoModuleOptions.html",[3,0.053,4,0.046,5,0.053,8,0.22,12,0.008,16,1.032,17,0.194,21,0.097,22,0.128,27,0.003,28,0.005,29,0.003,43,1.3,45,0.98,47,0.784,54,0.656,55,0.492,63,2.356,66,1.906,114,0.98,130,1.725,248,2.541,263,1.248,284,1.962,336,3.142,404,1.957,424,2.456,425,3.245,445,2.968,530,1.248,597,1.473,632,4.618,743,2.504,769,1.149,792,2.709,793,3.729,801,3.932,806,4.348,813,2.83,835,2.83,864,3.614,867,3.046,1034,5.214,1493,4.348,1611,2.83,1612,2.968,1630,2.968,1691,2.83,1695,5.121,1696,5.4,1697,3.13,1713,4.673,1714,2.968,1755,5.121,1765,5.307,1766,3.324,1767,3.324,1771,2.83,1778,3.324,1779,3.324,1780,3.567,1781,3.567,1782,4.955,1783,3.567,1784,3.324,1785,3.567,1786,3.567,1787,5.695,1788,4.955,1789,3.567,1790,3.567,1791,3.567,1792,3.567,1793,4.955,1794,4.955,1795,3.324]],["title/interfaces/MongoOptionsFactory.html",[769,0.757,1714,3.123]],["body/interfaces/MongoOptionsFactory.html",[3,0.056,4,0.049,5,0.056,8,0.233,9,1.041,12,0.008,13,0.425,15,0.748,16,0.904,17,0.206,21,0.1,22,0.133,27,0.004,28,0.005,29,0.004,43,1.378,54,0.672,55,0.42,63,2.406,66,2.02,114,1.02,130,1.829,248,2.507,263,1.805,284,2.325,336,2.397,424,1.874,425,2.476,445,3.147,530,1.323,597,2.131,632,3.523,743,2.655,769,1.185,792,2.872,793,3.846,801,4.093,806,4.527,813,3,835,3,864,3.762,867,3.171,1034,4.791,1493,4.527,1611,3,1612,3.147,1630,3.147,1691,3,1695,3.147,1696,3.318,1697,3.318,1713,4.791,1714,4.293,1755,3.147,1765,5.472,1766,3.523,1767,3.523,1771,3,1778,4.807,1779,3.523,1780,3.781,1781,3.781,1782,5.159,1783,3.781,1784,3.523,1785,3.781,1786,3.781,1787,5.872,1788,5.159,1789,3.781,1790,3.781,1791,3.781,1792,3.781,1793,3.781,1794,3.781,1795,5.878,1796,4.649]],["title/interfaces/MultiTenancyConfig.html",[769,0.757,1797,3.123]],["body/interfaces/MultiTenancyConfig.html",[3,0.071,4,0.061,5,0.071,8,0.292,12,0.007,16,0.987,17,0.258,21,0.102,27,0.005,28,0.006,29,0.005,45,1.183,47,0.924,55,0.47,228,2.768,263,1.658,264,3.004,530,1.658,553,2.599,597,1.957,769,1.207,1274,4.157,1602,3.598,1797,5.457,1798,4.738,1799,7.516,1800,7.516,1801,6.888,1802,6.419,1803,6.419,1804,5.17,1805,4.157,1806,3.943,1807,5.17,1808,4.738]],["title/interfaces/MultiTenantModuleOptions.html",[769,0.757,1809,3.497]],["body/interfaces/MultiTenantModuleOptions.html",[3,0.081,4,0.07,5,0.081,8,0.334,12,0.007,17,0.295,21,0.092,27,0.005,28,0.006,29,0.005,45,1.283,55,0.387,263,1.892,264,4.114,530,1.892,597,2.233,769,1.091,1185,5.037,1797,6.002,1806,6.002,1809,6.047,1810,5.899,1811,5.899]],["title/modules/NestCasbinModule.html",[63,1.367,1812,3.497]],["body/modules/NestCasbinModule.html",[3,0.056,4,0.048,5,0.056,9,0.754,12,0.008,13,0.42,15,0.739,16,0.837,17,0.37,18,0.769,21,0.063,22,0.096,25,1.187,27,0.004,28,0.005,29,0.004,46,1.419,47,0.476,53,0.695,54,0.398,55,0.268,63,2.287,65,2.05,66,1.996,67,2.369,68,2.369,69,2.229,70,3.538,71,3.858,76,3.244,77,2.369,78,2.369,103,1.765,128,3.467,136,1.648,140,3.443,290,1.886,597,2.114,864,2.725,1318,3.886,1424,4.63,1434,2.964,1460,5.117,1465,4.49,1812,6.596,1813,4.077,1814,4.077,1815,4.077,1816,6.571,1817,4.768,1818,4.594,1819,4.594,1820,7.718,1821,7.176,1822,4.594,1823,6.292,1824,6.574,1825,6.849,1826,3.736,1827,4.594,1828,5.117,1829,4.594,1830,4.768,1831,4.077,1832,7.176,1833,4.594,1834,4.594,1835,4.594]],["title/injectables/NestCasbinService.html",[114,0.742,1816,3.293]],["body/injectables/NestCasbinService.html",[3,0.053,4,0.046,5,0.053,8,0.218,9,0.994,12,0.008,13,0.724,15,1.212,16,0.957,17,0.309,18,0.728,21,0.06,22,0.091,24,1.315,25,0.82,27,0.003,28,0.005,29,0.003,46,2.781,47,0.781,49,1.142,53,1.14,54,0.653,55,0.439,114,0.974,115,1.399,136,3.231,140,3.662,283,2.804,288,1.71,290,1.591,597,2.757,793,2.315,867,2.173,1070,3.857,1816,4.321,1817,6.219,1824,3.535,1825,7.283,1826,3.535,1828,3.535,1830,3.294,1831,3.857,1836,3.857,1837,6.055,1838,6.055,1839,7.537,1840,6.055,1841,4.346,1842,4.346,1843,6.055,1844,4.346,1845,6.969,1846,6.055,1847,4.346,1848,4.346,1849,6.055,1850,4.346,1851,4.346,1852,4.346,1853,6.055,1854,4.346,1855,6.055,1856,6.055,1857,4.346,1858,4.346,1859,4.346,1860,4.346,1861,4.346,1862,4.346,1863,4.346]],["title/modules/NestMultiTenantModule.html",[63,1.367,1688,3.293]],["body/modules/NestMultiTenantModule.html",[3,0.063,4,0.054,5,0.063,9,0.849,12,0.008,13,0.473,15,0.832,17,0.338,18,0.866,21,0.071,22,0.108,25,0.976,27,0.004,28,0.005,29,0.004,46,1.597,47,0.536,53,0.782,54,0.448,55,0.301,63,2.4,65,2.307,66,2.247,67,2.667,68,2.667,69,2.509,70,3.493,71,4.206,76,3.513,77,2.667,78,2.667,128,3.754,248,2.104,262,2.849,263,2.459,264,2.667,290,1.359,597,2.289,1424,4.916,1465,3.69,1466,5.163,1688,6.38,1718,6.268,1719,4.589,1806,3.5,1809,6.136,1828,4.206,1864,4.589,1865,4.589,1866,4.589,1867,5.54,1868,5.172,1869,5.172,1870,5.172,1871,5.172]],["title/injectables/NestMultiTenantService.html",[114,0.742,1718,3.123]],["body/injectables/NestMultiTenantService.html",[3,0.043,4,0.037,5,0.043,8,0.177,9,0.857,12,0.008,13,0.567,15,0.84,16,0.984,17,0.324,18,0.592,21,0.049,22,0.074,24,1.579,25,1.293,27,0.003,28,0.004,29,0.003,47,0.541,49,1.372,53,0.79,54,0.452,55,0.304,91,3.651,106,3.509,114,0.84,115,1.138,130,1.391,131,1.46,136,2.227,152,5.359,155,3.682,263,2.313,284,1.681,288,2.877,290,1.372,294,3.535,448,1.883,495,1.948,496,1.883,597,2.303,867,1.767,1034,5.02,1063,2.019,1072,5.049,1262,1.948,1430,2.184,1695,4.201,1696,4.43,1713,2.184,1718,3.534,1795,5.195,1802,2.679,1805,5.219,1867,5.575,1872,3.138,1873,5.222,1874,3.536,1875,3.536,1876,3.536,1877,5.222,1878,6.208,1879,6.856,1880,3.536,1881,5.222,1882,3.536,1883,3.536,1884,3.536,1885,3.536,1886,3.536,1887,3.536,1888,3.536,1889,6.856,1890,7.314,1891,5.222,1892,4.634,1893,5.509,1894,3.536,1895,6.856,1896,3.536,1897,6.208,1898,3.536,1899,5.222,1900,3.536,1901,6.856,1902,3.536,1903,3.536,1904,3.138,1905,3.138,1906,3.536,1907,3.536]],["title/classes/NestStoreConfigProvider.html",[22,0.097,1908,3.752]],["body/classes/NestStoreConfigProvider.html",[3,0.068,4,0.059,5,0.068,8,0.283,12,0.007,13,0.726,17,0.25,21,0.078,22,0.118,24,2.402,25,1.064,27,0.004,28,0.006,29,0.004,41,1.293,45,1.159,47,0.584,49,1.482,53,0.853,54,0.489,55,0.42,187,3.545,288,3.125,750,5.461,874,7.048,890,5.004,1036,3.345,1150,4.611,1161,5.801,1179,4.323,1184,4.586,1185,4.274,1908,5.86,1909,5.664,1910,5.004,1911,7.942,1912,6.395,1913,7.206,1914,5.461,1915,5.639,1916,7.206]],["title/classes/NestjsEventStore.html",[22,0.097,1917,3.497]],["body/classes/NestjsEventStore.html",[3,0.057,4,0.049,5,0.057,8,0.236,9,1.05,12,0.008,13,0.768,15,1.254,16,0.746,17,0.209,21,0.065,22,0.099,25,1.471,27,0.004,28,0.005,29,0.004,41,1.079,47,0.663,49,1.909,53,0.967,54,0.63,103,2.458,187,3.95,404,2.1,495,4.003,496,3.87,822,3.358,982,6.918,1035,6.918,1036,3.793,1057,5.676,1093,3.827,1150,4.74,1179,3.197,1806,3.185,1909,5.822,1917,4.847,1918,4.176,1919,7.796,1920,6.396,1921,4.706,1922,4.706,1923,6.396,1924,4.706,1925,4.706,1926,6.396,1927,4.706,1928,6.396,1929,4.706,1930,4.706,1931,6.396,1932,4.176,1933,4.176,1934,4.706,1935,4.706,1936,4.706,1937,4.706,1938,4.706,1939,4.706,1940,4.706]],["title/modules/NestjsEventStoreModule.html",[63,1.367,1941,3.497]],["body/modules/NestjsEventStoreModule.html",[3,0.051,4,0.044,5,0.051,9,0.692,12,0.008,13,0.541,15,0.953,17,0.36,18,0.706,21,0.058,22,0.088,25,1.118,27,0.003,28,0.005,29,0.003,47,0.614,53,0.896,54,0.594,55,0.345,63,2.322,65,1.88,66,1.831,67,2.173,68,2.173,69,2.044,70,3.592,71,3.717,76,3.055,77,2.173,78,2.173,128,4.097,187,3.718,294,2.173,854,4.819,1036,2.499,1063,2.406,1149,4.891,1150,3.776,1161,4.798,1163,5.306,1179,3.426,1180,3.739,1181,3.007,1182,4.49,1183,3.427,1184,3.427,1185,3.193,1420,3.007,1424,5.055,1434,3.823,1435,4.49,1753,3.739,1806,5.303,1909,4.638,1914,4.49,1941,6.565,1942,3.739,1943,3.739,1944,3.739,1945,6.392,1946,4.214,1947,5.926,1948,4.214,1949,5.926,1950,4.214,1951,4.214,1952,4.214,1953,4.214,1954,4.214]],["title/injectables/NestjsEventStoreService.html",[114,0.742,1945,3.293]],["body/injectables/NestjsEventStoreService.html",[3,0.072,4,0.062,5,0.072,12,0.008,13,0.542,17,0.36,18,0.994,21,0.082,22,0.124,25,1.404,27,0.005,28,0.006,29,0.005,49,2.137,103,2.28,114,1.197,115,1.91,187,3.795,864,3.519,867,2.966,1150,4.1,1181,4.234,1182,5.64,1183,4.825,1434,3.828,1909,5.036,1917,5.64,1945,5.311,1955,5.265,1956,5.934,1957,5.934,1958,5.934,1959,7.442,1960,5.934,1961,5.934]],["title/classes/NotFoundError.html",[22,0.097,1514,3.497]],["body/classes/NotFoundError.html",[3,0.075,4,0.064,5,0.075,12,0.007,13,0.561,16,1.006,17,0.272,21,0.085,22,0.129,27,0.005,28,0.006,29,0.005,41,1.407,43,2.253,45,1.388,47,0.636,49,1.614,50,6.747,53,0.929,54,0.659,55,0.481,56,4.156,57,3.07,60,5.449,131,2.536,553,2.74,1259,6.716,1260,3.793,1261,3.793,1262,3.383,1514,6.259,1519,5.449,1622,5.145,1962,6.747,1963,5.449,1964,6.141,1965,6.141]],["title/classes/PageMetaDto.html",[22,0.097,1646,3.497]],["body/classes/PageMetaDto.html",[3,0.06,4,0.052,5,0.06,8,0.247,11,3.969,12,0.008,13,0.756,17,0.292,21,0.068,22,0.103,24,2.781,27,0.004,28,0.005,29,0.004,41,1.128,45,1.06,47,0.51,49,1.732,53,0.744,54,0.426,55,0.482,236,3.363,748,6.017,752,5.633,753,7.284,760,3.512,766,3.73,767,4.996,769,0.808,1640,6.017,1641,6.457,1642,4.002,1643,7.561,1644,5.666,1645,4.367,1646,4.996,1647,6.596,1648,4.367,1649,4.367,1650,4.367,1651,4.367,1652,4.367,1966,4.922,1967,6.592,1968,4.922,1969,4.922,1970,4.922]],["title/classes/PageOptionsDto.html",[22,0.097,1644,3.293]],["body/classes/PageOptionsDto.html",[3,0.05,4,0.043,5,0.05,8,0.207,11,3.685,12,0.008,13,0.711,16,0.681,17,0.327,21,0.057,22,0.142,24,2.7,25,0.78,27,0.003,28,0.005,29,0.003,30,5.836,41,0.947,45,0.94,47,0.606,55,0.483,130,3.393,131,2.801,236,3.117,484,3.771,589,2.949,712,2.066,748,5.139,749,6.018,750,4.429,751,4.022,752,5.139,756,3.667,760,2.949,762,3.132,763,5.187,766,3.132,767,3.132,768,6.542,832,3.361,958,2.797,1063,2.36,1641,6.12,1644,4.171,1971,3.667,1972,7.525,1973,6.782,1974,4.133,1975,4.133,1976,5.845,1977,4.133,1978,8.075,1979,4.133,1980,5.845,1981,5.845,1982,4.133,1983,4.133,1984,4.133,1985,6.782,1986,7.779,1987,4.133,1988,4.133,1989,5.845,1990,4.133,1991,4.133,1992,4.133]],["title/classes/Paginate.html",[22,0.097,1659,3.123]],["body/classes/Paginate.html",[3,0.08,4,0.069,5,0.08,8,0.33,12,0.007,13,0.725,21,0.091,22,0.138,27,0.005,28,0.006,29,0.005,41,1.508,45,1.275,47,0.916,55,0.462,236,3.318,1659,5.367,1768,7.554,1993,5.839,1994,8.513,1995,6.58,1996,6.58]],["title/classes/ProjectEntity.html",[22,0.097,1665,2.977]],["body/classes/ProjectEntity.html",[3,0.046,4,0.039,5,0.046,8,0.188,9,0.896,11,4.034,12,0.008,13,0.826,15,1.205,16,0.941,17,0.332,21,0.052,22,0.079,27,0.003,28,0.004,29,0.003,41,0.861,43,1.617,45,0.878,46,1.685,47,0.942,53,0.568,54,0.649,55,0.499,57,1.877,98,2.423,206,5.834,208,5.68,209,3.37,210,4.136,211,4.136,212,1.873,213,3.894,214,3.37,215,3.894,217,4.871,218,4.871,219,3.894,220,4.871,221,4.871,225,3.813,226,5.007,227,3.054,228,1.289,229,3.054,230,3.054,231,1.591,232,2.542,233,3.054,234,3.054,235,3.054,236,1.41,237,3.054,240,3.148,241,4.136,242,3.054,243,3.054,244,2.846,245,2.144,246,2.846,247,3.054,248,1.685,249,3.054,250,2.846,251,3.054,255,3.054,256,2.846,257,2.793,258,4.358,259,3.333,262,2.069,263,1.069,265,3.054,266,3.436,267,3.054,268,2.846,404,2.868,484,2.423,1318,2.319,1665,3.521,1997,3.333,1998,5.704,1999,3.756,2000,3.756,2001,3.333,2002,3.756,2003,3.756,2004,4.136]],["title/modules/ProjectModule.html",[63,1.367,2005,3.497]],["body/modules/ProjectModule.html",[3,0.075,4,0.065,5,0.075,12,0.007,17,0.368,18,1.038,21,0.086,22,0.13,27,0.005,28,0.006,29,0.005,31,2.626,63,2.458,65,2.766,66,2.694,67,3.197,68,3.197,69,3.008,70,3.802,71,3.099,76,3.944,77,3.197,78,3.197,2005,6.865,2006,5.502,2007,5.502,2008,6.464,2009,6.2,2010,6.2,2011,5.796,2012,6.2]],["title/injectables/ProjectRepository.html",[114,0.742,2013,3.497]],["body/injectables/ProjectRepository.html",[3,0.031,4,0.027,5,0.031,8,0.129,9,0.67,12,0.007,13,0.791,15,1.346,16,0.952,17,0.257,18,0.43,21,0.035,22,0.054,24,1.752,25,0.484,27,0.002,28,0.003,29,0.002,43,1.209,45,0.656,46,1.26,47,0.857,49,1.073,51,2.04,53,1.251,54,0.725,55,0.508,98,1.655,103,1.568,114,0.656,115,0.826,130,1.009,131,1.059,136,3.165,155,3.436,187,1.086,212,2.312,226,4.91,228,1.401,231,1.086,240,1.144,245,2.902,248,1.569,262,1.413,263,0.73,264,1.323,284,2.663,288,2.884,333,5.66,334,2.896,335,2.54,336,3.261,337,2.762,338,2.762,339,2.912,340,3.627,341,4.362,342,2.912,343,2.912,344,3.439,345,2.912,346,2.912,347,3.627,348,2.912,349,3.92,350,2.912,351,2.912,353,2.731,354,3.456,357,1.83,358,2.762,359,1.944,360,3.756,361,1.465,362,1.83,363,1.944,364,2.912,365,2.912,366,3.587,367,1.83,368,1.944,369,5.04,370,1.83,371,1.944,372,1.944,373,1.83,374,2.04,375,1.944,376,3.627,377,1.83,378,1.944,379,2.912,380,1.83,381,1.944,382,1.83,383,2.912,384,1.83,385,1.944,386,1.83,387,2.04,388,1.944,389,3.439,390,2.633,391,1.83,392,2.04,393,1.944,394,1.944,395,1.83,396,1.83,397,1.736,398,1.83,399,2.762,400,1.944,401,2.912,402,3.279,403,1.655,404,1.144,405,2.912,406,1.521,407,1.282,408,1.282,409,1.736,410,1.736,411,1.83,412,1.944,413,1.83,414,1.83,415,3.439,416,1.944,417,1.83,418,1.83,419,1.83,420,1.83,421,1.83,422,1.944,423,1.944,424,1.645,425,1.366,426,1.244,427,1.944,428,1.521,429,2.762,430,2.762,431,2.762,433,1.584,434,2.54,1665,1.655,2013,3.093,2014,2.276,2015,2.565,2016,2.565]],["title/classes/ProjectResolver.html",[22,0.097,2011,3.497]],["body/classes/ProjectResolver.html",[3,0.052,4,0.045,5,0.052,8,0.216,9,0.988,11,3.753,12,0.008,13,0.686,15,1.207,16,0.809,17,0.307,21,0.059,22,0.126,25,1.416,27,0.006,28,0.005,29,0.003,31,3.346,41,0.987,47,0.778,53,1.135,54,0.651,55,0.437,96,2.221,98,4.844,136,3.226,140,3.35,212,2.578,283,5.097,284,2.759,290,1.582,294,3.871,445,2.915,446,6.155,447,3.074,448,2.294,762,3.264,1659,5.684,1660,4.894,1998,5.34,2011,4.56,2017,3.823,2018,6.018,2019,5.34,2020,4.308,2021,4.308,2022,4.308,2023,6.018,2024,4.308,2025,4.308,2026,4.308,2027,4.308,2028,4.308,2029,4.308,2030,4.308,2031,6.018,2032,4.308,2033,4.308,2034,4.308,2035,4.308,2036,4.308,2037,4.308,2038,4.308,2039,4.308,2040,4.308,2041,4.308,2042,4.308,2043,4.308]],["title/classes/ProjectResponseDto.html",[22,0.097,2004,3.497]],["body/classes/ProjectResponseDto.html",[3,0.073,4,0.063,5,0.073,8,0.3,12,0.007,13,0.782,16,1.027,17,0.265,21,0.083,22,0.125,27,0.005,28,0.006,29,0.005,41,1.373,43,2.218,45,1.204,54,0.708,55,0.498,209,4.623,212,2.57,214,4.623,225,4.439,226,4.663,231,2.536,478,5.795,480,4.87,481,4.87,482,4.87,483,4.87,484,3.864,2004,5.673,2044,5.314,2045,5.989]],["title/injectables/ProjectService.html",[114,0.742,2008,3.293]],["body/injectables/ProjectService.html",[3,0.085,4,0.074,5,0.085,12,0.007,17,0.312,18,1.178,21,0.097,22,0.147,27,0.006,28,0.007,29,0.006,31,2.979,114,1.327,115,2.265,2008,5.888,2046,6.242]],["title/classes/QueryFailedFilter.html",[22,0.097,2047,3.752]],["body/classes/QueryFailedFilter.html",[3,0.059,4,0.051,5,0.059,8,0.246,9,1.078,12,0.008,13,0.677,15,0.788,17,0.377,18,0.82,21,0.068,22,0.103,27,0.004,28,0.005,29,0.004,41,1.122,45,1.057,46,2.029,47,0.681,49,1.287,53,0.994,54,0.569,55,0.432,56,3.314,59,3.711,172,2.466,240,2.185,290,2.082,475,4.579,627,3.982,921,6.029,1027,3.159,1262,2.698,1318,3.024,1327,3.711,1430,3.024,1526,5.343,1550,6.579,1551,7.94,1553,4.345,1560,5.83,1562,7.031,1564,4.345,1566,4.345,1567,4.345,1568,4.345,1581,4.345,1607,3.711,1625,3.982,2047,5.343,2048,7.031,2049,4.345,2050,4.897,2051,4.897,2052,4.897,2053,4.897,2054,4.897,2055,4.897,2056,4.897,2057,6.57,2058,4.897,2059,6.57,2060,4.897,2061,4.897,2062,4.897,2063,4.897,2064,4.897,2065,4.897]],["title/injectables/ReferencesExplorerService.html",[114,0.742,1381,3.123]],["body/injectables/ReferencesExplorerService.html",[3,0.033,4,0.028,5,0.033,8,0.136,9,0.701,12,0.008,13,0.631,15,0.962,16,0.615,17,0.367,18,0.455,21,0.038,22,0.057,24,2.184,25,1.411,27,0.002,28,0.003,29,0.002,43,1.266,45,0.687,46,1.629,47,0.62,49,1.122,51,2.638,53,0.983,54,0.626,55,0.402,63,2.14,65,1.212,88,1.678,91,1.447,103,1.641,114,0.687,115,0.874,130,1.68,131,1.764,228,1.811,240,1.212,288,3.364,290,2.022,294,1.401,312,1.753,361,3.415,433,1.678,447,4.926,448,1.447,495,3.295,496,3.185,603,5.472,761,5.77,804,4.291,867,1.358,1063,3.013,1332,3.979,1381,2.89,1388,3.789,1390,4.048,1398,2.209,1430,1.678,1433,2.41,1470,6.408,1471,2.41,1472,2.41,1476,2.41,1477,2.41,1497,2.41,1704,6.827,1801,3.473,2066,6.408,2067,2.41,2068,5.276,2069,6.903,2070,5.276,2071,5.981,2072,5.276,2073,4.27,2074,2.716,2075,6.903,2076,7.221,2077,5.276,2078,4.27,2079,2.716,2080,7.874,2081,7.694,2082,7.221,2083,7.48,2084,5.276,2085,2.716,2086,2.716,2087,2.716,2088,2.716,2089,4.27,2090,5.981,2091,2.716,2092,2.716,2093,2.716,2094,2.716,2095,2.716,2096,2.716,2097,4.27,2098,2.716,2099,2.716,2100,2.716,2101,2.716,2102,3.473,2103,2.209,2104,2.716,2105,2.716,2106,2.716,2107,2.716,2108,2.716,2109,2.716,2110,2.716,2111,2.716,2112,5.981,2113,2.716,2114,4.27,2115,2.716,2116,4.27,2117,2.716,2118,2.716,2119,2.41,2120,2.716,2121,2.716,2122,2.716,2123,2.716,2124,2.716,2125,4.27,2126,2.716,2127,2.716,2128,2.716,2129,2.716,2130,2.716]],["title/modules/RepositoryModule.html",[63,1.367,317,3.293]],["body/modules/RepositoryModule.html",[3,0.074,4,0.064,5,0.074,12,0.007,17,0.336,18,1.025,21,0.085,22,0.128,27,0.005,28,0.006,29,0.005,63,2.444,65,2.731,66,2.66,67,3.156,68,3.156,69,2.97,70,3.78,71,4.122,76,3.913,77,3.156,78,3.156,278,5.414,317,6.533,494,5.432,2131,5.432,2132,5.432,2133,5.432,2134,6.121]],["title/injectables/RepositoryService.html",[114,0.742,2135,3.752]],["body/injectables/RepositoryService.html",[3,0.086,4,0.074,5,0.086,12,0.007,17,0.313,18,1.182,21,0.097,22,0.148,27,0.006,28,0.007,29,0.006,114,1.33,115,2.273,2135,6.725,2136,6.265]],["title/interfaces/ServiceListItem.html",[769,0.757,1619,3.293]],["body/interfaces/ServiceListItem.html",[3,0.072,4,0.062,5,0.072,8,0.297,12,0.008,16,1.044,17,0.36,21,0.082,27,0.005,28,0.006,29,0.005,43,1.753,45,1.195,54,0.738,55,0.433,63,1.753,83,3.817,92,4.221,94,6.454,448,3.15,530,1.683,533,3.15,534,2.639,769,1.333,1332,3.259,1390,4.003,1422,4.003,1428,4.003,1610,4.483,1611,3.817,1612,4.003,1613,4.81,1614,6.04,1615,4.81,1616,4.221,1617,4.81,1618,5.3,1619,5.794]],["title/classes/SnakeNamingStrategy.html",[22,0.097,897,3.497]],["body/classes/SnakeNamingStrategy.html",[3,0.042,4,0.036,5,0.042,8,0.175,9,0.847,12,0.008,13,0.72,15,1.267,16,1.128,17,0.229,21,0.048,22,0.073,25,1.486,27,0.003,28,0.004,29,0.003,41,0.797,43,1.529,47,0.816,53,1.191,54,0.701,55,0.459,57,1.739,172,1.937,533,1.853,534,1.552,535,2.829,897,3.909,1113,5.766,1318,2.148,2137,7.179,2138,3.087,2139,6.149,2140,6.149,2141,5.159,2142,7.877,2143,5.159,2144,5.159,2145,5.159,2146,6.149,2147,6.149,2148,5.159,2149,6.802,2150,3.479,2151,3.479,2152,5.159,2153,8.408,2154,6.149,2155,3.479,2156,7.609,2157,5.159,2158,6.802,2159,3.479,2160,5.159,2161,3.479,2162,5.159,2163,6.802,2164,6.149,2165,6.149,2166,3.479,2167,3.479,2168,5.159,2169,3.479,2170,5.159,2171,3.479,2172,3.479,2173,3.479,2174,3.479,2175,3.479,2176,3.479,2177,5.159,2178,3.479,2179,3.479,2180,3.479,2181,3.479,2182,3.479]],["title/interfaces/TenantInfo.html",[769,0.757,1805,3.293]],["body/interfaces/TenantInfo.html",[3,0.068,4,0.059,5,0.068,8,0.283,12,0.007,16,1.061,17,0.25,21,0.1,27,0.004,28,0.006,29,0.004,45,1.159,47,0.943,55,0.515,228,1.936,263,1.605,264,4.315,530,1.605,553,2.516,597,1.895,769,1.183,1274,5.972,1602,3.483,1622,4.877,1797,5.664,1798,4.586,1799,5.004,1800,5.004,1801,4.586,1802,5.461,1803,5.461,1804,5.004,1805,5.142,1806,5.664,1807,7.427,1808,4.586]],["title/injectables/TenantMiddleware.html",[114,0.742,2183,3.752]],["body/injectables/TenantMiddleware.html",[3,0.057,4,0.049,5,0.057,8,0.235,9,1.046,12,0.008,13,0.662,15,0.753,17,0.321,18,0.784,21,0.065,22,0.098,27,0.004,28,0.005,29,0.004,45,1.025,47,0.661,49,1.231,53,0.964,54,0.552,55,0.422,114,1.025,115,1.508,155,2.778,172,1.758,212,1.608,240,3.234,263,2.316,264,3.287,288,2.851,290,1.231,294,2.415,534,3.746,597,2.614,664,5.894,743,2.674,801,4.113,1130,3.169,1797,5.683,1803,3.549,1912,5.657,1914,6.168,2183,5.184,2184,4.156,2185,6.375,2186,6.375,2187,4.683,2188,6.375,2189,3.808,2190,4.683,2191,4.683,2192,4.683,2193,7.248,2194,6.375,2195,7.248,2196,6.375,2197,6.375,2198,4.683,2199,4.683,2200,4.683,2201,4.683]],["title/injectables/TenantRepository.html",[114,0.742,2202,3.752]],["body/injectables/TenantRepository.html",[3,0.031,4,0.027,5,0.031,8,0.129,9,0.67,12,0.007,13,0.792,15,1.346,16,0.952,17,0.257,18,0.43,21,0.035,22,0.054,24,1.754,25,0.484,27,0.002,28,0.003,29,0.002,43,1.211,45,0.657,46,1.261,47,0.857,49,1.074,51,2.042,53,1.251,54,0.725,55,0.508,103,1.57,114,0.657,115,0.827,130,1.01,131,1.061,136,3.165,155,3.438,187,1.088,212,2.313,226,4.911,228,1.402,231,1.088,240,1.146,245,2.905,248,1.571,258,1.586,262,1.415,263,0.731,264,2.106,284,2.664,288,2.885,333,5.661,334,2.898,335,2.543,336,3.263,337,2.765,338,2.765,339,2.915,340,3.63,341,4.364,342,2.915,343,2.915,344,3.442,345,2.915,346,2.915,347,3.63,348,2.915,349,3.923,350,2.915,351,2.915,352,2.089,353,2.733,354,3.457,356,4.137,357,1.833,358,2.765,359,1.946,360,3.757,361,1.467,362,1.833,363,1.946,364,2.915,365,2.915,366,3.589,367,1.833,368,1.946,369,5.043,370,1.833,371,1.946,372,1.946,373,1.833,374,2.042,375,1.946,376,3.63,377,1.833,378,1.946,379,2.915,380,1.833,381,1.946,382,1.833,383,2.915,384,1.833,385,1.946,386,1.833,387,2.042,388,1.946,389,3.442,390,2.636,391,1.833,392,2.042,393,1.946,394,1.946,395,1.833,396,1.833,397,1.738,398,1.833,399,2.765,400,1.946,401,2.915,402,3.282,403,1.657,404,1.146,405,2.915,406,1.523,407,1.284,408,1.284,409,1.738,410,1.738,411,1.833,412,1.946,413,1.833,414,1.833,415,3.442,416,1.946,417,1.833,418,1.833,419,1.833,420,1.833,421,1.833,422,1.946,423,1.946,424,1.646,425,1.368,426,1.246,427,1.946,428,1.523,429,2.765,430,2.765,431,2.765,433,1.586,434,1.284,2202,3.322,2203,2.279,2204,2.568]],["title/injectables/TimeoutInterceptor.html",[114,0.742,2205,3.752]],["body/injectables/TimeoutInterceptor.html",[3,0.073,4,0.063,5,0.073,8,0.301,9,1.231,12,0.008,13,0.549,15,0.966,17,0.362,18,1.006,21,0.083,22,0.126,25,1.133,27,0.005,28,0.006,29,0.005,47,0.622,53,0.909,54,0.521,55,0.35,91,3.199,114,1.206,115,1.934,172,2.255,309,6.111,311,6.197,312,3.876,534,3.648,1134,6.099,1135,6.099,1136,6.964,1138,6.099,1140,4.885,2205,6.099,2206,5.331,2207,6.007,2208,6.007,2209,6.007]],["title/interfaces/UpdateByIdRequest.html",[392,2.307,769,0.757]],["body/interfaces/UpdateByIdRequest.html",[3,0.057,4,0.049,5,0.057,8,0.39,12,0.008,16,0.949,17,0.208,21,0.126,27,0.004,28,0.005,29,0.004,43,1.388,45,1.025,47,0.661,54,0.406,55,0.371,159,2.778,212,1.608,228,2.883,231,2.7,236,2.921,248,1.968,257,2.035,263,1.333,266,2.147,284,2.052,290,2.139,334,2.341,335,2.341,353,3.005,354,3.416,360,2.272,366,3.395,374,2.341,387,2.341,392,3.623,407,2.341,408,2.341,424,1.887,426,2.272,434,2.341,530,1.333,553,2.089,597,1.573,622,2.674,671,4.805,676,4.805,708,2.778,710,2.892,712,2.341,717,2.892,719,3.64,751,2.778,769,1.41,770,2.778,771,3.022,772,4.113,773,2.778,774,2.778,775,2.892,776,3.022,777,3.022,778,3.022,779,4.113,780,2.892,781,4.113,782,3.022,783,3.022,784,2.778]],["title/interfaces/UpdateRequest.html",[387,2.307,769,0.757]],["body/interfaces/UpdateRequest.html",[3,0.058,4,0.05,5,0.058,8,0.393,12,0.008,16,0.954,17,0.211,21,0.126,27,0.004,28,0.005,29,0.004,43,1.911,45,1.037,54,0.413,55,0.277,159,2.825,212,1.635,228,2.69,231,2.731,236,2.941,248,1.991,257,2.07,263,1.356,266,2.184,284,2.076,290,2.152,334,2.381,335,2.381,353,3.04,354,3.447,360,2.311,366,4.36,374,2.381,387,3.224,392,3.655,407,2.381,408,2.381,424,1.92,426,2.311,434,2.381,530,1.356,553,2.126,597,1.6,622,2.72,671,2.942,676,2.942,708,2.825,710,2.942,712,2.381,717,2.942,719,3.683,751,2.825,769,1.416,770,2.825,771,3.074,772,4.161,773,2.825,774,2.825,775,2.942,776,3.074,777,3.074,778,3.074,779,4.161,780,2.942,781,4.161,782,3.074,783,3.074,784,2.825]],["title/classes/UserEntity.html",[22,0.097,258,2.85]],["body/classes/UserEntity.html",[3,0.041,4,0.036,5,0.041,8,0.17,9,0.831,11,4.103,12,0.008,13,0.823,15,1.156,16,0.957,17,0.334,21,0.047,22,0.071,27,0.003,28,0.004,29,0.003,41,0.778,43,1.501,45,0.814,46,1.564,47,0.938,53,0.513,54,0.439,55,0.5,57,1.696,88,5.162,93,3.742,96,1.75,106,2.322,175,3.578,206,5.742,208,5.448,209,3.128,210,3.838,211,3.838,212,1.739,213,3.614,214,3.128,215,3.614,217,4.592,218,4.592,219,3.614,220,4.592,221,4.592,225,3.594,226,4.905,227,2.759,228,1.165,229,2.759,230,2.759,231,1.437,232,2.296,233,2.759,234,2.759,235,2.759,236,1.274,237,2.759,240,2.998,241,3.838,242,2.759,243,2.759,244,2.571,245,1.938,246,2.571,247,2.759,248,1.564,249,2.759,250,2.571,251,2.759,255,2.759,256,2.571,257,2.633,258,3.128,262,1.869,263,0.966,265,2.759,266,3.08,267,4.118,268,2.571,465,3.46,592,4.865,792,3.742,1318,2.096,1665,4.335,2001,4.494,2019,5.377,2210,3.011,2211,5.377,2212,5.377,2213,3.393,2214,6.059,2215,3.393,2216,3.393,2217,3.393,2218,3.393,2219,3.393,2220,3.838,2221,3.393,2222,3.393]],["title/modules/UserModule.html",[63,1.367,2223,3.497]],["body/modules/UserModule.html",[3,0.075,4,0.065,5,0.075,12,0.007,17,0.368,18,1.038,21,0.086,22,0.13,27,0.005,28,0.006,29,0.005,31,2.626,63,2.458,65,2.766,66,2.694,67,3.197,68,3.197,69,3.008,70,3.802,71,3.099,76,3.944,77,3.197,78,3.197,2223,6.865,2224,5.502,2225,5.502,2226,6.464,2227,6.2,2228,6.2,2229,5.796,2230,6.2]],["title/injectables/UserRepository.html",[114,0.742,2231,3.497]],["body/injectables/UserRepository.html",[3,0.031,4,0.027,5,0.031,8,0.129,9,0.67,12,0.007,13,0.792,15,1.346,16,0.952,17,0.257,18,0.43,21,0.035,22,0.054,24,1.754,25,0.484,27,0.002,28,0.003,29,0.002,43,1.211,45,0.657,46,1.261,47,0.857,49,1.074,51,2.042,53,1.251,54,0.725,55,0.508,96,1.324,103,1.57,114,0.657,115,0.827,130,1.01,131,1.061,136,3.165,155,3.438,187,1.088,212,2.313,226,4.911,228,1.402,231,1.088,240,1.146,245,2.905,248,1.571,258,1.586,262,1.415,263,0.731,264,1.324,284,2.664,288,2.885,333,5.661,334,2.898,335,2.543,336,3.263,337,2.765,338,2.765,339,2.915,340,3.63,341,4.364,342,2.915,343,2.915,344,3.442,345,2.915,346,2.915,347,3.63,348,2.915,349,3.923,350,2.915,351,2.915,352,2.089,353,2.733,354,3.457,356,4.137,357,1.833,358,2.765,359,1.946,360,3.757,361,1.467,362,1.833,363,1.946,364,2.915,365,2.915,366,3.589,367,1.833,368,1.946,369,5.043,370,1.833,371,1.946,372,1.946,373,1.833,374,2.042,375,1.946,376,3.63,377,1.833,378,1.946,379,2.915,380,1.833,381,1.946,382,1.833,383,2.915,384,1.833,385,1.946,386,1.833,387,2.042,388,1.946,389,3.442,390,2.636,391,1.833,392,2.042,393,1.946,394,1.946,395,1.833,396,1.833,397,1.738,398,1.833,399,2.765,400,1.946,401,2.915,402,3.282,403,1.657,404,1.146,405,2.915,406,1.523,407,1.284,408,1.284,409,1.738,410,1.738,411,1.833,412,1.946,413,1.833,414,1.833,415,3.442,416,1.946,417,1.833,418,1.833,419,1.833,420,1.833,421,1.833,422,1.946,423,1.946,424,1.646,425,1.368,426,1.246,427,1.946,428,1.523,429,2.765,430,2.765,431,2.765,433,1.586,434,1.284,2231,3.096,2232,2.279,2233,2.568]],["title/classes/UserResolver.html",[22,0.097,2229,3.497]],["body/classes/UserResolver.html",[3,0.085,4,0.074,5,0.085,12,0.007,17,0.312,21,0.097,22,0.147,27,0.006,28,0.007,29,0.006,31,2.979,41,1.612,447,5.02,448,3.746,2229,6.253,2234,6.242,2235,7.034]],["title/classes/UserResponseDto.html",[22,0.097,2220,3.497]],["body/classes/UserResponseDto.html",[3,0.068,4,0.059,5,0.068,8,0.281,12,0.008,13,0.807,16,1.071,17,0.249,21,0.077,22,0.117,27,0.004,28,0.006,29,0.004,41,1.285,43,2.128,45,1.155,55,0.514,209,4.434,212,2.465,214,4.434,225,4.258,226,4.523,231,2.375,465,4.523,478,5.698,480,4.559,481,4.559,482,4.559,483,4.559,484,5.11,2211,7.028,2212,7.028,2220,5.441,2236,4.975,2237,5.607,2238,5.607,2239,5.607]],["title/injectables/UserService.html",[114,0.742,2226,3.293]],["body/injectables/UserService.html",[3,0.085,4,0.074,5,0.085,12,0.007,17,0.312,18,1.178,21,0.097,22,0.147,27,0.006,28,0.007,29,0.006,31,2.979,114,1.327,115,2.265,2226,5.888,2240,6.242]],["title/classes/ValidationError.html",[22,0.097,1557,3.497]],["body/classes/ValidationError.html",[3,0.065,4,0.056,5,0.065,8,0.269,12,0.007,13,0.708,16,0.992,17,0.309,18,0.897,21,0.074,22,0.112,27,0.004,28,0.005,29,0.004,34,4.06,41,1.228,43,2.066,44,5.874,45,1.121,46,2.694,47,0.803,48,6.45,49,1.408,53,0.81,54,0.464,55,0.508,57,2.678,59,4.06,248,1.654,294,2.763,533,2.854,534,2.391,1002,4.06,1027,3.457,1217,4.357,1228,3.626,1354,4.357,1557,5.284,1583,7.553,1616,3.823,1622,5.246,2241,4.755,2242,6.973,2243,6.973,2244,5.358,2245,6.973,2246,5.358,2247,4.755,2248,5.358,2249,5.358,2250,5.358,2251,5.358,2252,5.358,2253,5.358,2254,5.358]],["title/injectables/ValidatorService.html",[114,0.742,851,3.123]],["body/injectables/ValidatorService.html",[3,0.075,4,0.065,5,0.075,8,0.309,9,1.25,12,0.007,13,0.563,15,0.991,16,0.964,17,0.338,18,1.032,21,0.085,22,0.129,25,1.162,27,0.005,28,0.006,29,0.005,46,2.554,47,0.638,53,0.932,54,0.534,55,0.359,114,1.225,115,1.983,228,2.615,290,1.619,851,5.156,1113,4.668,1114,4.396,1638,6.76,2255,5.467,2256,7.618,2257,7.618,2258,6.16,2259,6.16,2260,6.16,2261,6.16,2262,6.16]],["title/coverage.html",[2263,5.132]],["body/coverage.html",[0,2.201,1,1.984,4,0.022,5,0.014,6,2.351,7,1.043,12,0.008,19,1.686,22,0.18,27,0.001,28,0.002,29,0.001,31,2.985,32,1.043,35,1.043,38,1.043,40,0.956,42,1.043,55,0.068,69,1.686,70,0.539,83,1.842,84,0.891,103,0.452,114,1.293,116,1.043,120,1.043,122,1.043,124,1.043,126,0.956,127,1.043,146,0.891,147,1.043,169,0.891,170,2.163,171,1.043,175,0.626,180,0.891,181,2.163,182,1.043,187,2.682,195,0.891,196,1.043,201,0.891,202,1.043,205,1.043,206,0.758,212,0.404,222,0.697,232,0.796,252,0.956,254,0.891,257,1.24,258,0.726,261,0.891,263,2.494,264,0.606,272,0.891,273,1.043,274,1.043,278,0.671,281,0.891,296,1.043,297,1.043,303,1.71,304,0.956,306,1.043,318,0.726,319,0.839,320,0.839,321,0.839,324,0.891,332,1.043,333,0.758,335,0.588,360,0.57,374,0.588,387,0.588,392,0.588,407,0.588,408,0.588,426,0.57,429,0.796,430,0.796,431,0.796,435,1.043,450,0.891,454,1.043,477,1.043,478,0.758,485,1.043,504,0.891,505,1.043,508,0.891,509,1.043,512,0.796,513,1.043,514,1.043,516,0.726,517,0.758,522,0.891,562,1.043,573,1.043,574,1.043,590,0.891,597,2.951,598,1.043,622,0.671,719,0.671,743,4.251,745,0.956,746,1.043,747,1.043,769,1.327,770,3.644,773,0.697,774,0.697,785,0.891,786,1.71,787,1.71,818,0.891,823,5.821,850,0.839,851,0.796,852,0.956,868,1.043,869,1.043,895,0.891,896,0.839,897,0.891,960,0.956,961,1.043,974,1.043,992,0.839,995,1.043,996,0.891,997,1.043,998,1.043,1004,0.891,1005,1.043,1006,1.71,1029,0.956,1030,1.043,1036,1.247,1041,0.891,1081,1.043,1095,1.043,1096,1.043,1125,0.956,1126,1.043,1127,1.043,1130,1.423,1132,0.956,1133,1.043,1149,0.839,1150,3.001,1151,1.71,1152,1.043,1161,0.758,1163,0.839,1179,1.997,1181,0.839,1253,1.043,1254,0.956,1255,1.043,1256,1.043,1272,0.839,1273,2.163,1279,0.839,1282,1.043,1299,1.043,1306,0.891,1307,1.043,1308,0.891,1312,1.043,1313,1.043,1323,1.043,1324,1.043,1331,0.839,1332,3.386,1333,1.932,1334,1.71,1351,0.956,1354,7.744,1373,0.839,1374,1.043,1381,0.796,1422,0.796,1432,0.956,1512,0.956,1513,1.043,1514,0.891,1520,1.043,1547,0.956,1548,1.043,1549,1.043,1557,0.891,1593,0.956,1594,1.043,1595,2.163,1601,1.043,1602,2.978,1603,0.891,1604,1.71,1605,1.71,1607,0.891,1610,2.163,1611,2.864,1618,0.839,1619,0.839,1620,1.71,1623,1.357,1624,1.71,1627,0.956,1628,1.043,1629,1.043,1635,1.043,1640,0.891,1641,2.163,1642,1.71,1644,0.839,1646,0.891,1653,0.956,1654,1.043,1659,0.796,1665,0.758,1668,0.956,1669,1.043,1679,1.043,1691,0.758,1699,0.956,1700,0.956,1705,0.956,1706,0.956,1707,0.956,1708,0.956,1710,0.956,1711,0.956,1713,0.726,1714,0.796,1718,0.796,1773,0.956,1778,2.163,1797,0.796,1798,1.71,1805,0.839,1809,0.891,1810,1.043,1811,1.043,1816,0.839,1817,1.594,1830,0.891,1836,1.043,1867,0.956,1872,1.043,1908,0.956,1909,2.351,1910,1.043,1917,0.891,1918,1.043,1945,0.839,1955,1.043,1962,1.043,1963,1.043,1971,1.043,1993,1.043,1997,1.043,2004,0.891,2008,0.839,2011,0.891,2013,0.891,2014,1.043,2017,1.043,2044,1.043,2046,1.043,2047,0.956,2048,1.043,2049,1.043,2066,1.043,2067,1.043,2102,0.956,2103,0.956,2135,0.956,2136,1.043,2137,1.043,2138,1.043,2183,0.956,2184,1.043,2189,0.956,2202,0.956,2203,1.043,2205,0.956,2206,1.043,2210,1.043,2220,0.891,2226,0.839,2229,0.891,2231,0.891,2232,1.043,2234,1.043,2236,1.043,2240,1.043,2241,1.043,2255,1.043,2263,0.956,2264,1.176,2265,1.176,2266,7.748,2267,7.986,2268,1.043,2269,8.934,2270,5.706,2271,1.043,2272,1.043,2273,6.145,2274,1.043,2275,8.657,2276,1.043,2277,1.043,2278,1.043,2279,1.71,2280,1.043,2281,1.043,2282,1.71,2283,1.043,2284,1.043,2285,3.995,2286,1.043,2287,1.043,2288,1.043,2289,1.043,2290,1.043,2291,4.439,2292,3.61,2293,1.043,2294,1.043,2295,1.043,2296,1.043,2297,1.043,2298,1.043,2299,1.043,2300,1.176,2301,1.176,2302,1.176,2303,1.867,2304,1.043,2305,1.043,2306,1.043,2307,1.043,2308,1.043,2309,1.043,2310,1.043,2311,1.043,2312,1.043,2313,1.043,2314,1.043,2315,1.043,2316,1.043,2317,3.083,2318,1.043,2319,1.043,2320,1.043,2321,1.043,2322,6.656,2323,2.533,2324,1.867,2325,3.083,2326,1.043,2327,1.043,2328,1.043,2329,1.043,2330,1.176,2331,1.176,2332,1.176,2333,1.176,2334,2.103,2335,2.103,2336,1.176,2337,1.176,2338,4.278,2339,1.043,2340,1.043,2341,1.043,2342,1.043,2343,3.545,2344,1.043,2345,1.043,2346,1.176,2347,1.176,2348,1.71,2349,1.71,2350,1.043,2351,1.043,2352,1.043,2353,1.176,2354,1.176,2355,1.043,2356,1.043,2357,1.043,2358,1.176,2359,1.176,2360,1.043,2361,1.176,2362,1.867,2363,1.176,2364,1.176,2365,1.043,2366,2.533,2367,1.043,2368,1.043,2369,1.043,2370,1.043,2371,1.043,2372,3.474,2373,3.474,2374,1.176,2375,1.043]],["title/dependencies.html",[66,2.413,2376,3.847]],["body/dependencies.html",[12,0.008,18,0.7,22,0.123,27,0.003,28,0.005,29,0.003,37,3.397,47,0.433,48,3.166,66,1.815,90,4.616,91,2.225,152,2.827,160,5.613,178,2.027,207,4.868,312,2.695,424,2.374,434,2.088,448,2.225,527,3.397,528,3.707,589,2.981,648,3.707,675,2.827,760,2.981,762,3.166,799,3.397,857,3.707,892,3.707,893,3.707,985,3.166,1036,2.478,1114,2.981,1149,2.981,1178,3.707,1179,2.088,1260,3.637,1261,3.637,1262,4.303,1289,3.707,1318,4.575,1344,3.707,1428,2.827,1430,2.58,1530,4.463,1531,5.226,1771,2.695,1824,3.397,1826,3.397,1932,3.707,1933,3.707,2377,4.177,2378,4.177,2379,4.177,2380,6.821,2381,4.177,2382,5.889,2383,4.177,2384,4.177,2385,4.177,2386,4.177,2387,4.177,2388,4.177,2389,5.889,2390,4.177,2391,4.177,2392,5.547,2393,4.177,2394,4.177,2395,4.177,2396,4.177,2397,4.177,2398,4.177,2399,4.177,2400,4.177,2401,4.177,2402,4.177,2403,4.177,2404,4.177,2405,4.177,2406,4.177,2407,4.177,2408,4.177,2409,3.707,2410,5.889,2411,5.889,2412,4.177,2413,4.177,2414,5.889,2415,4.177,2416,4.177,2417,5.889,2418,4.177,2419,4.177,2420,4.177,2421,4.177,2422,4.177,2423,4.177,2424,5.889,2425,4.177,2426,4.177,2427,5.889,2428,4.177,2429,4.177,2430,4.177,2431,4.177,2432,4.177,2433,4.177,2434,4.177,2435,4.177,2436,4.177,2437,4.177,2438,3.707,2439,4.177,2440,4.177,2441,4.177,2442,4.177,2443,4.177,2444,4.177,2445,4.177,2446,4.177,2447,4.177]],["title/miscellaneous/enumerations.html",[2448,2.603,2449,4.928]],["body/miscellaneous/enumerations.html",[8,0.336,12,0.007,27,0.005,28,0.006,29,0.005,131,3.309,263,1.905,597,2.249,1189,5.443,1530,5.072,1802,6.072,1803,6.072,1972,7.11,2448,4.53,2449,5.94,2450,6.693,2451,8.013,2452,6.693,2453,8.013,2454,8.013,2455,6.693,2456,6.693,2457,6.693,2458,6.693,2459,6.693,2460,6.693]],["title/miscellaneous/functions.html",[402,3.583,2448,2.603]],["body/miscellaneous/functions.html",[6,2.118,8,0.157,12,0.007,15,1.176,27,0.002,28,0.004,29,0.002,31,2.444,41,1.676,47,0.916,51,3.47,53,1.337,54,0.802,55,0.336,57,3.8,69,4.095,89,2.118,134,2.372,212,1.636,215,3.4,232,3.225,248,2.258,257,3.488,263,1.975,353,2.246,354,2.246,360,2.799,397,4.697,402,2.019,404,3.392,425,3.435,467,6.159,597,2.332,743,3.683,792,4.287,793,3.894,812,4.692,813,4.718,1130,3.225,1263,2.372,1332,1.724,1395,4.692,1630,3.905,1697,4.953,1705,3.875,1706,3.875,1707,3.875,1708,3.875,1723,2.777,1725,2.777,1734,2.777,1755,2.118,1757,4.228,1771,3.074,1773,3.875,1777,2.777,1784,5.541,1914,2.372,2268,2.777,2271,2.777,2272,2.777,2274,2.777,2279,2.545,2280,4.228,2282,2.545,2283,4.228,2292,2.545,2293,4.228,2298,2.777,2299,4.228,2305,2.777,2306,2.777,2307,4.228,2314,2.777,2315,4.228,2316,5.12,2323,2.777,2328,2.777,2329,4.228,2342,2.777,2343,2.777,2344,4.228,2345,4.228,2348,2.545,2349,3.875,2350,4.228,2375,5.12,2438,5.12,2448,2.118,2461,2.777,2462,6.45,2463,3.129,2464,2.777,2465,5.77,2466,3.129,2467,6.941,2468,3.129,2469,3.129,2470,2.777,2471,3.129,2472,2.777,2473,3.129,2474,3.129,2475,3.129,2476,3.129,2477,5.77,2478,5.77,2479,5.77,2480,5.77,2481,3.129,2482,3.129,2483,4.765,2484,3.129,2485,3.129,2486,3.129,2487,3.129,2488,3.129,2489,3.129,2490,3.129,2491,3.129,2492,3.129,2493,3.129,2494,3.129,2495,4.765,2496,3.129,2497,3.129]],["title/index.html",[8,0.193,2498,3.847,2499,3.847]],["body/index.html",[4,0.043,12,0.007,27,0.003,28,0.005,29,0.003,83,5.356,90,3.956,96,2.131,98,4.757,110,7.166,152,2.797,187,2.872,256,3.132,263,1.93,283,2.666,326,3.132,403,3.771,404,1.844,424,1.666,432,5.187,447,2.949,534,2.608,793,3.113,801,2.666,914,3.667,939,5.187,1013,3.667,1130,4.589,1179,3.39,1182,3.132,1188,5.187,1189,3.361,1198,3.667,1228,2.797,1260,3.61,1261,3.61,1262,2.277,1318,2.552,1418,3.667,1892,5.187,1904,3.667,1905,5.187,2263,3.361,2392,4.753,2409,3.667,2500,6.782,2501,4.133,2502,4.133,2503,4.133,2504,6.782,2505,5.845,2506,4.133,2507,4.133,2508,4.133,2509,4.133,2510,5.845,2511,4.133,2512,4.133,2513,4.133,2514,4.133,2515,4.133,2516,5.845,2517,4.133,2518,4.133,2519,4.133,2520,4.133,2521,5.845,2522,4.133,2523,4.133,2524,4.133,2525,5.845,2526,4.133,2527,4.133,2528,4.133,2529,4.133,2530,4.133,2531,4.133,2532,4.133,2533,4.133,2534,4.133,2535,4.133,2536,5.845,2537,4.133,2538,4.133,2539,4.133,2540,4.133,2541,4.133,2542,4.133,2543,4.133,2544,4.133,2545,4.133,2546,4.133,2547,4.133,2548,4.133,2549,5.845,2550,4.133,2551,4.133,2552,4.133,2553,4.133,2554,4.133,2555,4.133,2556,7.372,2557,4.133,2558,4.133,2559,4.133,2560,4.133,2561,4.133,2562,4.133,2563,4.133,2564,4.133,2565,4.133,2566,8.075,2567,7.166,2568,4.133,2569,4.133,2570,5.845,2571,4.133,2572,4.133,2573,4.133,2574,5.845,2575,4.133,2576,4.133,2577,4.133,2578,4.133,2579,4.133,2580,4.133,2581,4.133,2582,4.133,2583,4.133]],["title/modules.html",[65,2.816]],["body/modules.html",[12,0.006,27,0.004,28,0.006,29,0.004,64,6.349,65,2.523,75,4.036,313,4.286,317,4.036,329,3.828,846,4.286,904,7.722,988,4.286,1451,4.286,1685,4.036,1688,4.036,1779,5.471,1812,4.286,1941,4.286,2005,4.286,2223,4.286,2584,9.496,2585,9.496,2586,9.55,2587,7.22]],["title/overview.html",[2588,5.6]],["body/overview.html",[2,2.122,12,0.008,19,3.675,27,0.003,28,0.004,29,0.003,34,2.603,41,0.787,63,1.018,64,7.046,65,1.533,66,1.493,67,1.771,68,1.771,69,1.667,70,1.575,71,1.717,72,3.048,73,3.048,74,3.048,75,4.355,76,2.635,77,1.771,78,1.771,115,1.106,278,4.48,305,2.794,313,6.596,314,3.048,315,3.048,316,3.048,317,5.405,318,3.77,319,4.355,320,4.355,321,4.355,329,4.131,512,4.575,516,4.175,517,4.362,530,0.978,846,6.241,847,3.048,848,3.048,849,3.048,850,5.598,851,4.575,988,5.476,989,3.048,990,3.048,991,3.048,992,5.598,1331,5.598,1373,4.355,1381,4.131,1382,5.497,1451,6.596,1452,3.048,1453,3.048,1454,3.048,1685,4.824,1686,3.048,1687,3.048,1688,5.405,1718,5.309,1812,5.476,1813,3.048,1814,3.048,1815,3.048,1816,5.598,1864,3.048,1865,3.048,1866,3.048,1941,5.476,1942,3.048,1943,3.048,1944,3.048,1945,5.598,2005,5.476,2006,3.048,2007,3.048,2008,4.355,2131,3.048,2132,3.048,2133,3.048,2223,5.476,2224,3.048,2225,3.048,2226,4.355,2362,3.048,2588,3.048,2589,3.435,2590,3.435,2591,3.435,2592,3.435]],["title/miscellaneous/variables.html",[2448,2.603,2593,4.928]],["body/miscellaneous/variables.html",[3,0.022,8,0.091,12,0.008,16,0.986,22,0.038,25,0.58,27,0.004,28,0.002,29,0.001,51,2.852,54,0.346,55,0.501,70,1.409,88,2.467,93,1.121,96,0.936,98,1.172,103,1.535,106,1.831,130,3.596,131,3.775,155,1.077,159,1.077,180,1.376,187,2.574,201,1.376,245,1.755,252,2.499,257,0.789,261,3.027,263,1.729,266,0.832,272,1.376,278,1.037,290,1.499,334,2.349,336,2.423,337,2.079,338,2.079,341,1.898,344,2.079,349,2.079,353,1.448,354,1.883,389,2.079,399,3.18,407,1.536,408,1.536,409,2.079,410,2.079,425,3.544,426,0.881,429,2.079,430,2.079,431,2.079,445,1.229,455,1.755,508,1.376,512,1.229,516,1.121,517,1.172,534,1.371,553,0.81,597,2.146,622,1.755,664,1.477,737,2.727,738,3.561,743,1.755,770,1.077,773,1.822,774,1.822,775,1.121,793,0.967,828,2.328,851,1.229,852,1.477,864,2.369,867,3.038,1004,1.376,1034,1.121,1047,1.376,1072,1.477,1129,1.611,1130,2.079,1150,1,1162,1.611,1179,1.997,1181,2.193,1228,1.229,1306,1.376,1327,1.376,1332,1.693,1333,1.229,1334,2.499,1351,2.499,1352,1.611,1432,2.499,1434,2.577,1530,1.376,1603,1.376,1604,1.477,1605,2.499,1607,2.328,1608,1.611,1609,1.611,1699,2.499,1700,2.499,1710,2.499,1711,2.499,1713,1.121,1736,1.611,1755,2.703,1771,1.982,1808,1.477,1817,1.376,1830,3.027,1893,1.611,1909,1.229,2013,1.376,2102,2.499,2103,2.499,2119,1.611,2189,2.499,2231,1.376,2247,5.392,2276,1.611,2277,2.727,2278,2.727,2279,1.477,2281,2.727,2282,1.477,2284,2.727,2286,1.611,2287,2.727,2288,2.727,2289,1.611,2290,2.727,2292,1.477,2294,3.544,2295,2.727,2296,2.727,2297,2.727,2303,1.611,2304,2.727,2308,1.611,2309,2.727,2310,1.611,2311,2.727,2312,1.611,2313,2.727,2317,1.611,2318,2.727,2319,2.727,2320,1.611,2321,2.727,2324,1.611,2325,1.611,2326,2.727,2327,2.727,2338,1.611,2339,2.727,2340,2.727,2341,2.727,2348,1.477,2349,2.499,2351,1.611,2352,2.727,2355,2.727,2356,1.611,2357,2.727,2360,1.611,2365,1.611,2366,5.062,2367,2.727,2368,1.611,2369,2.727,2370,1.611,2371,2.727,2392,2.499,2448,1.229,2461,4.663,2464,1.611,2470,1.611,2472,1.611,2567,2.727,2593,1.611,2594,3.073,2595,3.994,2596,1.816,2597,1.816,2598,1.816,2599,5.255,2600,1.816,2601,1.816,2602,1.816,2603,1.816,2604,1.816,2605,6.077,2606,4.699,2607,1.816,2608,3.073,2609,4.699,2610,1.816,2611,1.816,2612,1.816,2613,1.816,2614,1.816,2615,3.073,2616,3.073,2617,1.816,2618,3.073,2619,3.073,2620,3.073,2621,3.073,2622,3.073,2623,3.073,2624,3.073,2625,3.073,2626,3.073,2627,1.816,2628,3.073,2629,1.816,2630,1.816,2631,1.816,2632,1.816,2633,3.994,2634,1.816,2635,1.816,2636,1.816,2637,1.816,2638,1.816,2639,1.816,2640,1.816,2641,1.816,2642,1.816,2643,3.073,2644,1.816,2645,1.816,2646,1.816,2647,1.816,2648,1.816,2649,3.073,2650,1.816,2651,1.816,2652,1.816,2653,1.816,2654,1.816,2655,1.816,2656,3.073,2657,1.816,2658,1.816,2659,4.699,2660,1.816,2661,1.816,2662,1.816,2663,1.816,2664,1.816,2665,1.816,2666,1.816,2667,1.816,2668,1.816,2669,1.816,2670,1.816,2671,1.816,2672,1.816,2673,1.816,2674,1.816,2675,1.816,2676,3.073,2677,1.816,2678,1.816,2679,1.816,2680,1.816,2681,1.816,2682,1.816,2683,1.816,2684,3.073,2685,1.816,2686,1.816,2687,1.816,2688,1.816,2689,1.816,2690,1.816,2691,1.816]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"classes/AppError.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"classes/AppUtils.html":{},"controllers/AuthController.html":{},"classes/AuthCreatedEvent.html":{},"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedEvent.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthEntity.html":{},"classes/AuthExistHandler.html":{},"classes/AuthExistQuery.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"classes/AuthResolver.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatedEvent.html":{},"classes/AuthUpdatedHandler.html":{},"injectables/AwsS3Service.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"classes/BaseSearchDto.html":{},"interfaces/CollectionProps.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigService.html":{},"classes/ContextProvider.html":{},"injectables/CookieSerializer.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CreateAuthCommand.html":{},"classes/CreateAuthHandler.html":{},"interfaces/DBSource.html":{},"classes/DatabaseClient.html":{},"classes/Deferred.html":{},"interfaces/Document.html":{},"classes/DtoMapperUtils.html":{},"interfaces/EntityOptions.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/EventStore.html":{},"interfaces/EventStoreOptionConfig.html":{},"injectables/ExitInterceptor.html":{},"classes/FacebookAuth.html":{},"injectables/FacebookStrategy.html":{},"interfaces/FindRequest.html":{},"injectables/GeneratorService.html":{},"classes/GetAuthHandler.html":{},"classes/GetAuthQuery.html":{},"classes/GoogleAuth.html":{},"guards/GqlAuthGuard.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/GraphqlErrors.html":{},"classes/HeadersDatasource.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAuthRepo.html":{},"interfaces/IAwsConfigInterface.html":{},"interfaces/IConstraintErrors.html":{},"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IEventSourceConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IEventStoreMessage.html":{},"interfaces/IFile.html":{},"interfaces/IGosipConfig.html":{},"interfaces/IGosipConfig-1.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IServiceList.html":{},"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"interfaces/IndexDefinition.html":{},"classes/LocalAuth.html":{},"injectables/LocalStrategy.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"interfaces/MultiTenancyConfig.html":{},"interfaces/MultiTenantModuleOptions.html":{},"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"modules/NestMultiTenantModule.html":{},"injectables/NestMultiTenantService.html":{},"classes/NestStoreConfigProvider.html":{},"classes/NestjsEventStore.html":{},"modules/NestjsEventStoreModule.html":{},"injectables/NestjsEventStoreService.html":{},"classes/NotFoundError.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/Paginate.html":{},"classes/ProjectEntity.html":{},"modules/ProjectModule.html":{},"injectables/ProjectRepository.html":{},"classes/ProjectResolver.html":{},"classes/ProjectResponseDto.html":{},"injectables/ProjectService.html":{},"classes/QueryFailedFilter.html":{},"injectables/ReferencesExplorerService.html":{},"modules/RepositoryModule.html":{},"injectables/RepositoryService.html":{},"interfaces/ServiceListItem.html":{},"classes/SnakeNamingStrategy.html":{},"interfaces/TenantInfo.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"classes/UserResolver.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"classes/ValidationError.html":{},"injectables/ValidatorService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1354,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{},"classes/ValidationError.html":{},"coverage.html":{}}}],["0.1.13",{"_index":2430,"title":{},"body":{"dependencies.html":{}}}],["0.1.8",{"_index":2443,"title":{},"body":{"dependencies.html":{}}}],["0.10.1",{"_index":2445,"title":{},"body":{"dependencies.html":{}}}],["0.10.2",{"_index":2402,"title":{},"body":{"dependencies.html":{}}}],["0.10.6",{"_index":2377,"title":{},"body":{"dependencies.html":{}}}],["0.19.0",{"_index":2397,"title":{},"body":{"dependencies.html":{}}}],["0.2.13",{"_index":2426,"title":{},"body":{"dependencies.html":{}}}],["0.2.19",{"_index":2435,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":2401,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":2414,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2269,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2354,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2266,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2267,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2270,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2273,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2291,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2285,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2300,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2353,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":540,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["1",{"_index":30,"title":{"controllers/AppController-1.html":{},"injectables/AppService-1.html":{},"interfaces/IGosipConfig-1.html":{}},"body":{"injectables/AwsS3Service.html":{},"classes/BaseSearchDto.html":{},"classes/PageOptionsDto.html":{}}}],["1.0.0",{"_index":2428,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":2439,"title":{},"body":{"dependencies.html":{}}}],["1.0.4",{"_index":2436,"title":{},"body":{"dependencies.html":{}}}],["1.1.11",{"_index":2379,"title":{},"body":{"dependencies.html":{}}}],["1.15.15",{"_index":2393,"title":{},"body":{"dependencies.html":{}}}],["1.17.0",{"_index":2408,"title":{},"body":{"dependencies.html":{}}}],["1.4.4",{"_index":2406,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2322,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":2361,"title":{},"body":{"coverage.html":{}}}],["1/16",{"_index":2359,"title":{},"body":{"coverage.html":{}}}],["1/17",{"_index":2363,"title":{},"body":{"coverage.html":{}}}],["1/19",{"_index":2364,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":2335,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":768,"title":{},"body":{"classes/BaseSearchDto.html":{},"classes/PageOptionsDto.html":{}}}],["10/10",{"_index":2331,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":823,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"coverage.html":{}}}],["1000",{"_index":2675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":539,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["14.5.8",{"_index":2413,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":144,"title":{},"body":{"classes/AppUtils.html":{}}}],["15/20",{"_index":2373,"title":{},"body":{"coverage.html":{}}}],["16/20",{"_index":2347,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":2589,"title":{},"body":{"overview.html":{}}}],["2",{"_index":34,"title":{"controllers/AppController-2.html":{},"injectables/AppService-2.html":{}},"body":{"classes/ValidationError.html":{},"overview.html":{}}}],["2.0.0",{"_index":2431,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":2403,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":2411,"title":{},"body":{"dependencies.html":{}}}],["2.546.0",{"_index":2396,"title":{},"body":{"dependencies.html":{}}}],["2.9.5",{"_index":2395,"title":{},"body":{"dependencies.html":{}}}],["2.9.6",{"_index":2394,"title":{},"body":{"dependencies.html":{}}}],["2.x",{"_index":2418,"title":{},"body":{"dependencies.html":{}}}],["2/6",{"_index":2302,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2334,"title":{},"body":{"coverage.html":{}}}],["2010",{"_index":538,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["24",{"_index":2677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["274906502",{"_index":2624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":37,"title":{"controllers/AppController-3.html":{},"injectables/AppService-3.html":{}},"body":{"dependencies.html":{}}}],["3.0.0",{"_index":2427,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":2447,"title":{},"body":{"dependencies.html":{}}}],["3.0.4",{"_index":2400,"title":{},"body":{"dependencies.html":{}}}],["3.0.6",{"_index":2399,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":2386,"title":{},"body":{"dependencies.html":{}}}],["3.1.2",{"_index":2412,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":2405,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":2390,"title":{},"body":{"dependencies.html":{}}}],["3.3.3",{"_index":2424,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":2332,"title":{},"body":{"coverage.html":{}}}],["31",{"_index":2590,"title":{},"body":{"overview.html":{}}}],["32",{"_index":2592,"title":{},"body":{"overview.html":{}}}],["33",{"_index":2301,"title":{},"body":{"coverage.html":{}}}],["4.0.5",{"_index":2416,"title":{},"body":{"dependencies.html":{}}}],["4.1.2",{"_index":2434,"title":{},"body":{"dependencies.html":{}}}],["4.17.15",{"_index":2421,"title":{},"body":{"dependencies.html":{}}}],["4/10",{"_index":2337,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":2336,"title":{},"body":{"coverage.html":{}}}],["46565",{"_index":2667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47",{"_index":2591,"title":{},"body":{"overview.html":{}}}],["5",{"_index":2362,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["5.4.2",{"_index":2420,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1981,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["5000",{"_index":139,"title":{},"body":{"classes/AppUtils.html":{}}}],["6",{"_index":2358,"title":{},"body":{"coverage.html":{}}}],["6.0.1",{"_index":2381,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":2384,"title":{},"body":{"dependencies.html":{}}}],["6.1.1",{"_index":2383,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":2387,"title":{},"body":{"dependencies.html":{}}}],["6.5.3",{"_index":2382,"title":{},"body":{"dependencies.html":{}}}],["6.7.2",{"_index":2380,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":2333,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":2676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["665655",{"_index":2670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":2360,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["7.1.0",{"_index":2423,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":2372,"title":{},"body":{"coverage.html":{}}}],["8.1.0",{"_index":2407,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":2330,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":2346,"title":{},"body":{"coverage.html":{}}}],["9]+/g",{"_index":1122,"title":{},"body":{"classes/DtoMapperUtils.html":{}}}],["_",{"_index":1113,"title":{},"body":{"classes/DtoMapperUtils.html":{},"classes/HttpExceptionFilter.html":{},"classes/SnakeNamingStrategy.html":{},"injectables/ValidatorService.html":{}}}],["_.includes(imagemimetypes",{"_index":2262,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["_.isarray(entity",{"_index":1115,"title":{},"body":{"classes/DtoMapperUtils.html":{}}}],["_.isarray(r.message",{"_index":1572,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["_.isempty(validationerror.children",{"_index":1591,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["_.isundefined(value",{"_index":1124,"title":{},"body":{"classes/DtoMapperUtils.html":{}}}],["_.snakecase(constraintkey",{"_index":1590,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["__dirname",{"_index":916,"title":{},"body":{"classes/ConfigService.html":{}}}],["__exposequeryplanexperimental",{"_index":1440,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{}}}],["__permission_definition__",{"_index":2681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["__resolvereference",{"_index":2119,"title":{},"body":{"injectables/ReferencesExplorerService.html":{},"miscellaneous/variables.html":{}}}],["__resource_definition__",{"_index":2688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_getkeywithnamespace",{"_index":963,"title":{},"body":{"classes/ContextProvider.html":{}}}],["_getkeywithnamespace(key",{"_index":965,"title":{},"body":{"classes/ContextProvider.html":{}}}],["_id",{"_index":636,"title":{},"body":{"classes/BaseRepository.html":{}}}],["_namespace",{"_index":962,"title":{},"body":{"classes/ContextProvider.html":{}}}],["_s3",{"_index":515,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["_secondpropertyname",{"_index":2165,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["_validationfilter",{"_index":1552,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["_validationfilter(validationerrors",{"_index":1556,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["abstract",{"_index":213,"title":{},"body":{"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/BaseSearchDto.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["accept",{"_index":1236,"title":{},"body":{"injectables/EventStore.html":{}}}],["access",{"_index":2544,"title":{},"body":{"index.html":{}}}],["accesskeyid",{"_index":943,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IAwsConfigInterface.html":{}}}],["accessors",{"_index":750,"title":{},"body":{"classes/BaseSearchDto.html":{},"classes/ConfigService.html":{},"classes/NestStoreConfigProvider.html":{},"classes/PageOptionsDto.html":{}}}],["accesstoken",{"_index":1274,"title":{},"body":{"classes/FacebookAuth.html":{},"classes/GoogleAuth.html":{},"classes/LocalAuth.html":{},"interfaces/MultiTenancyConfig.html":{},"interfaces/TenantInfo.html":{}}}],["achieved",{"_index":810,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["acl",{"_index":560,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["adapter",{"_index":1824,"title":{},"body":{"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"dependencies.html":{}}}],["added",{"_index":1853,"title":{},"body":{"injectables/NestCasbinService.html":{}}}],["addpolicy",{"_index":1837,"title":{},"body":{"injectables/NestCasbinService.html":{}}}],["addpolicy(...params",{"_index":1843,"title":{},"body":{"injectables/NestCasbinService.html":{}}}],["admin",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["admin/src/app.controller.ts",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["admin/src/app.controller.ts:9",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["admin/src/app.module.ts",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["admin/src/app.service.ts",{"_index":116,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["admin/src/app.service.ts:5",{"_index":117,"title":{},"body":{"injectables/AppService.html":{}}}],["admin/src/headers.datasource.ts",{"_index":1520,"title":{},"body":{"classes/HeadersDatasource.html":{},"coverage.html":{}}}],["admin/src/headers.datasource.ts:24",{"_index":1525,"title":{},"body":{"classes/HeadersDatasource.html":{}}}],["admin/src/headers.datasource.ts:5",{"_index":1528,"title":{},"body":{"classes/HeadersDatasource.html":{}}}],["admin/src/main.ts",{"_index":2268,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["advanced",{"_index":2503,"title":{},"body":{"index.html":{}}}],["aggregateroot",{"_index":575,"title":{},"body":{"classes/BaseEntity.html":{}}}],["allowing",{"_index":1764,"title":{},"body":{"modules/MongoModule.html":{}}}],["always",{"_index":814,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["another",{"_index":1790,"title":{},"body":{"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{}}}],["any,b",{"_index":980,"title":{},"body":{"injectables/CookieSerializer.html":{}}}],["apimodelproperty",{"_index":753,"title":{},"body":{"classes/BaseSearchDto.html":{},"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{}}}],["apimodelpropertyoptional",{"_index":1978,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apimodelpropertyoptional({enum",{"_index":1974,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apimodelpropertyoptional({minimum",{"_index":1976,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apiversion",{"_index":537,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["apollo",{"_index":1260,"title":{},"body":{"injectables/ExitInterceptor.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/GraphqlErrors.html":{},"classes/NotFoundError.html":{},"dependencies.html":{},"index.html":{}}}],["apollo/federation",{"_index":1393,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedModule.html":{}}}],["apollo/gateway",{"_index":1428,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{},"classes/HeadersDatasource.html":{},"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IServiceList.html":{},"interfaces/ServiceListItem.html":{},"dependencies.html":{}}}],["apolloerror",{"_index":1259,"title":{},"body":{"injectables/ExitInterceptor.html":{},"classes/GraphqlErrors.html":{},"classes/NotFoundError.html":{}}}],["apolloerror('internal",{"_index":1269,"title":{},"body":{"injectables/ExitInterceptor.html":{}}}],["apolloerror(msg",{"_index":1518,"title":{},"body":{"classes/GraphqlErrors.html":{}}}],["apollogateway",{"_index":1427,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{}}}],["apollooptions",{"_index":1503,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["apolloserver",{"_index":1431,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{}}}],["apolloserver(apollooptions",{"_index":1509,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["app",{"_index":134,"title":{},"body":{"classes/AppUtils.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"miscellaneous/functions.html":{}}}],["app.close",{"_index":141,"title":{},"body":{"classes/AppUtils.html":{}}}],["app.controller",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"modules/AppModule.html":{}}}],["appconstring",{"_index":1895,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{}},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["apperror",{"_index":40,"title":{"classes/AppError.html":{}},"body":{"classes/AppError.html":{},"coverage.html":{}}}],["application/vnd.eventstore.atom+json",{"_index":1237,"title":{},"body":{"injectables/EventStore.html":{}}}],["apply",{"_index":401,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["appmodule",{"_index":64,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps/.../main.ts",{"_index":2462,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gateway",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/HeadersDatasource.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/service",{"_index":31,"title":{},"body":{"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/FacebookStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/ProjectModule.html":{},"classes/ProjectResolver.html":{},"injectables/ProjectService.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["appservice",{"_index":19,"title":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{}},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"coverage.html":{},"overview.html":{}}}],["apputils",{"_index":126,"title":{"classes/AppUtils.html":{}},"body":{"classes/AppUtils.html":{},"coverage.html":{}}}],["architecture",{"_index":2579,"title":{},"body":{"index.html":{}}}],["args",{"_index":445,"title":{},"body":{"classes/AuthResolver.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"classes/ProjectResolver.html":{},"miscellaneous/variables.html":{}}}],["argumentshost",{"_index":1562,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["array",{"_index":828,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"modules/MongoModule.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(this.category",{"_index":1221,"title":{},"body":{"injectables/EventStore.html":{}}}],["array|object",{"_index":833,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["asc",{"_index":2453,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["assert",{"_index":716,"title":{},"body":{"classes/BaseRepository.html":{}}}],["associated",{"_index":2659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":136,"title":{},"body":{"classes/AppUtils.html":{},"controllers/AuthController.html":{},"classes/AuthExistHandler.html":{},"injectables/AuthRepository.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"classes/BaseRepository.html":{},"classes/CreateAuthHandler.html":{},"classes/DatabaseClient.html":{},"injectables/EventStore.html":{},"injectables/FacebookStrategy.html":{},"classes/GetAuthHandler.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/HeadersDatasource.html":{},"injectables/LocalStrategy.html":{},"modules/MongoCoreModule.html":{},"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"injectables/NestMultiTenantService.html":{},"injectables/ProjectRepository.html":{},"classes/ProjectResolver.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["asynchronously",{"_index":1763,"title":{},"body":{"modules/MongoModule.html":{}}}],["asynchrous",{"_index":1769,"title":{},"body":{"modules/MongoModule.html":{}}}],["asynchrously",{"_index":1781,"title":{},"body":{"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{}}}],["asyncproviders",{"_index":1742,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["attempt",{"_index":1074,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["auth",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCreatedEvent.html":{},"classes/AuthUpdatedEvent.html":{},"classes/CreateAuthCommand.html":{},"classes/CreateAuthHandler.html":{},"classes/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["auth.command.ts",{"_index":998,"title":{},"body":{"classes/CreateAuthCommand.html":{},"coverage.html":{}}}],["auth.command.ts:4",{"_index":1000,"title":{},"body":{"classes/CreateAuthCommand.html":{}}}],["auth.command.ts:6",{"_index":1001,"title":{},"body":{"classes/CreateAuthCommand.html":{}}}],["auth.controller",{"_index":327,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.entity",{"_index":2221,"title":{},"body":{"classes/UserEntity.html":{}}}],["auth.guard.ts",{"_index":1324,"title":{},"body":{"guards/GqlAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:5",{"_index":1325,"title":{},"body":{"guards/GqlAuthGuard.html":{}}}],["auth.handler.ts",{"_index":1006,"title":{},"body":{"classes/CreateAuthHandler.html":{},"classes/GetAuthHandler.html":{},"coverage.html":{}}}],["auth.handler.ts:12",{"_index":1309,"title":{},"body":{"classes/GetAuthHandler.html":{}}}],["auth.handler.ts:13",{"_index":1012,"title":{},"body":{"classes/CreateAuthHandler.html":{}}}],["auth.handler.ts:7",{"_index":1010,"title":{},"body":{"classes/CreateAuthHandler.html":{},"classes/GetAuthHandler.html":{}}}],["auth.query.ts",{"_index":1313,"title":{},"body":{"classes/GetAuthQuery.html":{},"coverage.html":{}}}],["auth.query.ts:5",{"_index":1316,"title":{},"body":{"classes/GetAuthQuery.html":{}}}],["auth.query.ts:7",{"_index":1317,"title":{},"body":{"classes/GetAuthQuery.html":{}}}],["auth.resolver",{"_index":325,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":323,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/FacebookStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["auth/src/app.controller.ts",{"_index":32,"title":{},"body":{"controllers/AppController-1.html":{},"coverage.html":{}}}],["auth/src/app.controller.ts:9",{"_index":33,"title":{},"body":{"controllers/AppController-1.html":{}}}],["auth/src/app.service.ts",{"_index":120,"title":{},"body":{"injectables/AppService-1.html":{},"coverage.html":{}}}],["auth/src/app.service.ts:5",{"_index":121,"title":{},"body":{"injectables/AppService-1.html":{}}}],["auth/src/auth/auth.controller.ts",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["auth/src/auth/auth.controller.ts:16",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth/src/auth/auth.controller.ts:8",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth/src/auth/auth.module.ts",{"_index":322,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/src/auth/auth.resolver.ts",{"_index":435,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["auth/src/auth/auth.resolver.ts:13",{"_index":441,"title":{},"body":{"classes/AuthResolver.html":{}}}],["auth/src/auth/auth.resolver.ts:32",{"_index":444,"title":{},"body":{"classes/AuthResolver.html":{}}}],["auth/src/auth/auth.resolver.ts:7",{"_index":438,"title":{},"body":{"classes/AuthResolver.html":{}}}],["auth/src/auth/auth.service.ts",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["auth/src/auth/auth.service.ts:18",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth/src/auth/auth.service.ts:5",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth/src/auth/auth.service.ts:8",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth/src/auth/strategy/facebook.strategy.ts",{"_index":1282,"title":{},"body":{"injectables/FacebookStrategy.html":{},"coverage.html":{}}}],["auth/src/auth/strategy/facebook.strategy.ts:16",{"_index":1286,"title":{},"body":{"injectables/FacebookStrategy.html":{}}}],["auth/src/auth/strategy/facebook.strategy.ts:7",{"_index":1284,"title":{},"body":{"injectables/FacebookStrategy.html":{}}}],["auth/src/auth/strategy/local.strategy.ts",{"_index":1679,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["auth/src/auth/strategy/local.strategy.ts:12",{"_index":1681,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["auth/src/auth/strategy/local.strategy.ts:7",{"_index":1680,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["auth/src/main.ts",{"_index":2271,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["authcommandhandlers",{"_index":2309,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":146,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authcreatedevent",{"_index":169,"title":{"classes/AuthCreatedEvent.html":{}},"body":{"classes/AuthCreatedEvent.html":{},"classes/AuthCreatedHandler.html":{},"coverage.html":{}}}],["authcreatedhandler",{"_index":180,"title":{"classes/AuthCreatedHandler.html":{}},"body":{"classes/AuthCreatedHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authdeletedevent",{"_index":195,"title":{"classes/AuthDeletedEvent.html":{}},"body":{"classes/AuthDeletedEvent.html":{},"classes/AuthDeletedHandler.html":{},"coverage.html":{}}}],["authdeletedhandler",{"_index":201,"title":{"classes/AuthDeletedHandler.html":{}},"body":{"classes/AuthDeletedHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authentication",{"_index":432,"title":{},"body":{"injectables/AuthRepository.html":{},"index.html":{}}}],["authentity",{"_index":175,"title":{"classes/AuthEntity.html":{}},"body":{"classes/AuthCreatedEvent.html":{},"classes/AuthEntity.html":{},"injectables/AuthRepository.html":{},"classes/AuthUpdatedEvent.html":{},"classes/CreateAuthCommand.html":{},"classes/CreateAuthHandler.html":{},"classes/GetAuthHandler.html":{},"classes/GetAuthQuery.html":{},"interfaces/IAuthRepo.html":{},"classes/UserEntity.html":{},"coverage.html":{}}}],["autheventhandlers",{"_index":2311,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authexisthandler",{"_index":272,"title":{"classes/AuthExistHandler.html":{}},"body":{"classes/AuthExistHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authexistquery",{"_index":281,"title":{"classes/AuthExistQuery.html":{}},"body":{"classes/AuthExistHandler.html":{},"classes/AuthExistQuery.html":{},"coverage.html":{}}}],["authguard",{"_index":304,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["authid",{"_index":197,"title":{},"body":{"classes/AuthDeletedEvent.html":{}}}],["authmodule",{"_index":313,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authqueryhandlers",{"_index":2313,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authrepoprovider",{"_index":2367,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authrepository",{"_index":278,"title":{"injectables/AuthRepository.html":{}},"body":{"classes/AuthExistHandler.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/CreateAuthHandler.html":{},"classes/GetAuthHandler.html":{},"modules/RepositoryModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["authresolver",{"_index":324,"title":{"classes/AuthResolver.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"coverage.html":{}}}],["authresponsedto",{"_index":254,"title":{"classes/AuthResponseDto.html":{}},"body":{"classes/AuthEntity.html":{},"classes/AuthResponseDto.html":{},"coverage.html":{}}}],["authservice",{"_index":318,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/FacebookStrategy.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["authsetup",{"_index":2293,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["authsetup(app",{"_index":2474,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authupdatedevent",{"_index":504,"title":{"classes/AuthUpdatedEvent.html":{}},"body":{"classes/AuthUpdatedEvent.html":{},"classes/AuthUpdatedHandler.html":{},"coverage.html":{}}}],["authupdatedhandler",{"_index":508,"title":{"classes/AuthUpdatedHandler.html":{}},"body":{"classes/AuthUpdatedHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auto",{"_index":802,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["available",{"_index":1779,"title":{},"body":{"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"modules.html":{}}}],["await",{"_index":140,"title":{},"body":{"classes/AppUtils.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"classes/BaseRepository.html":{},"classes/CreateAuthHandler.html":{},"classes/DatabaseClient.html":{},"injectables/EventStore.html":{},"injectables/FacebookStrategy.html":{},"classes/GetAuthHandler.html":{},"injectables/GraphQLTypesLoader.html":{},"modules/GraphqlDistributedModule.html":{},"classes/HeadersDatasource.html":{},"injectables/LocalStrategy.html":{},"modules/MongoCoreModule.html":{},"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"classes/ProjectResolver.html":{}}}],["awesomeness",{"_index":2535,"title":{},"body":{"index.html":{}}}],["aws",{"_index":527,"title":{},"body":{"injectables/AwsS3Service.html":{},"classes/ConfigService.html":{},"dependencies.html":{}}}],["aws.s3",{"_index":524,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["aws.s3(options",{"_index":550,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["aws.s3.types.clientconfiguration",{"_index":536,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["awss3config",{"_index":544,"title":{},"body":{"injectables/AwsS3Service.html":{},"classes/ConfigService.html":{}}}],["awss3config.accesskeyid",{"_index":546,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["awss3config.secretaccesskey",{"_index":547,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["awss3service",{"_index":512,"title":{"injectables/AwsS3Service.html":{}},"body":{"injectables/AwsS3Service.html":{},"modules/CommonModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["axios",{"_index":1178,"title":{},"body":{"injectables/EventStore.html":{},"dependencies.html":{}}}],["axios.get(eventurl",{"_index":1233,"title":{},"body":{"injectables/EventStore.html":{}}}],["azure",{"_index":2560,"title":{},"body":{"index.html":{}}}],["b",{"_index":986,"title":{},"body":{"injectables/CookieSerializer.html":{},"classes/DtoMapperUtils.html":{}}}],["back",{"_index":684,"title":{},"body":{"classes/BaseRepository.html":{}}}],["backend",{"_index":1905,"title":{},"body":{"injectables/NestMultiTenantService.html":{},"index.html":{}}}],["badrequestexception",{"_index":1561,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["base",{"_index":256,"title":{},"body":{"classes/AuthEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{},"index.html":{}}}],["base.dto",{"_index":483,"title":{},"body":{"classes/AuthResponseDto.html":{},"classes/ProjectResponseDto.html":{},"classes/UserResponseDto.html":{}}}],["based",{"_index":403,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"classes/Deferred.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{},"index.html":{}}}],["basedto",{"_index":478,"title":{"classes/BaseDto.html":{}},"body":{"classes/AuthResponseDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/ProjectResponseDto.html":{},"classes/UserResponseDto.html":{},"coverage.html":{}}}],["basedto:5",{"_index":481,"title":{},"body":{"classes/AuthResponseDto.html":{},"classes/ProjectResponseDto.html":{},"classes/UserResponseDto.html":{}}}],["basedto:6",{"_index":480,"title":{},"body":{"classes/AuthResponseDto.html":{},"classes/ProjectResponseDto.html":{},"classes/UserResponseDto.html":{}}}],["basedto:7",{"_index":482,"title":{},"body":{"classes/AuthResponseDto.html":{},"classes/ProjectResponseDto.html":{},"classes/UserResponseDto.html":{}}}],["baseentity",{"_index":206,"title":{"classes/BaseEntity.html":{}},"body":{"classes/AuthEntity.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{},"coverage.html":{}}}],["baseentity:12",{"_index":233,"title":{},"body":{"classes/AuthEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["baseentity:16",{"_index":227,"title":{},"body":{"classes/AuthEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["baseentity:20",{"_index":235,"title":{},"body":{"classes/AuthEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["baseentity:24",{"_index":230,"title":{},"body":{"classes/AuthEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["baseentity:28",{"_index":229,"title":{},"body":{"classes/AuthEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["baseentity:31",{"_index":237,"title":{},"body":{"classes/AuthEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["baseentity:33",{"_index":234,"title":{},"body":{"classes/AuthEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["baseentity:35",{"_index":247,"title":{},"body":{"classes/AuthEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["baseentity:42",{"_index":243,"title":{},"body":{"classes/AuthEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["baseentity:47",{"_index":242,"title":{},"body":{"classes/AuthEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["baseentity:52",{"_index":249,"title":{},"body":{"classes/AuthEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["baseentity:57",{"_index":251,"title":{},"body":{"classes/AuthEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["baseexplorerservice",{"_index":2068,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["baserepository",{"_index":333,"title":{"classes/BaseRepository.html":{}},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{},"coverage.html":{}}}],["baserepository:10",{"_index":427,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["baserepository:126",{"_index":359,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["baserepository:146",{"_index":412,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["baserepository:181",{"_index":393,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["baserepository:196",{"_index":388,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["baserepository:21",{"_index":423,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["baserepository:218",{"_index":371,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["baserepository:229",{"_index":368,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["baserepository:246",{"_index":363,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["baserepository:265",{"_index":416,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["baserepository:286",{"_index":394,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["baserepository:344",{"_index":400,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["baserepository:358",{"_index":372,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["baserepository:36",{"_index":378,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["baserepository:47",{"_index":381,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["baserepository:67",{"_index":385,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["baserepository:85",{"_index":375,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["baserepository:9",{"_index":422,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["basesearchdto",{"_index":745,"title":{"classes/BaseSearchDto.html":{}},"body":{"classes/BaseSearchDto.html":{},"coverage.html":{}}}],["bcrypt",{"_index":2398,"title":{},"body":{"dependencies.html":{}}}],["bcrypt.comparesync(password",{"_index":2657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcrypt.gensaltsync(8",{"_index":2655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcrypt.hashsync(password",{"_index":2654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["before",{"_index":261,"title":{},"body":{"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["before('remove",{"_index":250,"title":{},"body":{"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["before('save",{"_index":269,"title":{},"body":{"classes/AuthEntity.html":{}}}],["before('save')@before('update",{"_index":238,"title":{},"body":{"classes/AuthEntity.html":{}}}],["before('update",{"_index":241,"title":{},"body":{"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["beforeinsert",{"_index":217,"title":{},"body":{"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["being",{"_index":1191,"title":{},"body":{"injectables/EventStore.html":{}}}],["benefits",{"_index":2580,"title":{},"body":{"index.html":{}}}],["big",{"_index":2532,"title":{},"body":{"index.html":{}}}],["blood",{"_index":2636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bloodtearsmiddleware",{"_index":2288,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":558,"title":{},"body":{"injectables/AwsS3Service.html":{},"classes/HeadersDatasource.html":{}}}],["bodyparserconfig",{"_index":1444,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{}}}],["boolean",{"_index":228,"title":{},"body":{"classes/AuthEntity.html":{},"guards/AuthGuard.html":{},"injectables/AuthRepository.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"classes/ConfigService.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"injectables/EventStore.html":{},"interfaces/EventStoreOptionConfig.html":{},"interfaces/FindRequest.html":{},"guards/GqlAuthGuard.html":{},"injectables/GraphQLTypesLoader.html":{},"interfaces/IEventStoreMessage.html":{},"interfaces/IndexDefinition.html":{},"interfaces/MultiTenancyConfig.html":{},"classes/ProjectEntity.html":{},"injectables/ProjectRepository.html":{},"injectables/ReferencesExplorerService.html":{},"interfaces/TenantInfo.html":{},"injectables/TenantRepository.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"injectables/ValidatorService.html":{}}}],["boolean|'increment'|'uuid",{"_index":844,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["bootstrap",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CoreModule.html":{},"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{},"modules/NestCasbinModule.html":{},"modules/NestMultiTenantModule.html":{},"modules/NestjsEventStoreModule.html":{},"modules/ProjectModule.html":{},"modules/RepositoryModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["both",{"_index":2458,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bridge",{"_index":1187,"title":{},"body":{"injectables/EventStore.html":{}}}],["bridgeeventsto",{"_index":1157,"title":{},"body":{"injectables/EventStore.html":{}}}],["bridgeeventsto(subject",{"_index":1165,"title":{},"body":{"injectables/EventStore.html":{}}}],["browse",{"_index":2586,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2584,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":556,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["bucketname",{"_index":947,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IAwsConfigInterface.html":{}}}],["buffer",{"_index":1636,"title":{},"body":{"interfaces/IFile.html":{}}}],["builder",{"_index":1396,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedModule.html":{}}}],["buildfederatedschema",{"_index":1392,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{}}}],["buildservice",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphqlDistributedGatewayModule.html":{}}}],["built",{"_index":2518,"title":{},"body":{"index.html":{}}}],["c",{"_index":1104,"title":{},"body":{"classes/DtoMapperUtils.html":{}}}],["cache",{"_index":939,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["callback",{"_index":2112,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["callbackurl",{"_index":1295,"title":{},"body":{"injectables/FacebookStrategy.html":{}}}],["callhandler",{"_index":1136,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/ExitInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["canactivate",{"_index":307,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GqlAuthGuard.html":{}}}],["canactivate(context",{"_index":308,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GqlAuthGuard.html":{}}}],["capped",{"_index":710,"title":{},"body":{"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{}}}],["casbin",{"_index":1826,"title":{},"body":{"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"dependencies.html":{}}}],["casbin.constants",{"_index":1831,"title":{},"body":{"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{}}}],["casbin.constants.ts",{"_index":2319,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["casbin.module.ts",{"_index":1818,"title":{},"body":{"modules/NestCasbinModule.html":{}}}],["casbin.module.ts:13",{"_index":1822,"title":{},"body":{"modules/NestCasbinModule.html":{}}}],["casbin.service",{"_index":1829,"title":{},"body":{"modules/NestCasbinModule.html":{}}}],["casbin.service.ts",{"_index":1836,"title":{},"body":{"injectables/NestCasbinService.html":{},"coverage.html":{}}}],["casbin.service.ts:13",{"_index":1844,"title":{},"body":{"injectables/NestCasbinService.html":{}}}],["casbin.service.ts:20",{"_index":1850,"title":{},"body":{"injectables/NestCasbinService.html":{}}}],["casbin.service.ts:29",{"_index":1847,"title":{},"body":{"injectables/NestCasbinService.html":{}}}],["casbin.service.ts:6",{"_index":1842,"title":{},"body":{"injectables/NestCasbinService.html":{}}}],["casbin.service.ts:9",{"_index":1848,"title":{},"body":{"injectables/NestCasbinService.html":{}}}],["casbin/src/nest",{"_index":1817,"title":{},"body":{"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["casbin_enforcer",{"_index":1830,"title":{},"body":{"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["casbinenforcerprovider",{"_index":1832,"title":{},"body":{"modules/NestCasbinModule.html":{}}}],["casbinmodelpath",{"_index":1821,"title":{},"body":{"modules/NestCasbinModule.html":{}}}],["cat",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["catch",{"_index":475,"title":{},"body":{"classes/AuthResolver.html":{},"classes/BaseRepository.html":{},"classes/CreateAuthHandler.html":{},"classes/DatabaseClient.html":{},"classes/DtoMapperUtils.html":{},"injectables/EventStore.html":{},"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["catch(badrequestexception",{"_index":1565,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(exception",{"_index":1560,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["catch(queryfailederror",{"_index":2056,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["catcherror",{"_index":1139,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/ExitInterceptor.html":{}}}],["catcherror((e",{"_index":1266,"title":{},"body":{"injectables/ExitInterceptor.html":{}}}],["category",{"_index":1153,"title":{},"body":{"injectables/EventStore.html":{}}}],["categoryid",{"_index":1212,"title":{},"body":{"injectables/EventStore.html":{}}}],["catty",{"_index":460,"title":{},"body":{"classes/AuthResolver.html":{}}}],["ce",{"_index":1222,"title":{},"body":{"injectables/EventStore.html":{}}}],["central",{"_index":543,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["changes",{"_index":413,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["checkpermission",{"_index":1838,"title":{},"body":{"injectables/NestCasbinService.html":{}}}],["checkpermission(...params",{"_index":1846,"title":{},"body":{"injectables/NestCasbinService.html":{}}}],["chunk",{"_index":1242,"title":{},"body":{"injectables/EventStore.html":{}}}],["class",{"_index":22,"title":{"classes/AppError.html":{},"classes/AppUtils.html":{},"classes/AuthCreatedEvent.html":{},"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedEvent.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthEntity.html":{},"classes/AuthExistHandler.html":{},"classes/AuthExistQuery.html":{},"classes/AuthResolver.html":{},"classes/AuthResponseDto.html":{},"classes/AuthUpdatedEvent.html":{},"classes/AuthUpdatedHandler.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"classes/BaseSearchDto.html":{},"classes/ConfigService.html":{},"classes/ContextProvider.html":{},"classes/CreateAuthCommand.html":{},"classes/CreateAuthHandler.html":{},"classes/DatabaseClient.html":{},"classes/Deferred.html":{},"classes/DtoMapperUtils.html":{},"classes/FacebookAuth.html":{},"classes/GetAuthHandler.html":{},"classes/GetAuthQuery.html":{},"classes/GoogleAuth.html":{},"classes/GraphqlErrors.html":{},"classes/HeadersDatasource.html":{},"classes/HttpExceptionFilter.html":{},"classes/LocalAuth.html":{},"classes/NestStoreConfigProvider.html":{},"classes/NestjsEventStore.html":{},"classes/NotFoundError.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/Paginate.html":{},"classes/ProjectEntity.html":{},"classes/ProjectResolver.html":{},"classes/ProjectResponseDto.html":{},"classes/QueryFailedFilter.html":{},"classes/SnakeNamingStrategy.html":{},"classes/UserEntity.html":{},"classes/UserResolver.html":{},"classes/UserResponseDto.html":{},"classes/ValidationError.html":{}},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"classes/AppError.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"classes/AppUtils.html":{},"controllers/AuthController.html":{},"classes/AuthCreatedEvent.html":{},"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedEvent.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthEntity.html":{},"classes/AuthExistHandler.html":{},"classes/AuthExistQuery.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"classes/AuthResolver.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatedEvent.html":{},"classes/AuthUpdatedHandler.html":{},"injectables/AwsS3Service.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"classes/BaseSearchDto.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigService.html":{},"classes/ContextProvider.html":{},"injectables/CookieSerializer.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CreateAuthCommand.html":{},"classes/CreateAuthHandler.html":{},"classes/DatabaseClient.html":{},"classes/Deferred.html":{},"classes/DtoMapperUtils.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/EventStore.html":{},"injectables/ExitInterceptor.html":{},"classes/FacebookAuth.html":{},"injectables/FacebookStrategy.html":{},"injectables/GeneratorService.html":{},"classes/GetAuthHandler.html":{},"classes/GetAuthQuery.html":{},"classes/GoogleAuth.html":{},"guards/GqlAuthGuard.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/GraphqlErrors.html":{},"classes/HeadersDatasource.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPageMetaDtoParameters.html":{},"classes/LocalAuth.html":{},"injectables/LocalStrategy.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"modules/NestMultiTenantModule.html":{},"injectables/NestMultiTenantService.html":{},"classes/NestStoreConfigProvider.html":{},"classes/NestjsEventStore.html":{},"modules/NestjsEventStoreModule.html":{},"injectables/NestjsEventStoreService.html":{},"classes/NotFoundError.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/Paginate.html":{},"classes/ProjectEntity.html":{},"modules/ProjectModule.html":{},"injectables/ProjectRepository.html":{},"classes/ProjectResolver.html":{},"classes/ProjectResponseDto.html":{},"injectables/ProjectService.html":{},"classes/QueryFailedFilter.html":{},"injectables/ReferencesExplorerService.html":{},"modules/RepositoryModule.html":{},"injectables/RepositoryService.html":{},"classes/SnakeNamingStrategy.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"classes/UserResolver.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"classes/ValidationError.html":{},"injectables/ValidatorService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["classes",{"_index":41,"title":{},"body":{"classes/AppError.html":{},"classes/AppUtils.html":{},"classes/AuthCreatedEvent.html":{},"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedEvent.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthEntity.html":{},"classes/AuthExistHandler.html":{},"classes/AuthExistQuery.html":{},"classes/AuthResolver.html":{},"classes/AuthResponseDto.html":{},"classes/AuthUpdatedEvent.html":{},"classes/AuthUpdatedHandler.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"classes/BaseSearchDto.html":{},"classes/ConfigService.html":{},"classes/ContextProvider.html":{},"classes/CreateAuthCommand.html":{},"classes/CreateAuthHandler.html":{},"classes/DatabaseClient.html":{},"classes/Deferred.html":{},"classes/DtoMapperUtils.html":{},"classes/FacebookAuth.html":{},"classes/GetAuthHandler.html":{},"classes/GetAuthQuery.html":{},"classes/GoogleAuth.html":{},"classes/GraphqlErrors.html":{},"classes/HeadersDatasource.html":{},"classes/HttpExceptionFilter.html":{},"classes/LocalAuth.html":{},"classes/NestStoreConfigProvider.html":{},"classes/NestjsEventStore.html":{},"classes/NotFoundError.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/Paginate.html":{},"classes/ProjectEntity.html":{},"classes/ProjectResolver.html":{},"classes/ProjectResponseDto.html":{},"classes/QueryFailedFilter.html":{},"classes/SnakeNamingStrategy.html":{},"classes/UserEntity.html":{},"classes/UserResolver.html":{},"classes/UserResponseDto.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["classname",{"_index":2172,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["classtableinheritanceparentcolumnname",{"_index":2141,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["classtableinheritanceparentcolumnname(parenttablename",{"_index":2148,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["client",{"_index":434,"title":{},"body":{"injectables/AuthRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"classes/DatabaseClient.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"modules/MongoCoreModule.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"injectables/UserRepository.html":{},"dependencies.html":{}}}],["client.close",{"_index":1068,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["client.connect",{"_index":1732,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["client.db(dbname",{"_index":1735,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["client.db(mongomoduleoptions.dbname",{"_index":1741,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["clientid",{"_index":1291,"title":{},"body":{"injectables/FacebookStrategy.html":{}}}],["clientoptions",{"_index":1696,"title":{},"body":{"modules/MongoCoreModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"injectables/NestMultiTenantService.html":{}}}],["clientprovider",{"_index":1724,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["clientsecret",{"_index":1293,"title":{},"body":{"injectables/FacebookStrategy.html":{}}}],["clientsmap",{"_index":1743,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["clientsmap.values()].map(connection",{"_index":1747,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["close",{"_index":1035,"title":{},"body":{"classes/DatabaseClient.html":{},"classes/NestjsEventStore.html":{}}}],["cls",{"_index":2441,"title":{},"body":{"dependencies.html":{}}}],["cluster_appmodule",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":314,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":315,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":316,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":847,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":848,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_providers",{"_index":849,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":989,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":990,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":991,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_graphqldistributedmodule",{"_index":1452,"title":{},"body":{"modules/GraphqlDistributedModule.html":{},"overview.html":{}}}],["cluster_graphqldistributedmodule_exports",{"_index":1453,"title":{},"body":{"modules/GraphqlDistributedModule.html":{},"overview.html":{}}}],["cluster_graphqldistributedmodule_providers",{"_index":1454,"title":{},"body":{"modules/GraphqlDistributedModule.html":{},"overview.html":{}}}],["cluster_mongocoremodule",{"_index":1686,"title":{},"body":{"modules/MongoCoreModule.html":{},"overview.html":{}}}],["cluster_mongocoremodule_imports",{"_index":1687,"title":{},"body":{"modules/MongoCoreModule.html":{},"overview.html":{}}}],["cluster_nestcasbinmodule",{"_index":1813,"title":{},"body":{"modules/NestCasbinModule.html":{},"overview.html":{}}}],["cluster_nestcasbinmodule_exports",{"_index":1814,"title":{},"body":{"modules/NestCasbinModule.html":{},"overview.html":{}}}],["cluster_nestcasbinmodule_providers",{"_index":1815,"title":{},"body":{"modules/NestCasbinModule.html":{},"overview.html":{}}}],["cluster_nestjseventstoremodule",{"_index":1942,"title":{},"body":{"modules/NestjsEventStoreModule.html":{},"overview.html":{}}}],["cluster_nestjseventstoremodule_exports",{"_index":1943,"title":{},"body":{"modules/NestjsEventStoreModule.html":{},"overview.html":{}}}],["cluster_nestjseventstoremodule_providers",{"_index":1944,"title":{},"body":{"modules/NestjsEventStoreModule.html":{},"overview.html":{}}}],["cluster_nestmultitenantmodule",{"_index":1864,"title":{},"body":{"modules/NestMultiTenantModule.html":{},"overview.html":{}}}],["cluster_nestmultitenantmodule_exports",{"_index":1865,"title":{},"body":{"modules/NestMultiTenantModule.html":{},"overview.html":{}}}],["cluster_nestmultitenantmodule_providers",{"_index":1866,"title":{},"body":{"modules/NestMultiTenantModule.html":{},"overview.html":{}}}],["cluster_projectmodule",{"_index":2006,"title":{},"body":{"modules/ProjectModule.html":{},"overview.html":{}}}],["cluster_projectmodule_providers",{"_index":2007,"title":{},"body":{"modules/ProjectModule.html":{},"overview.html":{}}}],["cluster_repositorymodule",{"_index":2131,"title":{},"body":{"modules/RepositoryModule.html":{},"overview.html":{}}}],["cluster_repositorymodule_exports",{"_index":2132,"title":{},"body":{"modules/RepositoryModule.html":{},"overview.html":{}}}],["cluster_repositorymodule_providers",{"_index":2133,"title":{},"body":{"modules/RepositoryModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":2224,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":2225,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cockroachdb",{"_index":920,"title":{},"body":{"classes/ConfigService.html":{}}}],["code",{"_index":1144,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"classes/GraphqlErrors.html":{}}}],["collection",{"_index":334,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/EntityOptions.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"injectables/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["collection.deletemany(conditions",{"_index":695,"title":{},"body":{"classes/BaseRepository.html":{}}}],["collection.deleteone(conditions",{"_index":694,"title":{},"body":{"classes/BaseRepository.html":{}}}],["collection.find(conditions",{"_index":649,"title":{},"body":{"classes/BaseRepository.html":{}}}],["collection.find(query",{"_index":640,"title":{},"body":{"classes/BaseRepository.html":{}}}],["collection.findone(conditions",{"_index":645,"title":{},"body":{"classes/BaseRepository.html":{}}}],["collection.findone(query",{"_index":677,"title":{},"body":{"classes/BaseRepository.html":{}}}],["collection.findoneandupdate(req.conditions",{"_index":689,"title":{},"body":{"classes/BaseRepository.html":{}}}],["collection.insertone(eventresult",{"_index":665,"title":{},"body":{"classes/BaseRepository.html":{}}}],["collection.updateone(query",{"_index":674,"title":{},"body":{"classes/BaseRepository.html":{}}}],["collection_key",{"_index":622,"title":{},"body":{"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["collectionname",{"_index":2660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collectionprops",{"_index":426,"title":{"interfaces/CollectionProps.html":{}},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"injectables/UserRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["collections",{"_index":1757,"title":{},"body":{"modules/MongoModule.html":{},"miscellaneous/functions.html":{}}}],["column",{"_index":266,"title":{},"body":{"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"interfaces/CollectionProps.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"classes/FacebookAuth.html":{},"interfaces/FindRequest.html":{},"classes/GoogleAuth.html":{},"interfaces/IndexDefinition.html":{},"classes/LocalAuth.html":{},"classes/ProjectEntity.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"classes/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["column's",{"_index":809,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["column(type",{"_index":267,"title":{},"body":{"classes/AuthEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["column(undefined",{"_index":2001,"title":{},"body":{"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["column({unique",{"_index":2214,"title":{},"body":{"classes/UserEntity.html":{}}}],["column.decorator.ts",{"_index":2329,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["column_key",{"_index":774,"title":{},"body":{"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["columncommonoptions",{"_index":785,"title":{"interfaces/ColumnCommonOptions.html":{}},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"coverage.html":{}}}],["columnname",{"_index":2142,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["columnname(propertyname",{"_index":2152,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["columnoptions",{"_index":818,"title":{"interfaces/ColumnOptions.html":{}},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"coverage.html":{}}}],["columntypes",{"_index":819,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["comes",{"_index":2523,"title":{},"body":{"index.html":{}}}],["command",{"_index":1013,"title":{},"body":{"classes/CreateAuthHandler.html":{},"index.html":{}}}],["commandhandler",{"_index":1014,"title":{},"body":{"classes/CreateAuthHandler.html":{}}}],["commandhandler(createauthcommand",{"_index":1016,"title":{},"body":{"classes/CreateAuthHandler.html":{}}}],["common.service",{"_index":853,"title":{},"body":{"modules/CommonModule.html":{}}}],["commonmodule",{"_index":846,"title":{"modules/CommonModule.html":{}},"body":{"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["commonservice",{"_index":850,"title":{"injectables/CommonService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/CommonService.html":{},"coverage.html":{},"overview.html":{}}}],["compodoc/compodoc",{"_index":2378,"title":{},"body":{"dependencies.html":{}}}],["concept",{"_index":2512,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":366,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"injectables/UserRepository.html":{}}}],["config",{"_index":1806,"title":{},"body":{"interfaces/MultiTenancyConfig.html":{},"interfaces/MultiTenantModuleOptions.html":{},"modules/NestMultiTenantModule.html":{},"classes/NestjsEventStore.html":{},"modules/NestjsEventStoreModule.html":{},"interfaces/TenantInfo.html":{}}}],["config.interface",{"_index":1185,"title":{},"body":{"injectables/EventStore.html":{},"interfaces/MultiTenantModuleOptions.html":{},"classes/NestStoreConfigProvider.html":{},"modules/NestjsEventStoreModule.html":{}}}],["config.interface.ts",{"_index":1602,"title":{},"body":{"interfaces/IAwsConfigInterface.html":{},"interfaces/IEventSourceConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IGosipConfig.html":{},"interfaces/IGosipConfig-1.html":{},"interfaces/MultiTenancyConfig.html":{},"interfaces/TenantInfo.html":{},"coverage.html":{}}}],["config.provider.ts",{"_index":1910,"title":{},"body":{"classes/NestStoreConfigProvider.html":{},"coverage.html":{}}}],["config.provider.ts:4",{"_index":1913,"title":{},"body":{"classes/NestStoreConfigProvider.html":{}}}],["config.provider.ts:9",{"_index":1915,"title":{},"body":{"classes/NestStoreConfigProvider.html":{}}}],["config.service",{"_index":531,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["configservice",{"_index":516,"title":{"classes/ConfigService.html":{}},"body":{"injectables/AwsS3Service.html":{},"modules/CommonModule.html":{},"classes/ConfigService.html":{},"injectables/EventStore.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["configservice.awss3config",{"_index":545,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["configservice.get('jwt_secret_key",{"_index":866,"title":{},"body":{"modules/CommonModule.html":{}}}],["configservice.http.protocol",{"_index":1209,"title":{},"body":{"injectables/EventStore.html":{}}}],["configservice.tcp.hostname}:${configservice.http.port}/streams",{"_index":1210,"title":{},"body":{"injectables/EventStore.html":{}}}],["configuration",{"_index":1766,"title":{},"body":{"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{}}}],["connect",{"_index":1036,"title":{},"body":{"classes/DatabaseClient.html":{},"injectables/EventStore.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IGosipConfig-1.html":{},"classes/NestStoreConfigProvider.html":{},"classes/NestjsEventStore.html":{},"modules/NestjsEventStoreModule.html":{},"coverage.html":{},"dependencies.html":{}}}],["connect(config",{"_index":1923,"title":{},"body":{"classes/NestjsEventStore.html":{}}}],["connect(uri",{"_index":1045,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["connection",{"_index":425,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"classes/DatabaseClient.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["connection.close",{"_index":1748,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["connection.getcustomrepository(authrepository",{"_index":2632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection.getcustomrepository(projectrepository",{"_index":2683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection.getcustomrepository(userrepository",{"_index":2691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connectioncontainerprovider",{"_index":1722,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["connectionname",{"_index":1755,"title":{},"body":{"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["connectionoptions",{"_index":1820,"title":{},"body":{"modules/NestCasbinModule.html":{}}}],["connections",{"_index":1726,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["connections.get(key",{"_index":1729,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["connections.has(key",{"_index":1728,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["connections.set(key",{"_index":1731,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["connectionstring",{"_index":1807,"title":{},"body":{"interfaces/MultiTenancyConfig.html":{},"interfaces/TenantInfo.html":{}}}],["connectmongodbsession(session",{"_index":2664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console",{"_index":1217,"title":{},"body":{"injectables/EventStore.html":{},"classes/HeadersDatasource.html":{},"classes/ValidationError.html":{}}}],["console.log",{"_index":456,"title":{},"body":{"classes/AuthResolver.html":{}}}],["console.log('/callback",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{}}}],["console.log('cookies",{"_index":1539,"title":{},"body":{"classes/HeadersDatasource.html":{}}}],["console.log('ggggfgf",{"_index":1684,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["console.log('user",{"_index":1298,"title":{},"body":{"injectables/FacebookStrategy.html":{}}}],["console.log(context.req.session",{"_index":457,"title":{},"body":{"classes/AuthResolver.html":{}}}],["console.log(ctx.isauthenticated",{"_index":1329,"title":{},"body":{"guards/GqlAuthGuard.html":{}}}],["console.log(gt",{"_index":463,"title":{},"body":{"classes/AuthResolver.html":{}}}],["console.log(json.stringify(metadata",{"_index":2254,"title":{},"body":{"classes/ValidationError.html":{}}}],["console.trace(err",{"_index":1218,"title":{},"body":{"injectables/EventStore.html":{}}}],["console.trace(subscription",{"_index":1250,"title":{},"body":{"injectables/EventStore.html":{}}}],["const",{"_index":290,"title":{},"body":{"classes/AuthExistHandler.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"modules/CommonModule.html":{},"classes/ConfigService.html":{},"classes/CreateAuthHandler.html":{},"interfaces/DBSource.html":{},"classes/DatabaseClient.html":{},"interfaces/Document.html":{},"classes/DtoMapperUtils.html":{},"injectables/EventStore.html":{},"injectables/FacebookStrategy.html":{},"interfaces/FindRequest.html":{},"classes/GetAuthHandler.html":{},"guards/GqlAuthGuard.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/GraphqlErrors.html":{},"classes/HeadersDatasource.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IConstraintErrors.html":{},"interfaces/IndexDefinition.html":{},"injectables/LocalStrategy.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"modules/NestMultiTenantModule.html":{},"injectables/NestMultiTenantService.html":{},"classes/ProjectResolver.html":{},"classes/QueryFailedFilter.html":{},"injectables/ReferencesExplorerService.html":{},"injectables/TenantMiddleware.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"injectables/ValidatorService.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":1581,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["constrainterrors",{"_index":1607,"title":{},"body":{"interfaces/IConstraintErrors.html":{},"classes/QueryFailedFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["constrainterrors[exception.constraint",{"_index":2058,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["constraintkey",{"_index":1580,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IConstraintErrors.html":{}}}],["constructor",{"_index":49,"title":{},"body":{"classes/AppError.html":{},"classes/AuthCreatedEvent.html":{},"classes/AuthDeletedEvent.html":{},"classes/AuthExistHandler.html":{},"classes/AuthExistQuery.html":{},"injectables/AuthRepository.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatedEvent.html":{},"injectables/AwsS3Service.html":{},"classes/BaseDto.html":{},"classes/BaseRepository.html":{},"classes/ConfigService.html":{},"classes/CreateAuthCommand.html":{},"classes/CreateAuthHandler.html":{},"classes/DatabaseClient.html":{},"classes/Deferred.html":{},"injectables/EventStore.html":{},"injectables/FacebookStrategy.html":{},"classes/GetAuthHandler.html":{},"classes/GetAuthQuery.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPageMetaDtoParameters.html":{},"injectables/LocalStrategy.html":{},"modules/MongoCoreModule.html":{},"injectables/NestCasbinService.html":{},"injectables/NestMultiTenantService.html":{},"classes/NestStoreConfigProvider.html":{},"classes/NestjsEventStore.html":{},"injectables/NestjsEventStoreService.html":{},"classes/NotFoundError.html":{},"classes/PageMetaDto.html":{},"injectables/ProjectRepository.html":{},"classes/QueryFailedFilter.html":{},"injectables/ReferencesExplorerService.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{},"classes/ValidationError.html":{}}}],["constructor(@inject(casbin_enforcer",{"_index":1851,"title":{},"body":{"injectables/NestCasbinService.html":{}}}],["constructor(auth",{"_index":174,"title":{},"body":{"classes/AuthCreatedEvent.html":{},"classes/AuthUpdatedEvent.html":{},"classes/CreateAuthCommand.html":{}}}],["constructor(authid",{"_index":198,"title":{},"body":{"classes/AuthDeletedEvent.html":{}}}],["constructor(authrepository",{"_index":277,"title":{},"body":{"classes/AuthExistHandler.html":{},"injectables/AuthService.html":{},"classes/CreateAuthHandler.html":{},"classes/GetAuthHandler.html":{}}}],["constructor(authservice",{"_index":437,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/FacebookStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["constructor(client",{"_index":2015,"title":{},"body":{"injectables/ProjectRepository.html":{}}}],["constructor(configservice",{"_index":519,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["constructor(dbc",{"_index":352,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["constructor(dbsource",{"_index":599,"title":{},"body":{"classes/BaseRepository.html":{}}}],["constructor(enforcer",{"_index":1841,"title":{},"body":{"injectables/NestCasbinService.html":{}}}],["constructor(entity",{"_index":563,"title":{},"body":{"classes/BaseDto.html":{}}}],["constructor(eventstore",{"_index":1160,"title":{},"body":{"injectables/EventStore.html":{}}}],["constructor(localauth",{"_index":299,"title":{},"body":{"classes/AuthExistQuery.html":{}}}],["constructor(message",{"_index":50,"title":{},"body":{"classes/AppError.html":{},"classes/NotFoundError.html":{}}}],["constructor(messages",{"_index":2242,"title":{},"body":{"classes/ValidationError.html":{}}}],["constructor(modulescontainer",{"_index":2074,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["constructor(option",{"_index":1912,"title":{},"body":{"classes/NestStoreConfigProvider.html":{},"injectables/TenantMiddleware.html":{}}}],["constructor(private",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"injectables/AuthService.html":{},"injectables/FacebookStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["constructor(public",{"_index":627,"title":{},"body":{"classes/BaseRepository.html":{},"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["constructor(reflector",{"_index":1553,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["constructor(request",{"_index":1874,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["constructor(resolversexplorerservice",{"_index":1377,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{}}}],["constructor(undefined",{"_index":1966,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["constructor(where",{"_index":1314,"title":{},"body":{"classes/GetAuthQuery.html":{}}}],["container",{"_index":1784,"title":{},"body":{"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"miscellaneous/functions.html":{}}}],["containername",{"_index":1697,"title":{},"body":{"modules/MongoCoreModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"miscellaneous/functions.html":{}}}],["containernameprovider",{"_index":1721,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["context",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"classes/AuthResolver.html":{},"classes/ContextProvider.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExitInterceptor.html":{},"guards/GqlAuthGuard.html":{},"classes/HeadersDatasource.html":{},"injectables/NestMultiTenantService.html":{},"injectables/ReferencesExplorerService.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["context.authenticate('graphql",{"_index":464,"title":{},"body":{"classes/AuthResolver.html":{}}}],["context.login(user",{"_index":466,"title":{},"body":{"classes/AuthResolver.html":{}}}],["context.logout",{"_index":473,"title":{},"body":{"classes/AuthResolver.html":{}}}],["context.req",{"_index":1532,"title":{},"body":{"classes/HeadersDatasource.html":{}}}],["context.req.cookies",{"_index":1538,"title":{},"body":{"classes/HeadersDatasource.html":{}}}],["context.req.headers",{"_index":1533,"title":{},"body":{"classes/HeadersDatasource.html":{}}}],["context.res",{"_index":1541,"title":{},"body":{"classes/HeadersDatasource.html":{}}}],["context.res.cookie('session.app",{"_index":1545,"title":{},"body":{"classes/HeadersDatasource.html":{}}}],["contextmiddleware",{"_index":2290,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contextprovider",{"_index":960,"title":{"classes/ContextProvider.html":{}},"body":{"classes/ContextProvider.html":{},"coverage.html":{}}}],["contextprovider._namespace}.${key",{"_index":973,"title":{},"body":{"classes/ContextProvider.html":{}}}],["continuation",{"_index":2404,"title":{},"body":{"dependencies.html":{}}}],["continuation_key",{"_index":2352,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract/event",{"_index":1184,"title":{},"body":{"injectables/EventStore.html":{},"classes/NestStoreConfigProvider.html":{},"modules/NestjsEventStoreModule.html":{}}}],["control",{"_index":2545,"title":{},"body":{"index.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AuthController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["convert",{"_index":1109,"title":{},"body":{"classes/DtoMapperUtils.html":{},"classes/HttpExceptionFilter.html":{}}}],["cookie",{"_index":1530,"title":{},"body":{"classes/HeadersDatasource.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["cookies",{"_index":1542,"title":{},"body":{"classes/HeadersDatasource.html":{}}}],["cookies['session.app",{"_index":1546,"title":{},"body":{"classes/HeadersDatasource.html":{}}}],["cookieserializer",{"_index":319,"title":{"injectables/CookieSerializer.html":{}},"body":{"modules/AuthModule.html":{},"injectables/CookieSerializer.html":{},"coverage.html":{},"overview.html":{}}}],["core.module",{"_index":1772,"title":{},"body":{"modules/MongoModule.html":{}}}],["core.module.ts",{"_index":1690,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["core.module.ts:137",{"_index":1703,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["core.module.ts:149",{"_index":1693,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["core.module.ts:167",{"_index":1692,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["core.module.ts:22",{"_index":1698,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["core.module.ts:74",{"_index":1701,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["core.service",{"_index":994,"title":{},"body":{"modules/CoreModule.html":{}}}],["coremodule",{"_index":988,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coreservice",{"_index":992,"title":{"injectables/CoreService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/CoreService.html":{},"coverage.html":{},"overview.html":{}}}],["cors",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{}}}],["coverage",{"_index":2263,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cqrs",{"_index":2510,"title":{},"body":{"index.html":{}}}],["create",{"_index":336,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/BaseRepository.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"classes/DatabaseClient.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["create(cat",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["create(document",{"_index":357,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["createasyncoptionsprovider",{"_index":1456,"title":{},"body":{"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{}}}],["createasyncoptionsprovider(options",{"_index":1457,"title":{},"body":{"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{}}}],["createasyncproviders",{"_index":1461,"title":{},"body":{"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{}}}],["createasyncproviders(options",{"_index":1462,"title":{},"body":{"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{}}}],["createauthcommand",{"_index":996,"title":{"classes/CreateAuthCommand.html":{}},"body":{"classes/CreateAuthCommand.html":{},"classes/CreateAuthHandler.html":{},"coverage.html":{}}}],["createauthhandler",{"_index":1004,"title":{"classes/CreateAuthHandler.html":{}},"body":{"classes/CreateAuthHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createclient",{"_index":1037,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["createclient(uri",{"_index":1050,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["createcontext",{"_index":2125,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["createcontextcallback",{"_index":2070,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["createcontextcallback(instance",{"_index":2079,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["created",{"_index":1630,"title":{},"body":{"interfaces/IEventStoreMessage.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"miscellaneous/functions.html":{}}}],["created.event.ts",{"_index":171,"title":{},"body":{"classes/AuthCreatedEvent.html":{},"coverage.html":{}}}],["created.event.ts:4",{"_index":176,"title":{},"body":{"classes/AuthCreatedEvent.html":{}}}],["created.event.ts:6",{"_index":177,"title":{},"body":{"classes/AuthCreatedEvent.html":{}}}],["created.handler.ts",{"_index":182,"title":{},"body":{"classes/AuthCreatedHandler.html":{},"coverage.html":{}}}],["created.handler.ts:7",{"_index":186,"title":{},"body":{"classes/AuthCreatedHandler.html":{}}}],["createdat",{"_index":209,"title":{},"body":{"classes/AuthEntity.html":{},"classes/AuthResponseDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/ProjectEntity.html":{},"classes/ProjectResponseDto.html":{},"classes/UserEntity.html":{},"classes/UserResponseDto.html":{}}}],["createerr",{"_index":714,"title":{},"body":{"classes/BaseRepository.html":{}}}],["createmongooptions",{"_index":1795,"title":{},"body":{"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"injectables/NestMultiTenantService.html":{}}}],["createmongoproviders",{"_index":1773,"title":{},"body":{"modules/MongoModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createmongoproviders(connectionname",{"_index":1777,"title":{},"body":{"modules/MongoModule.html":{},"miscellaneous/functions.html":{}}}],["createnamespace(continuation_key",{"_index":2689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createparamdecorator",{"_index":2641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createproject",{"_index":2018,"title":{},"body":{"classes/ProjectResolver.html":{}}}],["createproject(@args('input",{"_index":2034,"title":{},"body":{"classes/ProjectResolver.html":{}}}],["createproject(input",{"_index":2020,"title":{},"body":{"classes/ProjectResolver.html":{}}}],["creates",{"_index":602,"title":{},"body":{"classes/BaseRepository.html":{},"classes/DatabaseClient.html":{}}}],["creating",{"_index":1780,"title":{},"body":{"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{}}}],["creation",{"_index":1783,"title":{},"body":{"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{}}}],["creator",{"_index":2093,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["credentials",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{},"interfaces/IEventSourceConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IGosipConfig.html":{},"interfaces/IGosipConfig-1.html":{}}}],["ctx",{"_index":1327,"title":{},"body":{"guards/GqlAuthGuard.html":{},"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":1567,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["ctx.isauthenticated",{"_index":1330,"title":{},"body":{"guards/GqlAuthGuard.html":{}}}],["ctx.req.user",{"_index":2642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctxheaders",{"_index":1534,"title":{},"body":{"classes/HeadersDatasource.html":{}}}],["ctxheaders.hasownproperty(key",{"_index":1535,"title":{},"body":{"classes/HeadersDatasource.html":{}}}],["ctxheaders[key",{"_index":1537,"title":{},"body":{"classes/HeadersDatasource.html":{}}}],["curr",{"_index":1416,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{}}}],["currentuser",{"_index":2278,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cursor",{"_index":648,"title":{},"body":{"classes/BaseRepository.html":{},"dependencies.html":{}}}],["cursor.limit(req.limit",{"_index":657,"title":{},"body":{"classes/BaseRepository.html":{}}}],["cursor.project(req.projection",{"_index":651,"title":{},"body":{"classes/BaseRepository.html":{}}}],["cursor.skip(req.skip",{"_index":655,"title":{},"body":{"classes/BaseRepository.html":{}}}],["cursor.sort(req.sort",{"_index":653,"title":{},"body":{"classes/BaseRepository.html":{}}}],["cursor.toarray",{"_index":659,"title":{},"body":{"classes/BaseRepository.html":{}}}],["customname",{"_index":2153,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["data",{"_index":1228,"title":{},"body":{"injectables/EventStore.html":{},"injectables/ExitInterceptor.html":{},"interfaces/IEventStoreMessage.html":{},"classes/ValidationError.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data/entities",{"_index":179,"title":{},"body":{"classes/AuthCreatedEvent.html":{},"classes/AuthUpdatedEvent.html":{}}}],["database",{"_index":793,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"classes/ConfigService.html":{},"interfaces/EntityOptions.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"injectables/NestCasbinService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["databaseclient",{"_index":1029,"title":{"classes/DatabaseClient.html":{}},"body":{"classes/DatabaseClient.html":{},"coverage.html":{}}}],["databaseisolation",{"_index":2457,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["databasename",{"_index":1878,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["databases",{"_index":805,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["databasestrategy",{"_index":1799,"title":{},"body":{"interfaces/MultiTenancyConfig.html":{},"interfaces/TenantInfo.html":{}}}],["dataisolation",{"_index":2456,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["date",{"_index":225,"title":{},"body":{"classes/AuthEntity.html":{},"classes/AuthResponseDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/IEventStoreMessage.html":{},"classes/ProjectEntity.html":{},"classes/ProjectResponseDto.html":{},"classes/UserEntity.html":{},"classes/UserResponseDto.html":{}}}],["db",{"_index":354,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"classes/DatabaseClient.html":{},"interfaces/Document.html":{},"interfaces/EntityOptions.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"injectables/UserRepository.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["db.collection(this.options.name",{"_index":703,"title":{},"body":{"classes/BaseRepository.html":{}}}],["db.createcollection(this.options.name",{"_index":707,"title":{},"body":{"classes/BaseRepository.html":{}}}],["dbc",{"_index":356,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["dbconnectionoptions",{"_index":1823,"title":{},"body":{"modules/NestCasbinModule.html":{}}}],["dbconstants",{"_index":2357,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbconstants.auth",{"_index":2631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconstants.db",{"_index":2633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconstants.project",{"_index":2682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconstants.user",{"_index":2690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbname",{"_index":1695,"title":{},"body":{"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"injectables/NestMultiTenantService.html":{}}}],["dbprovider",{"_index":1733,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["dbsource",{"_index":335,"title":{"interfaces/DBSource.html":{}},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"injectables/UserRepository.html":{},"coverage.html":{}}}],["ddd",{"_index":2506,"title":{},"body":{"index.html":{}}}],["debug",{"_index":1441,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{}}}],["declarations",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CoreModule.html":{},"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{},"modules/NestCasbinModule.html":{},"modules/NestMultiTenantModule.html":{},"modules/NestjsEventStoreModule.html":{},"modules/ProjectModule.html":{},"modules/RepositoryModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decodevalues",{"_index":1544,"title":{},"body":{"classes/HeadersDatasource.html":{}}}],["decorated",{"_index":2479,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decorator",{"_index":812,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"miscellaneous/functions.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"classes/AuthResolver.html":{},"classes/BaseEntity.html":{},"classes/BaseSearchDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/ProjectEntity.html":{},"classes/ProjectResolver.html":{},"classes/UserEntity.html":{}}}],["default",{"_index":130,"title":{},"body":{"classes/AppUtils.html":{},"injectables/AuthRepository.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"classes/ContextProvider.html":{},"interfaces/EntityOptions.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedModule.html":{},"classes/HttpExceptionFilter.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"injectables/NestMultiTenantService.html":{},"classes/PageOptionsDto.html":{},"injectables/ProjectRepository.html":{},"injectables/ReferencesExplorerService.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["default_mongo_client_options",{"_index":1699,"title":{},"body":{"modules/MongoCoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_mongo_connection_name",{"_index":2339,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_mongo_container_name",{"_index":1700,"title":{},"body":{"modules/MongoCoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultmongo",{"_index":2643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultnamingstrategy",{"_index":2139,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["defaults.util",{"_index":1483,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["defaultstream",{"_index":1953,"title":{},"body":{"modules/NestjsEventStoreModule.html":{}}}],["defaultvalue",{"_index":1103,"title":{},"body":{"classes/DtoMapperUtils.html":{}}}],["deferred",{"_index":1041,"title":{"classes/Deferred.html":{}},"body":{"classes/DatabaseClient.html":{},"classes/Deferred.html":{},"coverage.html":{}}}],["deferredclient",{"_index":1032,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["deferreddb",{"_index":1033,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["defined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"classes/AppError.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"classes/AppUtils.html":{},"controllers/AuthController.html":{},"classes/AuthCreatedEvent.html":{},"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedEvent.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthEntity.html":{},"classes/AuthExistHandler.html":{},"classes/AuthExistQuery.html":{},"guards/AuthGuard.html":{},"injectables/AuthRepository.html":{},"classes/AuthResolver.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatedEvent.html":{},"classes/AuthUpdatedHandler.html":{},"injectables/AwsS3Service.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"classes/BaseSearchDto.html":{},"classes/ConfigService.html":{},"classes/ContextProvider.html":{},"injectables/CookieSerializer.html":{},"classes/CreateAuthCommand.html":{},"classes/CreateAuthHandler.html":{},"classes/DatabaseClient.html":{},"classes/Deferred.html":{},"interfaces/Document.html":{},"classes/DtoMapperUtils.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/EventStore.html":{},"injectables/ExitInterceptor.html":{},"classes/FacebookAuth.html":{},"injectables/FacebookStrategy.html":{},"injectables/GeneratorService.html":{},"classes/GetAuthHandler.html":{},"classes/GetAuthQuery.html":{},"classes/GoogleAuth.html":{},"guards/GqlAuthGuard.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/GraphqlErrors.html":{},"classes/HeadersDatasource.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAuthRepo.html":{},"interfaces/IConstraintErrors.html":{},"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"classes/LocalAuth.html":{},"injectables/LocalStrategy.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"interfaces/MongoOptionsFactory.html":{},"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"modules/NestMultiTenantModule.html":{},"injectables/NestMultiTenantService.html":{},"classes/NestStoreConfigProvider.html":{},"classes/NestjsEventStore.html":{},"modules/NestjsEventStoreModule.html":{},"injectables/NestjsEventStoreService.html":{},"classes/NotFoundError.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/Paginate.html":{},"classes/ProjectEntity.html":{},"injectables/ProjectRepository.html":{},"classes/ProjectResolver.html":{},"classes/ProjectResponseDto.html":{},"classes/QueryFailedFilter.html":{},"injectables/ReferencesExplorerService.html":{},"classes/SnakeNamingStrategy.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{},"classes/ValidationError.html":{},"injectables/ValidatorService.html":{}}}],["delegatesexplorerservice",{"_index":1379,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedModule.html":{}}}],["delete",{"_index":245,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthRepository.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"classes/ProjectEntity.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["deleted",{"_index":210,"title":{},"body":{"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["deleted.event.ts",{"_index":196,"title":{},"body":{"classes/AuthDeletedEvent.html":{},"coverage.html":{}}}],["deleted.event.ts:3",{"_index":199,"title":{},"body":{"classes/AuthDeletedEvent.html":{}}}],["deleted.event.ts:5",{"_index":200,"title":{},"body":{"classes/AuthDeletedEvent.html":{}}}],["deleted.handler.ts",{"_index":202,"title":{},"body":{"classes/AuthDeletedHandler.html":{},"coverage.html":{}}}],["deleted.handler.ts:7",{"_index":203,"title":{},"body":{"classes/AuthDeletedHandler.html":{}}}],["deletedat",{"_index":211,"title":{},"body":{"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["deletemany",{"_index":337,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["deletemany(conditions",{"_index":362,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["deleteone",{"_index":338,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["deleteone(conditions",{"_index":367,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["deleteonebyid",{"_index":339,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["deleteonebyid(id",{"_index":370,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["deleteresult",{"_index":693,"title":{},"body":{"classes/BaseRepository.html":{}}}],["deletewriteopresultobject",{"_index":621,"title":{},"body":{"classes/BaseRepository.html":{}}}],["depend",{"_index":2478,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dependencies",{"_index":66,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CoreModule.html":{},"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"modules/NestCasbinModule.html":{},"modules/NestMultiTenantModule.html":{},"modules/NestjsEventStoreModule.html":{},"modules/ProjectModule.html":{},"modules/RepositoryModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deployment",{"_index":2552,"title":{},"body":{"index.html":{}}}],["desc",{"_index":2454,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["describes",{"_index":845,"title":{},"body":{"interfaces/ColumnOptions.html":{},"interfaces/EntityOptions.html":{}}}],["description",{"_index":404,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"classes/DatabaseClient.html":{},"classes/Deferred.html":{},"interfaces/EntityOptions.html":{},"injectables/EventStore.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"classes/NestjsEventStore.html":{},"classes/ProjectEntity.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["descriptor",{"_index":2615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deserializeuser",{"_index":976,"title":{},"body":{"injectables/CookieSerializer.html":{}}}],["deserializeuser(payload",{"_index":978,"title":{},"body":{"injectables/CookieSerializer.html":{}}}],["design",{"_index":1188,"title":{},"body":{"injectables/EventStore.html":{},"index.html":{}}}],["designed",{"_index":2513,"title":{},"body":{"index.html":{}}}],["development",{"_index":914,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["didreceiveresponse",{"_index":1522,"title":{},"body":{"classes/HeadersDatasource.html":{}}}],["didreceiveresponse(response",{"_index":1524,"title":{},"body":{"classes/HeadersDatasource.html":{}}}],["different",{"_index":2525,"title":{},"body":{"index.html":{}}}],["disablehealthcheck",{"_index":1442,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{}}}],["distributed",{"_index":1418,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{},"index.html":{}}}],["distributed.factory",{"_index":1484,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["distributed.factory.ts",{"_index":1374,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{},"coverage.html":{}}}],["distributed.factory.ts:14",{"_index":1385,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{}}}],["distributed.factory.ts:25",{"_index":1391,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{}}}],["distributed.factory.ts:47",{"_index":1387,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{}}}],["distributed.module.ts",{"_index":1455,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["distributed.module.ts:117",{"_index":1468,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["distributed.module.ts:42",{"_index":1464,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["distributed.module.ts:55",{"_index":1467,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["distributed.module.ts:69",{"_index":1463,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["distributed.module.ts:86",{"_index":1459,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["distributed_gateway_build_service",{"_index":2318,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["distributed_gateway_options",{"_index":1432,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["doc",{"_index":421,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["docker",{"_index":2553,"title":{},"body":{"index.html":{}}}],["document",{"_index":360,"title":{"interfaces/Document.html":{}},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"injectables/UserRepository.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["document._id",{"_index":697,"title":{},"body":{"classes/BaseRepository.html":{}}}],["document._id.tostring",{"_index":698,"title":{},"body":{"classes/BaseRepository.html":{}}}],["document.id",{"_index":696,"title":{},"body":{"classes/BaseRepository.html":{}}}],["document.then",{"_index":742,"title":{},"body":{"classes/BaseRepository.html":{}}}],["documentation",{"_index":2264,"title":{},"body":{"coverage.html":{}}}],["documentnode",{"_index":1345,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["documents",{"_index":382,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["doesn't",{"_index":395,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["domain",{"_index":1189,"title":{},"body":{"injectables/EventStore.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["don't",{"_index":2618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["done",{"_index":979,"title":{},"body":{"injectables/CookieSerializer.html":{}}}],["done(null",{"_index":987,"title":{},"body":{"injectables/CookieSerializer.html":{}}}],["dotenv",{"_index":893,"title":{},"body":{"classes/ConfigService.html":{},"dependencies.html":{}}}],["dotenv.config",{"_index":901,"title":{},"body":{"classes/ConfigService.html":{}}}],["driver",{"_index":1752,"title":{},"body":{"modules/MongoModule.html":{}}}],["drop",{"_index":730,"title":{},"body":{"classes/BaseRepository.html":{}}}],["dropschema",{"_index":935,"title":{},"body":{"classes/ConfigService.html":{}}}],["dto",{"_index":358,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"classes/DtoMapperUtils.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["dtomapperutils",{"_index":590,"title":{"classes/DtoMapperUtils.html":{}},"body":{"classes/BaseEntity.html":{},"classes/DtoMapperUtils.html":{},"coverage.html":{}}}],["dtomapperutils.todto(this.todtoclass",{"_index":594,"title":{},"body":{"classes/BaseEntity.html":{}}}],["dtos",{"_index":591,"title":{},"body":{"classes/BaseEntity.html":{}}}],["dtos/paginate.dto",{"_index":1667,"title":{},"body":{"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{}}}],["dtos/response",{"_index":255,"title":{},"body":{"classes/AuthEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["dynamicmodule",{"_index":1424,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"modules/NestCasbinModule.html":{},"modules/NestMultiTenantModule.html":{},"modules/NestjsEventStoreModule.html":{}}}],["e",{"_index":476,"title":{},"body":{"classes/AuthResolver.html":{},"classes/DatabaseClient.html":{},"classes/DtoMapperUtils.html":{},"injectables/ExitInterceptor.html":{}}}],["e2e",{"_index":2575,"title":{},"body":{"index.html":{}}}],["edit",{"_index":1859,"title":{},"body":{"injectables/NestCasbinService.html":{}}}],["editor.theme",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["email",{"_index":465,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/FacebookAuth.html":{},"injectables/FacebookStrategy.html":{},"classes/GoogleAuth.html":{},"interfaces/IUserRepo.html":{},"classes/LocalAuth.html":{},"injectables/LocalStrategy.html":{},"classes/UserEntity.html":{},"classes/UserResponseDto.html":{}}}],["emailing",{"_index":2541,"title":{},"body":{"index.html":{}}}],["embeddedprefixes",{"_index":2154,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["embeded/social",{"_index":260,"title":{},"body":{"classes/AuthEntity.html":{}}}],["empty",{"_index":1003,"title":{},"body":{"classes/CreateAuthCommand.html":{}}}],["enabled",{"_index":1800,"title":{},"body":{"interfaces/MultiTenancyConfig.html":{},"interfaces/TenantInfo.html":{}}}],["enablemultitenancy",{"_index":2350,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["enablemultitenancy(option",{"_index":2475,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encoding",{"_index":1637,"title":{},"body":{"interfaces/IFile.html":{}}}],["enforcer",{"_index":1825,"title":{},"body":{"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{}}}],["enforcer.initwithadapter(casbinmodelpath",{"_index":1834,"title":{},"body":{"modules/NestCasbinModule.html":{}}}],["enforcer.loadpolicy",{"_index":1835,"title":{},"body":{"modules/NestCasbinModule.html":{}}}],["enrichname",{"_index":216,"title":{},"body":{"classes/AuthEntity.html":{}}}],["enterprise",{"_index":2501,"title":{},"body":{"index.html":{}}}],["entities",{"_index":428,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseDto.html":{},"classes/ConfigService.html":{},"interfaces/IAuthRepo.html":{},"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["entity",{"_index":257,"title":{},"body":{"classes/AuthEntity.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/CollectionProps.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"classes/DtoMapperUtils.html":{},"interfaces/EntityOptions.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"classes/ProjectEntity.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"classes/UserEntity.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["entity's",{"_index":1128,"title":{},"body":{"interfaces/EntityOptions.html":{}}}],["entity(name",{"_index":2481,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entity(nameoroptions",{"_index":2482,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entity(options",{"_index":2476,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entity.createdat",{"_index":570,"title":{},"body":{"classes/BaseDto.html":{}}}],["entity.id",{"_index":568,"title":{},"body":{"classes/BaseDto.html":{}}}],["entity.map((u",{"_index":1116,"title":{},"body":{"classes/DtoMapperUtils.html":{}}}],["entity.ts",{"_index":574,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["entity.ts:12",{"_index":579,"title":{},"body":{"classes/BaseEntity.html":{}}}],["entity.ts:16",{"_index":576,"title":{},"body":{"classes/BaseEntity.html":{}}}],["entity.ts:20",{"_index":581,"title":{},"body":{"classes/BaseEntity.html":{}}}],["entity.ts:24",{"_index":578,"title":{},"body":{"classes/BaseEntity.html":{}}}],["entity.ts:28",{"_index":577,"title":{},"body":{"classes/BaseEntity.html":{}}}],["entity.ts:31",{"_index":582,"title":{},"body":{"classes/BaseEntity.html":{}}}],["entity.ts:33",{"_index":580,"title":{},"body":{"classes/BaseEntity.html":{}}}],["entity.ts:35",{"_index":585,"title":{},"body":{"classes/BaseEntity.html":{}}}],["entity.ts:42",{"_index":584,"title":{},"body":{"classes/BaseEntity.html":{}}}],["entity.ts:47",{"_index":583,"title":{},"body":{"classes/BaseEntity.html":{}}}],["entity.ts:52",{"_index":586,"title":{},"body":{"classes/BaseEntity.html":{}}}],["entity.ts:57",{"_index":587,"title":{},"body":{"classes/BaseEntity.html":{}}}],["entity.updatedat",{"_index":572,"title":{},"body":{"classes/BaseDto.html":{}}}],["entity_key",{"_index":773,"title":{},"body":{"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["entityoptions",{"_index":1125,"title":{"interfaces/EntityOptions.html":{}},"body":{"interfaces/EntityOptions.html":{},"coverage.html":{}}}],["entityrepository",{"_index":429,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["enum",{"_index":832,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"classes/PageOptionsDto.html":{}}}],["enumerated",{"_index":830,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["enumerations",{"_index":2449,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":1987,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["env",{"_index":882,"title":{},"body":{"classes/ConfigService.html":{}}}],["envname",{"_index":907,"title":{},"body":{"classes/ConfigService.html":{}}}],["err",{"_index":705,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/EventStore.html":{}}}],["error",{"_index":1027,"title":{},"body":{"classes/CreateAuthHandler.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/EventStore.html":{},"injectables/ExitInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{},"classes/ValidationError.html":{}}}],["error('invalid",{"_index":1750,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["error('missing",{"_index":292,"title":{},"body":{"classes/AuthExistHandler.html":{},"classes/GetAuthHandler.html":{}}}],["error('no",{"_index":631,"title":{},"body":{"classes/BaseRepository.html":{},"modules/GraphqlDistributedModule.html":{}}}],["error.capturestacktrace(this",{"_index":62,"title":{},"body":{"classes/AppError.html":{}}}],["error.code",{"_index":1147,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["error.details",{"_index":1148,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["error.fields",{"_index":1589,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.fields.{key",{"_index":1584,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.getresponse",{"_index":1146,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["error.getstatus",{"_index":1145,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["error.unique.email",{"_index":1609,"title":{},"body":{"interfaces/IConstraintErrors.html":{},"miscellaneous/variables.html":{}}}],["errormessage",{"_index":2057,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["errors",{"_index":2055,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["errors.ts",{"_index":1605,"title":{},"body":{"interfaces/IConstraintErrors.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["errors.ts:1",{"_index":1606,"title":{},"body":{"interfaces/IConstraintErrors.html":{}}}],["errorsinterceptor",{"_index":1132,"title":{"injectables/ErrorsInterceptor.html":{}},"body":{"injectables/ErrorsInterceptor.html":{},"coverage.html":{}}}],["esconfig",{"_index":1911,"title":{},"body":{"classes/NestStoreConfigProvider.html":{}}}],["esconnectionconfig",{"_index":2687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["esstreamconfig",{"_index":1162,"title":{},"body":{"injectables/EventStore.html":{},"miscellaneous/variables.html":{}}}],["esstreamconfig.name",{"_index":1203,"title":{},"body":{"injectables/EventStore.html":{}}}],["esstreamconfig.resolvelinktos",{"_index":1205,"title":{},"body":{"injectables/EventStore.html":{}}}],["etc",{"_index":842,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["eu",{"_index":542,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["event",{"_index":187,"title":{},"body":{"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedHandler.html":{},"injectables/AuthRepository.html":{},"classes/AuthUpdatedHandler.html":{},"classes/BaseRepository.html":{},"injectables/EventStore.html":{},"interfaces/EventStoreOptionConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IEventStoreMessage.html":{},"interfaces/IGosipConfig-1.html":{},"classes/NestStoreConfigProvider.html":{},"classes/NestjsEventStore.html":{},"modules/NestjsEventStoreModule.html":{},"injectables/NestjsEventStoreService.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["event.bind(this)(document",{"_index":740,"title":{},"body":{"classes/BaseRepository.html":{}}}],["event.constructor.name",{"_index":1215,"title":{},"body":{"injectables/EventStore.html":{}}}],["event.data",{"_index":1225,"title":{},"body":{"injectables/EventStore.html":{}}}],["event.eventtype",{"_index":1227,"title":{},"body":{"injectables/EventStore.html":{}}}],["event.isjson",{"_index":1224,"title":{},"body":{"injectables/EventStore.html":{}}}],["event[category].id",{"_index":1213,"title":{},"body":{"injectables/EventStore.html":{}}}],["event_store_config",{"_index":1961,"title":{},"body":{"injectables/NestjsEventStoreService.html":{}}}],["event_store_config_use_env",{"_index":1960,"title":{},"body":{"injectables/NestjsEventStoreService.html":{}}}],["event_store_connection_config_provider",{"_index":2686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event_store_provider",{"_index":2684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event_store_stream_config_provider",{"_index":2685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":1031,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["eventfactory",{"_index":1931,"title":{},"body":{"classes/NestjsEventStore.html":{}}}],["eventhandlers",{"_index":1154,"title":{},"body":{"injectables/EventStore.html":{}}}],["eventid",{"_index":1631,"title":{},"body":{"interfaces/IEventStoreMessage.html":{}}}],["eventnumber",{"_index":1632,"title":{},"body":{"interfaces/IEventStoreMessage.html":{}}}],["eventpublisher",{"_index":1009,"title":{},"body":{"classes/CreateAuthHandler.html":{}}}],["eventresult",{"_index":661,"title":{},"body":{"classes/BaseRepository.html":{}}}],["events",{"_index":738,"title":{},"body":{"classes/BaseRepository.html":{},"classes/DatabaseClient.html":{},"injectables/EventStore.html":{},"miscellaneous/variables.html":{}}}],["eventshandler",{"_index":189,"title":{},"body":{"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthUpdatedHandler.html":{}}}],["eventshandler(authcreatedevent",{"_index":191,"title":{},"body":{"classes/AuthCreatedHandler.html":{}}}],["eventshandler(authdeletedevent",{"_index":204,"title":{},"body":{"classes/AuthDeletedHandler.html":{}}}],["eventshandler(authupdatedevent",{"_index":511,"title":{},"body":{"classes/AuthUpdatedHandler.html":{}}}],["eventsourceconfig",{"_index":874,"title":{},"body":{"classes/ConfigService.html":{},"classes/NestStoreConfigProvider.html":{}}}],["eventstore",{"_index":1149,"title":{"injectables/EventStore.html":{}},"body":{"injectables/EventStore.html":{},"modules/NestjsEventStoreModule.html":{},"coverage.html":{},"dependencies.html":{}}}],["eventstore.com",{"_index":1935,"title":{},"body":{"classes/NestjsEventStore.html":{}}}],["eventstore.org",{"_index":1186,"title":{},"body":{"injectables/EventStore.html":{}}}],["eventstoreconfig",{"_index":1959,"title":{},"body":{"injectables/NestjsEventStoreService.html":{}}}],["eventstorehosturl",{"_index":1155,"title":{},"body":{"injectables/EventStore.html":{}}}],["eventstoreoptionconfig",{"_index":1163,"title":{"interfaces/EventStoreOptionConfig.html":{}},"body":{"injectables/EventStore.html":{},"interfaces/EventStoreOptionConfig.html":{},"modules/NestjsEventStoreModule.html":{},"coverage.html":{}}}],["eventtype",{"_index":1226,"title":{},"body":{"injectables/EventStore.html":{},"interfaces/IEventStoreMessage.html":{}}}],["eventurl",{"_index":1231,"title":{},"body":{"injectables/EventStore.html":{}}}],["example",{"_index":822,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"classes/Deferred.html":{},"injectables/EventStore.html":{},"classes/NestjsEventStore.html":{}}}],["exception",{"_index":1564,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["exception.constraint",{"_index":2060,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["exception.constraint.startswith('uq",{"_index":2061,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["exception.getresponse",{"_index":1571,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":1569,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":1550,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["exec",{"_index":340,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["execute",{"_index":276,"title":{},"body":{"classes/AuthExistHandler.html":{},"classes/CreateAuthHandler.html":{},"classes/GetAuthHandler.html":{}}}],["execute(command",{"_index":1011,"title":{},"body":{"classes/CreateAuthHandler.html":{}}}],["execute(query",{"_index":280,"title":{},"body":{"classes/AuthExistHandler.html":{},"classes/GetAuthHandler.html":{}}}],["executioncontext",{"_index":309,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExitInterceptor.html":{},"guards/GqlAuthGuard.html":{},"injectables/TimeoutInterceptor.html":{}}}],["exist",{"_index":396,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["exist.handler.ts",{"_index":274,"title":{},"body":{"classes/AuthExistHandler.html":{},"coverage.html":{}}}],["exist.handler.ts:12",{"_index":282,"title":{},"body":{"classes/AuthExistHandler.html":{}}}],["exist.handler.ts:7",{"_index":279,"title":{},"body":{"classes/AuthExistHandler.html":{}}}],["exist.query.ts",{"_index":297,"title":{},"body":{"classes/AuthExistQuery.html":{},"coverage.html":{}}}],["exist.query.ts:4",{"_index":300,"title":{},"body":{"classes/AuthExistQuery.html":{}}}],["exist.query.ts:6",{"_index":301,"title":{},"body":{"classes/AuthExistQuery.html":{}}}],["exists",{"_index":782,"title":{},"body":{"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{}}}],["exit.interceptor.ts",{"_index":1256,"title":{},"body":{"injectables/ExitInterceptor.html":{},"coverage.html":{}}}],["exit.interceptor.ts:8",{"_index":1257,"title":{},"body":{"injectables/ExitInterceptor.html":{}}}],["exitinterceptor",{"_index":1254,"title":{"injectables/ExitInterceptor.html":{}},"body":{"injectables/ExitInterceptor.html":{},"coverage.html":{}}}],["explore",{"_index":2071,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["explorer.service",{"_index":1398,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedModule.html":{},"injectables/ReferencesExplorerService.html":{}}}],["explorer.service.ts",{"_index":2067,"title":{},"body":{"injectables/ReferencesExplorerService.html":{},"coverage.html":{}}}],["explorer.service.ts:103",{"_index":2085,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["explorer.service.ts:20",{"_index":2078,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["explorer.service.ts:32",{"_index":2086,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["explorer.service.ts:45",{"_index":2091,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["explorer.service.ts:66",{"_index":2088,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["export",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"classes/AppError.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"classes/AppUtils.html":{},"controllers/AuthController.html":{},"classes/AuthCreatedEvent.html":{},"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedEvent.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthEntity.html":{},"classes/AuthExistHandler.html":{},"classes/AuthExistQuery.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"classes/AuthResolver.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatedEvent.html":{},"classes/AuthUpdatedHandler.html":{},"injectables/AwsS3Service.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"classes/BaseSearchDto.html":{},"interfaces/CollectionProps.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigService.html":{},"classes/ContextProvider.html":{},"injectables/CookieSerializer.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CreateAuthCommand.html":{},"classes/CreateAuthHandler.html":{},"interfaces/DBSource.html":{},"classes/DatabaseClient.html":{},"classes/Deferred.html":{},"interfaces/Document.html":{},"classes/DtoMapperUtils.html":{},"interfaces/EntityOptions.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/EventStore.html":{},"interfaces/EventStoreOptionConfig.html":{},"injectables/ExitInterceptor.html":{},"classes/FacebookAuth.html":{},"injectables/FacebookStrategy.html":{},"interfaces/FindRequest.html":{},"injectables/GeneratorService.html":{},"classes/GetAuthHandler.html":{},"classes/GetAuthQuery.html":{},"classes/GoogleAuth.html":{},"guards/GqlAuthGuard.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/GraphqlErrors.html":{},"classes/HeadersDatasource.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAuthRepo.html":{},"interfaces/IAwsConfigInterface.html":{},"interfaces/IConstraintErrors.html":{},"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IEventSourceConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IEventStoreMessage.html":{},"interfaces/IFile.html":{},"interfaces/IGosipConfig.html":{},"interfaces/IGosipConfig-1.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IServiceList.html":{},"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"interfaces/IndexDefinition.html":{},"classes/LocalAuth.html":{},"injectables/LocalStrategy.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"interfaces/MultiTenancyConfig.html":{},"interfaces/MultiTenantModuleOptions.html":{},"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"modules/NestMultiTenantModule.html":{},"injectables/NestMultiTenantService.html":{},"classes/NestStoreConfigProvider.html":{},"classes/NestjsEventStore.html":{},"modules/NestjsEventStoreModule.html":{},"injectables/NestjsEventStoreService.html":{},"classes/NotFoundError.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/Paginate.html":{},"classes/ProjectEntity.html":{},"modules/ProjectModule.html":{},"injectables/ProjectRepository.html":{},"classes/ProjectResolver.html":{},"classes/ProjectResponseDto.html":{},"injectables/ProjectService.html":{},"classes/QueryFailedFilter.html":{},"injectables/ReferencesExplorerService.html":{},"modules/RepositoryModule.html":{},"injectables/RepositoryService.html":{},"interfaces/ServiceListItem.html":{},"classes/SnakeNamingStrategy.html":{},"interfaces/TenantInfo.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"classes/UserResolver.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"classes/ValidationError.html":{},"injectables/ValidatorService.html":{}}}],["exports",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CoreModule.html":{},"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"modules/NestCasbinModule.html":{},"modules/NestMultiTenantModule.html":{},"modules/NestjsEventStoreModule.html":{},"modules/ProjectModule.html":{},"modules/RepositoryModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":1262,"title":{},"body":{"injectables/ExitInterceptor.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/GraphqlErrors.html":{},"classes/HttpExceptionFilter.html":{},"injectables/NestMultiTenantService.html":{},"classes/NotFoundError.html":{},"classes/QueryFailedFilter.html":{},"dependencies.html":{},"index.html":{}}}],["ext",{"_index":1302,"title":{},"body":{"injectables/GeneratorService.html":{}}}],["extend",{"_index":1401,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedModule.html":{}}}],["extend(prev",{"_index":1417,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{}}}],["extend(typedefs",{"_index":1501,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["extended",{"_index":623,"title":{},"body":{"classes/BaseRepository.html":{}}}],["extendresolvers",{"_index":1375,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{}}}],["extendresolvers(resolvers",{"_index":1386,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{}}}],["extends",{"_index":43,"title":{},"body":{"classes/AppError.html":{},"classes/AuthEntity.html":{},"injectables/AuthRepository.html":{},"classes/AuthResponseDto.html":{},"classes/BaseEntity.html":{},"interfaces/CollectionProps.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"injectables/CookieSerializer.html":{},"interfaces/DBSource.html":{},"classes/DatabaseClient.html":{},"interfaces/Document.html":{},"injectables/FacebookStrategy.html":{},"interfaces/FindRequest.html":{},"classes/HeadersDatasource.html":{},"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IServiceList.html":{},"interfaces/IndexDefinition.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"classes/NotFoundError.html":{},"classes/ProjectEntity.html":{},"injectables/ProjectRepository.html":{},"classes/ProjectResponseDto.html":{},"injectables/ReferencesExplorerService.html":{},"interfaces/ServiceListItem.html":{},"classes/SnakeNamingStrategy.html":{},"injectables/TenantRepository.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{},"classes/ValidationError.html":{}}}],["externalcontextcreator",{"_index":2076,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["extra",{"_index":2533,"title":{},"body":{"index.html":{}}}],["extractkey",{"_index":2307,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["extractkey(path",{"_index":2485,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extremly",{"_index":2514,"title":{},"body":{"index.html":{}}}],["facebook",{"_index":1289,"title":{},"body":{"injectables/FacebookStrategy.html":{},"dependencies.html":{}}}],["facebook_app_id",{"_index":1292,"title":{},"body":{"injectables/FacebookStrategy.html":{}}}],["facebook_app_secret",{"_index":1294,"title":{},"body":{"injectables/FacebookStrategy.html":{}}}],["facebookauth",{"_index":1272,"title":{"classes/FacebookAuth.html":{}},"body":{"classes/FacebookAuth.html":{},"classes/GoogleAuth.html":{},"classes/LocalAuth.html":{},"coverage.html":{}}}],["facebooklogin",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["facebooklogin(@req",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["facebooklogin(req",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["facebooklogincallback",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["facebooklogincallback(@req",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["facebooklogincallback(req",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["facebookstrategy",{"_index":320,"title":{"injectables/FacebookStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/FacebookStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["factory",{"_index":1787,"title":{},"body":{"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{}}}],["failed.filter.ts",{"_index":2049,"title":{},"body":{"classes/QueryFailedFilter.html":{},"coverage.html":{}}}],["failed.filter.ts:10",{"_index":2050,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["failed.filter.ts:12",{"_index":2051,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["failed.filter.ts:14",{"_index":2052,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["fails",{"_index":1053,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["failureredirect",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{}}}],["false",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"classes/HeadersDatasource.html":{},"injectables/ReferencesExplorerService.html":{},"classes/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":1343,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["fastify",{"_index":2409,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["feature",{"_index":838,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["features",{"_index":2536,"title":{},"body":{"index.html":{}}}],["federated",{"_index":2540,"title":{},"body":{"index.html":{}}}],["federatedschema",{"_index":1411,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{}}}],["fgggfg",{"_index":468,"title":{},"body":{"classes/AuthResolver.html":{}}}],["fieldname",{"_index":780,"title":{},"body":{"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IFile.html":{},"interfaces/IndexDefinition.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{}}}],["fields",{"_index":779,"title":{},"body":{"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"classes/AppError.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"classes/AppUtils.html":{},"controllers/AuthController.html":{},"classes/AuthCreatedEvent.html":{},"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedEvent.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthEntity.html":{},"classes/AuthExistHandler.html":{},"classes/AuthExistQuery.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"classes/AuthResolver.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatedEvent.html":{},"classes/AuthUpdatedHandler.html":{},"injectables/AwsS3Service.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"classes/BaseSearchDto.html":{},"interfaces/CollectionProps.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigService.html":{},"classes/ContextProvider.html":{},"injectables/CookieSerializer.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CreateAuthCommand.html":{},"classes/CreateAuthHandler.html":{},"interfaces/DBSource.html":{},"classes/DatabaseClient.html":{},"classes/Deferred.html":{},"interfaces/Document.html":{},"classes/DtoMapperUtils.html":{},"interfaces/EntityOptions.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/EventStore.html":{},"interfaces/EventStoreOptionConfig.html":{},"injectables/ExitInterceptor.html":{},"classes/FacebookAuth.html":{},"injectables/FacebookStrategy.html":{},"interfaces/FindRequest.html":{},"injectables/GeneratorService.html":{},"classes/GetAuthHandler.html":{},"classes/GetAuthQuery.html":{},"classes/GoogleAuth.html":{},"guards/GqlAuthGuard.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/GraphqlErrors.html":{},"classes/HeadersDatasource.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAuthRepo.html":{},"interfaces/IAwsConfigInterface.html":{},"interfaces/IConstraintErrors.html":{},"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IEventSourceConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IEventStoreMessage.html":{},"interfaces/IFile.html":{},"interfaces/IGosipConfig.html":{},"interfaces/IGosipConfig-1.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IServiceList.html":{},"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"interfaces/IndexDefinition.html":{},"classes/LocalAuth.html":{},"injectables/LocalStrategy.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"interfaces/MultiTenancyConfig.html":{},"interfaces/MultiTenantModuleOptions.html":{},"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"modules/NestMultiTenantModule.html":{},"injectables/NestMultiTenantService.html":{},"classes/NestStoreConfigProvider.html":{},"classes/NestjsEventStore.html":{},"modules/NestjsEventStoreModule.html":{},"injectables/NestjsEventStoreService.html":{},"classes/NotFoundError.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/Paginate.html":{},"classes/ProjectEntity.html":{},"modules/ProjectModule.html":{},"injectables/ProjectRepository.html":{},"classes/ProjectResolver.html":{},"classes/ProjectResponseDto.html":{},"injectables/ProjectService.html":{},"classes/QueryFailedFilter.html":{},"injectables/ReferencesExplorerService.html":{},"modules/RepositoryModule.html":{},"injectables/RepositoryService.html":{},"interfaces/ServiceListItem.html":{},"classes/SnakeNamingStrategy.html":{},"interfaces/TenantInfo.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"classes/UserResolver.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"classes/ValidationError.html":{},"injectables/ValidatorService.html":{},"coverage.html":{}}}],["file.buffer",{"_index":559,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["filecontentspromises",{"_index":1368,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["filename",{"_index":551,"title":{},"body":{"injectables/AwsS3Service.html":{},"injectables/GeneratorService.html":{}}}],["filename(ext",{"_index":1300,"title":{},"body":{"injectables/GeneratorService.html":{}}}],["filepaths",{"_index":1365,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["filepaths.map((filepath",{"_index":1369,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["filter((resolver",{"_index":2123,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["filterreferences",{"_index":2072,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["filterreferences(wrapper",{"_index":2087,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["find",{"_index":341,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["find(req",{"_index":373,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["findbyid",{"_index":342,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["findbyid(id",{"_index":377,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["findconditions",{"_index":1315,"title":{},"body":{"classes/GetAuthQuery.html":{}}}],["findmany",{"_index":410,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["findmanybyid",{"_index":343,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["findmanybyid(ids",{"_index":380,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["findone",{"_index":344,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["findone(conditions",{"_index":384,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["findoneandupdate",{"_index":345,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["findoneandupdate(req",{"_index":386,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["findonebyidandupdate",{"_index":346,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["findonebyidandupdate(id",{"_index":391,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["findrequest",{"_index":374,"title":{"interfaces/FindRequest.html":{}},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"injectables/UserRepository.html":{},"coverage.html":{}}}],["finds",{"_index":379,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["first",{"_index":1768,"title":{},"body":{"modules/MongoModule.html":{},"classes/Paginate.html":{}}}],["firstname",{"_index":2211,"title":{},"body":{"classes/UserEntity.html":{},"classes/UserResponseDto.html":{}}}],["firstpropertyname",{"_index":2164,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["firstpropertyname.replace(/\\./gi",{"_index":2180,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["firsttablename",{"_index":2167,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["flatten",{"_index":1346,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["flatten(types",{"_index":1357,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["flattypes",{"_index":1356,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["flip",{"_index":682,"title":{},"body":{"classes/BaseRepository.html":{}}}],["flip/flop",{"_index":670,"title":{},"body":{"classes/BaseRepository.html":{}}}],["flop",{"_index":683,"title":{},"body":{"classes/BaseRepository.html":{}}}],["fn",{"_index":737,"title":{},"body":{"classes/BaseRepository.html":{},"miscellaneous/variables.html":{}}}],["fns",{"_index":399,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["fns.concat([target[name",{"_index":2625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["following",{"_index":2524,"title":{},"body":{"index.html":{}}}],["forfeature",{"_index":1753,"title":{},"body":{"modules/MongoModule.html":{},"modules/NestjsEventStoreModule.html":{}}}],["forfeature(collections",{"_index":1754,"title":{},"body":{"modules/MongoModule.html":{}}}],["forfeature(config",{"_index":1947,"title":{},"body":{"modules/NestjsEventStoreModule.html":{}}}],["forroot",{"_index":1420,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"modules/NestjsEventStoreModule.html":{}}}],["forroot(option",{"_index":1949,"title":{},"body":{"modules/NestjsEventStoreModule.html":{}}}],["forroot(options",{"_index":1421,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{}}}],["forroot(uri",{"_index":1694,"title":{},"body":{"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{}}}],["forrootasync",{"_index":1465,"title":{},"body":{"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"modules/NestCasbinModule.html":{},"modules/NestMultiTenantModule.html":{}}}],["forrootasync(dbconnectionoptions",{"_index":1819,"title":{},"body":{"modules/NestCasbinModule.html":{}}}],["forrootasync(options",{"_index":1466,"title":{},"body":{"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"modules/NestMultiTenantModule.html":{}}}],["found",{"_index":639,"title":{},"body":{"classes/BaseRepository.html":{},"classes/GraphqlErrors.html":{}}}],["found.error.ts",{"_index":1963,"title":{},"body":{"classes/NotFoundError.html":{},"coverage.html":{}}}],["found.error.ts:3",{"_index":1964,"title":{},"body":{"classes/NotFoundError.html":{}}}],["framework",{"_index":2562,"title":{},"body":{"index.html":{}}}],["frameworks",{"_index":2551,"title":{},"body":{"index.html":{}}}],["fs",{"_index":1344,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{},"dependencies.html":{}}}],["func",{"_index":1106,"title":{},"body":{"classes/DtoMapperUtils.html":{}}}],["function",{"_index":743,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/CookieSerializer.html":{},"classes/DtoMapperUtils.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"injectables/TenantMiddleware.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":402,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{},"miscellaneous/functions.html":{}}}],["gateway",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IServiceList.html":{},"interfaces/ServiceListItem.html":{},"coverage.html":{},"index.html":{}}}],["gateway.module.ts",{"_index":1419,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{}}}],["gateway.module.ts:12",{"_index":1423,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{}}}],["gateway.module.ts:32",{"_index":1426,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{}}}],["gateway/src/decorators/resolve",{"_index":2314,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["gateway/src/graphql",{"_index":1333,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gateway/src/interfaces/distributed",{"_index":1610,"title":{},"body":{"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IServiceList.html":{},"interfaces/ServiceListItem.html":{},"coverage.html":{}}}],["gateway/src/services/references",{"_index":2066,"title":{},"body":{"injectables/ReferencesExplorerService.html":{},"coverage.html":{}}}],["gateway/src/tokens.ts",{"_index":2317,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gatewayconfig",{"_index":1613,"title":{},"body":{"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IServiceList.html":{},"interfaces/ServiceListItem.html":{}}}],["generate",{"_index":1100,"title":{},"body":{"classes/DtoMapperUtils.html":{},"interfaces/EntityOptions.html":{}}}],["generated",{"_index":789,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["generatehashedpassword",{"_index":252,"title":{},"body":{"classes/AuthEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generatehashedpassword(this.local.hashedpassword",{"_index":271,"title":{},"body":{"classes/AuthEntity.html":{}}}],["generatemongoconnectionstring",{"_index":1873,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["generatemongoconnectionstring(uri",{"_index":1877,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["generaterandomstring",{"_index":1097,"title":{},"body":{"classes/DtoMapperUtils.html":{}}}],["generaterandomstring(length",{"_index":1098,"title":{},"body":{"classes/DtoMapperUtils.html":{}}}],["generatestring",{"_index":1478,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["generator.service",{"_index":532,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["generatorservice",{"_index":517,"title":{"injectables/GeneratorService.html":{}},"body":{"injectables/AwsS3Service.html":{},"modules/CommonModule.html":{},"injectables/GeneratorService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["geometry",{"_index":839,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["get('/facebook",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(func",{"_index":1102,"title":{},"body":{"classes/DtoMapperUtils.html":{}}}],["get(key",{"_index":876,"title":{},"body":{"classes/ConfigService.html":{},"classes/ContextProvider.html":{}}}],["getall",{"_index":1655,"title":{},"body":{"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{}}}],["getall(input",{"_index":1658,"title":{},"body":{"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{}}}],["getauthhandler",{"_index":1306,"title":{"classes/GetAuthHandler.html":{}},"body":{"classes/GetAuthHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getauthquery",{"_index":1308,"title":{"classes/GetAuthQuery.html":{}},"body":{"classes/GetAuthHandler.html":{},"classes/GetAuthQuery.html":{},"coverage.html":{}}}],["getawss3config",{"_index":888,"title":{},"body":{"classes/ConfigService.html":{}}}],["getbyemail",{"_index":1670,"title":{},"body":{"interfaces/IUserRepo.html":{}}}],["getbyemail(email",{"_index":1672,"title":{},"body":{"interfaces/IUserRepo.html":{}}}],["getbyid",{"_index":1656,"title":{},"body":{"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{}}}],["getbyid(id",{"_index":1661,"title":{},"body":{"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{}}}],["getbylocal",{"_index":1596,"title":{},"body":{"interfaces/IAuthRepo.html":{}}}],["getbylocal(local",{"_index":1597,"title":{},"body":{"interfaces/IAuthRepo.html":{}}}],["getbypath",{"_index":1657,"title":{},"body":{"interfaces/ITenantRepo.html":{}}}],["getbypath(path",{"_index":1662,"title":{},"body":{"interfaces/ITenantRepo.html":{}}}],["getclient",{"_index":1919,"title":{},"body":{"classes/NestjsEventStore.html":{}}}],["getclienttoken",{"_index":1706,"title":{},"body":{"modules/MongoCoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getclienttoken(containername",{"_index":1725,"title":{},"body":{"modules/MongoCoreModule.html":{},"miscellaneous/functions.html":{}}}],["getclienttoken(mongocontainername",{"_index":1739,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["getcollection",{"_index":347,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["getcollectiontoken",{"_index":2344,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcollectiontoken(containername",{"_index":2486,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getcontainertoken",{"_index":1707,"title":{},"body":{"modules/MongoCoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcontainertoken(containername",{"_index":1723,"title":{},"body":{"modules/MongoCoreModule.html":{},"miscellaneous/functions.html":{}}}],["getcontainertoken(mongocontainername",{"_index":1738,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["getcontainertoken(this.containername",{"_index":1745,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["getdbtoken",{"_index":1708,"title":{},"body":{"modules/MongoCoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getdbtoken(containername",{"_index":1734,"title":{},"body":{"modules/MongoCoreModule.html":{},"miscellaneous/functions.html":{}}}],["getdbtoken(mongocontainername",{"_index":1740,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["geteventsourceconfig",{"_index":890,"title":{},"body":{"classes/ConfigService.html":{},"classes/NestStoreConfigProvider.html":{}}}],["geteventstore",{"_index":1932,"title":{},"body":{"classes/NestjsEventStore.html":{},"dependencies.html":{}}}],["gethello",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{}}}],["getnodeenv",{"_index":886,"title":{},"body":{"classes/ConfigService.html":{}}}],["getnumber",{"_index":870,"title":{},"body":{"classes/ConfigService.html":{}}}],["getnumber(key",{"_index":878,"title":{},"body":{"classes/ConfigService.html":{}}}],["getreactiveclienttoken",{"_index":2345,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getreactiveclienttoken(containername",{"_index":2487,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getskip",{"_index":756,"title":{},"body":{"classes/BaseSearchDto.html":{},"classes/PageOptionsDto.html":{}}}],["gettake",{"_index":758,"title":{},"body":{"classes/BaseSearchDto.html":{}}}],["getting",{"_index":2498,"title":{"index.html":{}},"body":{}}],["gettypesfrompaths",{"_index":1335,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["gettypesfrompaths(paths",{"_index":1337,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["ghggg",{"_index":2669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ghghg@gghh.com",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["ghtj",{"_index":2668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["give",{"_index":2531,"title":{},"body":{"index.html":{}}}],["given",{"_index":397,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{},"miscellaneous/functions.html":{}}}],["glob",{"_index":1342,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["glob.sync(paths",{"_index":1366,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["global",{"_index":854,"title":{},"body":{"modules/CommonModule.html":{},"modules/MongoCoreModule.html":{},"modules/NestjsEventStoreModule.html":{}}}],["global.middleware",{"_index":2190,"title":{},"body":{"injectables/TenantMiddleware.html":{}}}],["global.middleware.ts",{"_index":2349,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["go",{"_index":2522,"title":{},"body":{"index.html":{}}}],["goal",{"_index":2530,"title":{},"body":{"index.html":{}}}],["good",{"_index":744,"title":{},"body":{"classes/BaseRepository.html":{}}}],["googleauth",{"_index":1279,"title":{"classes/GoogleAuth.html":{}},"body":{"classes/FacebookAuth.html":{},"classes/GoogleAuth.html":{},"classes/LocalAuth.html":{},"coverage.html":{}}}],["gossipseeds",{"_index":1621,"title":{},"body":{"interfaces/IEventSourceConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IGosipConfig.html":{},"interfaces/IGosipConfig-1.html":{}}}],["gql",{"_index":1406,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{}}}],["gql`${options.typedefs",{"_index":1413,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{}}}],["gqlauthguard",{"_index":450,"title":{"guards/GqlAuthGuard.html":{}},"body":{"classes/AuthResolver.html":{},"guards/GqlAuthGuard.html":{},"coverage.html":{}}}],["gqlexecutioncontext",{"_index":1326,"title":{},"body":{"guards/GqlAuthGuard.html":{}}}],["gqlexecutioncontext.create(context).getcontext",{"_index":1328,"title":{},"body":{"guards/GqlAuthGuard.html":{}}}],["gqlmoduleasyncoptions",{"_index":1458,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["gqlmoduleoptions",{"_index":1390,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedModule.html":{},"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IServiceList.html":{},"injectables/ReferencesExplorerService.html":{},"interfaces/ServiceListItem.html":{}}}],["gqloptions",{"_index":2077,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["gqloptionsfactory",{"_index":1473,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["gqlparamsfactory",{"_index":2069,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["gqlschemabuilder",{"_index":1383,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{}}}],["graph",{"_index":2587,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"injectables/GraphQLTypesLoader.html":{},"modules/GraphqlDistributedModule.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["graphql_module_id",{"_index":1475,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["graphql_module_options",{"_index":1476,"title":{},"body":{"modules/GraphqlDistributedModule.html":{},"injectables/ReferencesExplorerService.html":{}}}],["graphqlastexplorer",{"_index":1382,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedModule.html":{},"overview.html":{}}}],["graphqlcqrs/common",{"_index":328,"title":{},"body":{"modules/AuthModule.html":{},"classes/BaseEntity.html":{}}}],["graphqlcqrs/common/guards",{"_index":451,"title":{},"body":{"classes/AuthResolver.html":{}}}],["graphqlcqrs/common/utils",{"_index":253,"title":{},"body":{"classes/AuthEntity.html":{}}}],["graphqlcqrs/graphql",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlcqrs/repository",{"_index":286,"title":{},"body":{"classes/AuthExistHandler.html":{},"classes/CreateAuthCommand.html":{},"classes/CreateAuthHandler.html":{},"classes/GetAuthHandler.html":{},"classes/GetAuthQuery.html":{}}}],["graphqlcqrs/repository/dtos/paginate.dto",{"_index":2032,"title":{},"body":{"classes/ProjectResolver.html":{}}}],["graphqlcqrs/repository/entities",{"_index":302,"title":{},"body":{"classes/AuthExistQuery.html":{}}}],["graphqlcqrs/repository/repositories/auth.repository",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{},"modules/RepositoryModule.html":{}}}],["graphqlcqrs/repository/repository.module",{"_index":331,"title":{},"body":{"modules/AuthModule.html":{}}}],["graphqldistributedfactory",{"_index":1373,"title":{"injectables/GraphqlDistributedFactory.html":{}},"body":{"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedModule.html":{},"coverage.html":{},"overview.html":{}}}],["graphqldistributedgatewaymodule",{"_index":75,"title":{"modules/GraphqlDistributedGatewayModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqldistributedgatewaymodule.forroot",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqldistributedmodule",{"_index":1451,"title":{"modules/GraphqlDistributedModule.html":{}},"body":{"modules/GraphqlDistributedModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqlerrors",{"_index":1512,"title":{"classes/GraphqlErrors.html":{}},"body":{"classes/GraphqlErrors.html":{},"coverage.html":{}}}],["graphqlfactory",{"_index":1474,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["graphqllocalstrategy",{"_index":1682,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["graphqlschemabuilder",{"_index":1384,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedModule.html":{}}}],["graphqltypesloader",{"_index":1331,"title":{"injectables/GraphQLTypesLoader.html":{}},"body":{"injectables/GraphQLTypesLoader.html":{},"modules/GraphqlDistributedModule.html":{},"coverage.html":{},"overview.html":{}}}],["green",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["greenlock",{"_index":2417,"title":{},"body":{"dependencies.html":{}}}],["ground",{"_index":2519,"title":{},"body":{"index.html":{}}}],["gt",{"_index":458,"title":{},"body":{"classes/AuthResolver.html":{}}}],["guard",{"_index":303,"title":{"guards/AuthGuard.html":{},"guards/GqlAuthGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":305,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GqlAuthGuard.html":{},"overview.html":{}}}],["handle",{"_index":184,"title":{},"body":{"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthUpdatedHandler.html":{}}}],["handle(event",{"_index":185,"title":{},"body":{"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthUpdatedHandler.html":{}}}],["handlers",{"_index":1196,"title":{},"body":{"injectables/EventStore.html":{}}}],["handling",{"_index":1198,"title":{},"body":{"injectables/EventStore.html":{},"index.html":{}}}],["hash",{"_index":1705,"title":{},"body":{"modules/MongoCoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["hash(str",{"_index":2488,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hash.sha1",{"_index":1727,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["hashedpassword",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{},"classes/FacebookAuth.html":{},"classes/GoogleAuth.html":{},"classes/LocalAuth.html":{}}}],["header",{"_index":2460,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["headers",{"_index":1235,"title":{},"body":{"injectables/EventStore.html":{}}}],["headers.datasource",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["headersdatasource",{"_index":84,"title":{"classes/HeadersDatasource.html":{}},"body":{"modules/AppModule.html":{},"classes/HeadersDatasource.html":{},"coverage.html":{}}}],["hello",{"_index":118,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{}}}],["here",{"_index":194,"title":{},"body":{"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthUpdatedHandler.html":{}}}],["hooked",{"_index":2442,"title":{},"body":{"dependencies.html":{}}}],["host",{"_index":921,"title":{},"body":{"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["host.switchtohttp",{"_index":1566,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["hostname",{"_index":949,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IEventSourceConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IGosipConfig.html":{},"interfaces/IGosipConfig-1.html":{}}}],["http",{"_index":1625,"title":{},"body":{"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IGosipConfig-1.html":{},"classes/QueryFailedFilter.html":{}}}],["http://localhost:9000/graphql",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["http://localhost:9100/graphql",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["http://localhost:9900/auth/facebook/callback",{"_index":1296,"title":{},"body":{"injectables/FacebookStrategy.html":{}}}],["http://localhost:9900/graphql",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["httpadapter",{"_index":1438,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{}}}],["httpadapter.gethttpserver",{"_index":1450,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{}}}],["httpadapter.getinstance",{"_index":1439,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{}}}],["httpadapterhost",{"_index":1429,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{}}}],["httpexception",{"_index":44,"title":{},"body":{"classes/AppError.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExitInterceptor.html":{},"classes/ValidationError.html":{}}}],["httpexceptionfilter",{"_index":1547,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["httpmodule",{"_index":855,"title":{},"body":{"modules/CommonModule.html":{}}}],["https://developer.mozilla.org/en",{"_index":1084,"title":{},"body":{"classes/Deferred.html":{}}}],["https://github.com/okgrow/merge",{"_index":1360,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["https://github.com/rbuckton/reflect",{"_index":2622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpstatus",{"_index":59,"title":{},"body":{"classes/AppError.html":{},"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{},"classes/ValidationError.html":{}}}],["httpstatus.bad_gateway",{"_index":61,"title":{},"body":{"classes/AppError.html":{}}}],["httpstatus.bad_request",{"_index":2252,"title":{},"body":{"classes/ValidationError.html":{}}}],["httpstatus.conflict",{"_index":2062,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":2063,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["httpstatus.unprocessable_entity",{"_index":1574,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["i.e",{"_index":1190,"title":{},"body":{"injectables/EventStore.html":{}}}],["i18n",{"_index":1586,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["iauthrepo",{"_index":1593,"title":{"interfaces/IAuthRepo.html":{}},"body":{"interfaces/IAuthRepo.html":{},"coverage.html":{}}}],["iawsconfiginterface",{"_index":895,"title":{"interfaces/IAwsConfigInterface.html":{}},"body":{"classes/ConfigService.html":{},"interfaces/IAwsConfigInterface.html":{},"coverage.html":{}}}],["icommand",{"_index":999,"title":{},"body":{"classes/CreateAuthCommand.html":{}}}],["icommandhandler",{"_index":1007,"title":{},"body":{"classes/CreateAuthHandler.html":{}}}],["iconstrainterrors",{"_index":1603,"title":{"interfaces/IConstraintErrors.html":{}},"body":{"interfaces/IConstraintErrors.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":212,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthRepository.html":{},"classes/AuthResponseDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"classes/FacebookAuth.html":{},"interfaces/FindRequest.html":{},"classes/GoogleAuth.html":{},"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"interfaces/IndexDefinition.html":{},"classes/LocalAuth.html":{},"classes/ProjectEntity.html":{},"injectables/ProjectRepository.html":{},"classes/ProjectResolver.html":{},"classes/ProjectResponseDto.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["id.tostring",{"_index":681,"title":{},"body":{"classes/BaseRepository.html":{}}}],["identifier",{"_index":454,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["identify",{"_index":2528,"title":{},"body":{"index.html":{}}}],["identity",{"_index":804,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"injectables/ReferencesExplorerService.html":{}}}],["idistributedgatewayoptions",{"_index":1422,"title":{"interfaces/IDistributedGatewayOptions.html":{}},"body":{"modules/GraphqlDistributedGatewayModule.html":{},"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IServiceList.html":{},"interfaces/ServiceListItem.html":{},"coverage.html":{}}}],["ids",{"_index":383,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["ids.map(id",{"_index":638,"title":{},"body":{"classes/BaseRepository.html":{}}}],["ievent",{"_index":173,"title":{},"body":{"classes/AuthCreatedEvent.html":{},"classes/AuthDeletedEvent.html":{},"classes/AuthUpdatedEvent.html":{},"injectables/EventStore.html":{}}}],["ieventhandler",{"_index":183,"title":{},"body":{"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthUpdatedHandler.html":{}}}],["ieventpublisher",{"_index":1176,"title":{},"body":{"injectables/EventStore.html":{}}}],["ieventsourceconfig",{"_index":896,"title":{"interfaces/IEventSourceConfig.html":{}},"body":{"classes/ConfigService.html":{},"interfaces/IEventSourceConfig.html":{},"interfaces/IGosipConfig.html":{},"coverage.html":{}}}],["ieventstoreconnectconfig",{"_index":1161,"title":{"interfaces/IEventStoreConnectConfig.html":{}},"body":{"injectables/EventStore.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IGosipConfig-1.html":{},"classes/NestStoreConfigProvider.html":{},"modules/NestjsEventStoreModule.html":{},"coverage.html":{}}}],["ieventstoremessage",{"_index":1627,"title":{"interfaces/IEventStoreMessage.html":{}},"body":{"interfaces/IEventStoreMessage.html":{},"coverage.html":{}}}],["ifile",{"_index":522,"title":{"interfaces/IFile.html":{}},"body":{"injectables/AwsS3Service.html":{},"interfaces/IFile.html":{},"coverage.html":{}}}],["ignore",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseRepository.html":{},"classes/ConfigService.html":{},"classes/DtoMapperUtils.html":{},"injectables/EventStore.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"injectables/NestMultiTenantService.html":{},"classes/NestjsEventStore.html":{},"injectables/ReferencesExplorerService.html":{}}}],["igosipconfig",{"_index":1623,"title":{"interfaces/IGosipConfig.html":{},"interfaces/IGosipConfig-1.html":{}},"body":{"interfaces/IEventSourceConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IGosipConfig.html":{},"interfaces/IGosipConfig-1.html":{},"coverage.html":{}}}],["image/jpeg",{"_index":2260,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["image/png",{"_index":2261,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["imagemimetypes",{"_index":2259,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["images",{"_index":554,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["imessagesource",{"_index":1177,"title":{},"body":{"injectables/EventStore.html":{}}}],["impl",{"_index":1015,"title":{},"body":{"classes/CreateAuthHandler.html":{}}}],["impl/auth",{"_index":190,"title":{},"body":{"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthUpdatedHandler.html":{}}}],["implements",{"_index":172,"title":{},"body":{"classes/AuthCreatedEvent.html":{},"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedEvent.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthExistHandler.html":{},"classes/AuthExistQuery.html":{},"guards/AuthGuard.html":{},"classes/AuthUpdatedEvent.html":{},"classes/AuthUpdatedHandler.html":{},"classes/CreateAuthCommand.html":{},"classes/CreateAuthHandler.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/EventStore.html":{},"injectables/ExitInterceptor.html":{},"classes/GetAuthHandler.html":{},"classes/GetAuthQuery.html":{},"guards/GqlAuthGuard.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/HttpExceptionFilter.html":{},"modules/MongoCoreModule.html":{},"classes/QueryFailedFilter.html":{},"classes/SnakeNamingStrategy.html":{},"injectables/TenantMiddleware.html":{},"injectables/TimeoutInterceptor.html":{}}}],["import",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"classes/AppError.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"classes/AppUtils.html":{},"controllers/AuthController.html":{},"classes/AuthCreatedEvent.html":{},"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedEvent.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthEntity.html":{},"classes/AuthExistHandler.html":{},"classes/AuthExistQuery.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"classes/AuthResolver.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatedEvent.html":{},"classes/AuthUpdatedHandler.html":{},"injectables/AwsS3Service.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"classes/BaseSearchDto.html":{},"interfaces/CollectionProps.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigService.html":{},"classes/ContextProvider.html":{},"injectables/CookieSerializer.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CreateAuthCommand.html":{},"classes/CreateAuthHandler.html":{},"interfaces/DBSource.html":{},"classes/DatabaseClient.html":{},"interfaces/Document.html":{},"classes/DtoMapperUtils.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/EventStore.html":{},"injectables/ExitInterceptor.html":{},"injectables/FacebookStrategy.html":{},"interfaces/FindRequest.html":{},"injectables/GeneratorService.html":{},"classes/GetAuthHandler.html":{},"classes/GetAuthQuery.html":{},"guards/GqlAuthGuard.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/GraphqlErrors.html":{},"classes/HeadersDatasource.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAuthRepo.html":{},"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IServiceList.html":{},"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"interfaces/IndexDefinition.html":{},"injectables/LocalStrategy.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"interfaces/MultiTenancyConfig.html":{},"interfaces/MultiTenantModuleOptions.html":{},"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"modules/NestMultiTenantModule.html":{},"injectables/NestMultiTenantService.html":{},"classes/NestStoreConfigProvider.html":{},"classes/NestjsEventStore.html":{},"modules/NestjsEventStoreModule.html":{},"injectables/NestjsEventStoreService.html":{},"classes/NotFoundError.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/ProjectEntity.html":{},"modules/ProjectModule.html":{},"injectables/ProjectRepository.html":{},"classes/ProjectResolver.html":{},"classes/ProjectResponseDto.html":{},"injectables/ProjectService.html":{},"classes/QueryFailedFilter.html":{},"injectables/ReferencesExplorerService.html":{},"modules/RepositoryModule.html":{},"injectables/RepositoryService.html":{},"interfaces/ServiceListItem.html":{},"classes/SnakeNamingStrategy.html":{},"interfaces/TenantInfo.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"classes/UserResolver.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"classes/ValidationError.html":{},"injectables/ValidatorService.html":{}}}],["imports",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{}}}],["increment",{"_index":798,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"classes/AppError.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"classes/AppUtils.html":{},"controllers/AuthController.html":{},"classes/AuthCreatedEvent.html":{},"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedEvent.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthEntity.html":{},"classes/AuthExistHandler.html":{},"classes/AuthExistQuery.html":{},"guards/AuthGuard.html":{},"injectables/AuthRepository.html":{},"classes/AuthResolver.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatedEvent.html":{},"classes/AuthUpdatedHandler.html":{},"injectables/AwsS3Service.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"classes/BaseSearchDto.html":{},"interfaces/CollectionProps.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"classes/ConfigService.html":{},"classes/ContextProvider.html":{},"injectables/CookieSerializer.html":{},"classes/CreateAuthCommand.html":{},"classes/CreateAuthHandler.html":{},"interfaces/DBSource.html":{},"classes/DatabaseClient.html":{},"classes/Deferred.html":{},"interfaces/Document.html":{},"classes/DtoMapperUtils.html":{},"interfaces/EntityOptions.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/EventStore.html":{},"interfaces/EventStoreOptionConfig.html":{},"injectables/ExitInterceptor.html":{},"classes/FacebookAuth.html":{},"injectables/FacebookStrategy.html":{},"interfaces/FindRequest.html":{},"injectables/GeneratorService.html":{},"classes/GetAuthHandler.html":{},"classes/GetAuthQuery.html":{},"classes/GoogleAuth.html":{},"guards/GqlAuthGuard.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"classes/GraphqlErrors.html":{},"classes/HeadersDatasource.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAuthRepo.html":{},"interfaces/IAwsConfigInterface.html":{},"interfaces/IEventSourceConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IEventStoreMessage.html":{},"interfaces/IFile.html":{},"interfaces/IGosipConfig.html":{},"interfaces/IGosipConfig-1.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IServiceList.html":{},"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"interfaces/IndexDefinition.html":{},"classes/LocalAuth.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"interfaces/MultiTenancyConfig.html":{},"interfaces/MultiTenantModuleOptions.html":{},"injectables/NestCasbinService.html":{},"injectables/NestMultiTenantService.html":{},"classes/NestStoreConfigProvider.html":{},"classes/NestjsEventStore.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/Paginate.html":{},"classes/ProjectEntity.html":{},"injectables/ProjectRepository.html":{},"classes/ProjectResolver.html":{},"classes/ProjectResponseDto.html":{},"classes/QueryFailedFilter.html":{},"injectables/ReferencesExplorerService.html":{},"interfaces/ServiceListItem.html":{},"classes/SnakeNamingStrategy.html":{},"interfaces/TenantInfo.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{},"classes/ValidationError.html":{},"injectables/ValidatorService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":1093,"title":{},"body":{"interfaces/Document.html":{},"interfaces/IConstraintErrors.html":{},"classes/NestjsEventStore.html":{}}}],["indexdefinition",{"_index":719,"title":{"interfaces/IndexDefinition.html":{}},"body":{"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"coverage.html":{}}}],["indexdefinition.options",{"_index":721,"title":{},"body":{"classes/BaseRepository.html":{}}}],["indexdefinition.options.name",{"_index":724,"title":{},"body":{"classes/BaseRepository.html":{}}}],["indexdefinition.overwrite",{"_index":723,"title":{},"body":{"classes/BaseRepository.html":{}}}],["indexerr",{"_index":722,"title":{},"body":{"classes/BaseRepository.html":{}}}],["indexerr.codename",{"_index":727,"title":{},"body":{"classes/BaseRepository.html":{}}}],["indexerr.name",{"_index":725,"title":{},"body":{"classes/BaseRepository.html":{}}}],["indexes",{"_index":717,"title":{},"body":{"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{}}}],["indexkeyspecsconflict",{"_index":728,"title":{},"body":{"classes/BaseRepository.html":{}}}],["indexoptions",{"_index":772,"title":{},"body":{"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{}}}],["indexoptionsconflict",{"_index":729,"title":{},"body":{"classes/BaseRepository.html":{}}}],["indicate",{"_index":2652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indicates",{"_index":808,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["inestapplication",{"_index":133,"title":{},"body":{"classes/AppUtils.html":{}}}],["influx",{"_index":2419,"title":{},"body":{"dependencies.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"classes/AppError.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"classes/AppUtils.html":{},"controllers/AuthController.html":{},"classes/AuthCreatedEvent.html":{},"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedEvent.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthEntity.html":{},"classes/AuthExistHandler.html":{},"classes/AuthExistQuery.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"classes/AuthResolver.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatedEvent.html":{},"classes/AuthUpdatedHandler.html":{},"injectables/AwsS3Service.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"classes/BaseSearchDto.html":{},"interfaces/CollectionProps.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigService.html":{},"classes/ContextProvider.html":{},"injectables/CookieSerializer.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CreateAuthCommand.html":{},"classes/CreateAuthHandler.html":{},"interfaces/DBSource.html":{},"classes/DatabaseClient.html":{},"classes/Deferred.html":{},"interfaces/Document.html":{},"classes/DtoMapperUtils.html":{},"interfaces/EntityOptions.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/EventStore.html":{},"interfaces/EventStoreOptionConfig.html":{},"injectables/ExitInterceptor.html":{},"classes/FacebookAuth.html":{},"injectables/FacebookStrategy.html":{},"interfaces/FindRequest.html":{},"injectables/GeneratorService.html":{},"classes/GetAuthHandler.html":{},"classes/GetAuthQuery.html":{},"classes/GoogleAuth.html":{},"guards/GqlAuthGuard.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/GraphqlErrors.html":{},"classes/HeadersDatasource.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAuthRepo.html":{},"interfaces/IAwsConfigInterface.html":{},"interfaces/IConstraintErrors.html":{},"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IEventSourceConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IEventStoreMessage.html":{},"interfaces/IFile.html":{},"interfaces/IGosipConfig.html":{},"interfaces/IGosipConfig-1.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IServiceList.html":{},"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"interfaces/IndexDefinition.html":{},"classes/LocalAuth.html":{},"injectables/LocalStrategy.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"interfaces/MultiTenancyConfig.html":{},"interfaces/MultiTenantModuleOptions.html":{},"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"modules/NestMultiTenantModule.html":{},"injectables/NestMultiTenantService.html":{},"classes/NestStoreConfigProvider.html":{},"classes/NestjsEventStore.html":{},"modules/NestjsEventStoreModule.html":{},"injectables/NestjsEventStoreService.html":{},"classes/NotFoundError.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/Paginate.html":{},"classes/ProjectEntity.html":{},"modules/ProjectModule.html":{},"injectables/ProjectRepository.html":{},"classes/ProjectResolver.html":{},"classes/ProjectResponseDto.html":{},"injectables/ProjectService.html":{},"classes/QueryFailedFilter.html":{},"injectables/ReferencesExplorerService.html":{},"modules/RepositoryModule.html":{},"injectables/RepositoryService.html":{},"interfaces/ServiceListItem.html":{},"classes/SnakeNamingStrategy.html":{},"interfaces/TenantInfo.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"classes/UserResolver.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"classes/ValidationError.html":{},"injectables/ValidatorService.html":{},"miscellaneous/variables.html":{}}}],["inherited",{"_index":226,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthRepository.html":{},"classes/AuthResponseDto.html":{},"classes/ProjectEntity.html":{},"injectables/ProjectRepository.html":{},"classes/ProjectResponseDto.html":{},"injectables/TenantRepository.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{}}}],["initially",{"_index":1054,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["inject",{"_index":867,"title":{},"body":{"modules/CommonModule.html":{},"injectables/EventStore.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"injectables/NestCasbinService.html":{},"injectables/NestMultiTenantService.html":{},"injectables/NestjsEventStoreService.html":{},"injectables/ReferencesExplorerService.html":{},"miscellaneous/variables.html":{}}}],["inject(context",{"_index":1884,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["inject(distributed_gateway_options",{"_index":1436,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{}}}],["inject(getclienttoken(connectionname",{"_index":2658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(getcollectiontoken(collectionname",{"_index":2661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(getdbtoken(connectionname",{"_index":2662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(getreactiveclienttoken(connectionname",{"_index":2663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(graphql_module_options",{"_index":1497,"title":{},"body":{"modules/GraphqlDistributedModule.html":{},"injectables/ReferencesExplorerService.html":{}}}],["inject(mongo_container_name",{"_index":1720,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["inject(providersconstants.event_store_connection_config_provider",{"_index":1200,"title":{},"body":{"injectables/EventStore.html":{}}}],["inject(providersconstants.event_store_provider",{"_index":1199,"title":{},"body":{"injectables/EventStore.html":{}}}],["inject(providersconstants.event_store_stream_config_provider",{"_index":1201,"title":{},"body":{"injectables/EventStore.html":{}}}],["inject(request",{"_index":1883,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["injectable",{"_index":114,"title":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/CommonService.html":{},"injectables/CookieSerializer.html":{},"injectables/CoreService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/EventStore.html":{},"injectables/ExitInterceptor.html":{},"injectables/FacebookStrategy.html":{},"injectables/GeneratorService.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"injectables/LocalStrategy.html":{},"injectables/NestCasbinService.html":{},"injectables/NestMultiTenantService.html":{},"injectables/NestjsEventStoreService.html":{},"injectables/ProjectRepository.html":{},"injectables/ProjectService.html":{},"injectables/ReferencesExplorerService.html":{},"injectables/RepositoryService.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidatorService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"guards/AuthGuard.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/CommonService.html":{},"injectables/CookieSerializer.html":{},"injectables/CoreService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/EventStore.html":{},"injectables/ExitInterceptor.html":{},"injectables/FacebookStrategy.html":{},"injectables/GeneratorService.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"injectables/NestCasbinService.html":{},"injectables/NestMultiTenantService.html":{},"injectables/NestjsEventStoreService.html":{},"injectables/ProjectRepository.html":{},"injectables/ProjectService.html":{},"injectables/ReferencesExplorerService.html":{},"injectables/RepositoryService.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidatorService.html":{},"coverage.html":{}}}],["injectables",{"_index":115,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/CommonService.html":{},"injectables/CookieSerializer.html":{},"injectables/CoreService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/EventStore.html":{},"injectables/ExitInterceptor.html":{},"injectables/FacebookStrategy.html":{},"injectables/GeneratorService.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"injectables/LocalStrategy.html":{},"injectables/NestCasbinService.html":{},"injectables/NestMultiTenantService.html":{},"injectables/NestjsEventStoreService.html":{},"injectables/ProjectRepository.html":{},"injectables/ProjectService.html":{},"injectables/ReferencesExplorerService.html":{},"injectables/RepositoryService.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidatorService.html":{},"overview.html":{}}}],["injectclient",{"_index":431,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectcollection",{"_index":2326,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectdb",{"_index":430,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["injected",{"_index":1759,"title":{},"body":{"modules/MongoModule.html":{}}}],["injection",{"_index":1770,"title":{},"body":{"modules/MongoModule.html":{}}}],["injectreactiveclient",{"_index":2327,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":1660,"title":{},"body":{"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"classes/ProjectResolver.html":{}}}],["inputs",{"_index":293,"title":{},"body":{"classes/AuthExistHandler.html":{},"classes/GetAuthHandler.html":{}}}],["installation",{"_index":2564,"title":{},"body":{"index.html":{}}}],["installsubscriptionhandlers",{"_index":1445,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{}}}],["instance",{"_index":603,"title":{},"body":{"classes/BaseRepository.html":{},"classes/DatabaseClient.html":{},"classes/DtoMapperUtils.html":{},"injectables/ReferencesExplorerService.html":{}}}],["instance.constructor",{"_index":2117,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["instanceof",{"_index":1142,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/ExitInterceptor.html":{},"classes/HttpExceptionFilter.html":{}}}],["instancewrapper",{"_index":2082,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["instantiated",{"_index":1049,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["intercept",{"_index":1134,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/ExitInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":1135,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/ExitInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interface",{"_index":769,"title":{"interfaces/CollectionProps.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/EntityOptions.html":{},"interfaces/EventStoreOptionConfig.html":{},"interfaces/FindRequest.html":{},"interfaces/IAuthRepo.html":{},"interfaces/IAwsConfigInterface.html":{},"interfaces/IConstraintErrors.html":{},"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IEventSourceConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IEventStoreMessage.html":{},"interfaces/IFile.html":{},"interfaces/IGosipConfig.html":{},"interfaces/IGosipConfig-1.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IServiceList.html":{},"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"interfaces/IndexDefinition.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"interfaces/MultiTenancyConfig.html":{},"interfaces/MultiTenantModuleOptions.html":{},"interfaces/ServiceListItem.html":{},"interfaces/TenantInfo.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{}},"body":{"interfaces/CollectionProps.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/EntityOptions.html":{},"interfaces/EventStoreOptionConfig.html":{},"interfaces/FindRequest.html":{},"interfaces/IAuthRepo.html":{},"interfaces/IAwsConfigInterface.html":{},"interfaces/IConstraintErrors.html":{},"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IEventSourceConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IEventStoreMessage.html":{},"interfaces/IFile.html":{},"interfaces/IGosipConfig.html":{},"interfaces/IGosipConfig-1.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IServiceList.html":{},"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"interfaces/IndexDefinition.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"interfaces/MultiTenancyConfig.html":{},"interfaces/MultiTenantModuleOptions.html":{},"classes/PageMetaDto.html":{},"interfaces/ServiceListItem.html":{},"interfaces/TenantInfo.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"coverage.html":{}}}],["interfaces",{"_index":530,"title":{},"body":{"injectables/AwsS3Service.html":{},"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"classes/ConfigService.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/EntityOptions.html":{},"interfaces/EventStoreOptionConfig.html":{},"interfaces/FindRequest.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"interfaces/IAuthRepo.html":{},"interfaces/IAwsConfigInterface.html":{},"interfaces/IConstraintErrors.html":{},"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IEventSourceConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IEventStoreMessage.html":{},"interfaces/IFile.html":{},"interfaces/IGosipConfig.html":{},"interfaces/IGosipConfig-1.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IServiceList.html":{},"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"interfaces/IndexDefinition.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"interfaces/MultiTenancyConfig.html":{},"interfaces/MultiTenantModuleOptions.html":{},"interfaces/ServiceListItem.html":{},"interfaces/TenantInfo.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"overview.html":{}}}],["interfaces/mongo",{"_index":1715,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["internal",{"_index":1195,"title":{},"body":{"injectables/EventStore.html":{}}}],["internal_error",{"_index":1270,"title":{},"body":{"injectables/ExitInterceptor.html":{}}}],["invokeevents",{"_index":348,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["invokeevents(type",{"_index":398,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["ioredis",{"_index":940,"title":{},"body":{"classes/ConfigService.html":{}}}],["ipagemetadtoparameters",{"_index":1640,"title":{"interfaces/IPageMetaDtoParameters.html":{}},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{},"coverage.html":{}}}],["iquery",{"_index":298,"title":{},"body":{"classes/AuthExistQuery.html":{},"classes/GetAuthQuery.html":{}}}],["iqueryhandler",{"_index":275,"title":{},"body":{"classes/AuthExistHandler.html":{},"classes/GetAuthHandler.html":{}}}],["isdatestring",{"_index":588,"title":{},"body":{"classes/BaseEntity.html":{}}}],["isenum",{"_index":1984,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isenum(order",{"_index":1988,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isenv",{"_index":871,"title":{},"body":{"classes/ConfigService.html":{}}}],["isenv(env",{"_index":880,"title":{},"body":{"classes/ConfigService.html":{}}}],["iservicelist",{"_index":1618,"title":{"interfaces/IServiceList.html":{}},"body":{"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IServiceList.html":{},"interfaces/ServiceListItem.html":{},"coverage.html":{}}}],["isimage",{"_index":2256,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["isimage(mimetype",{"_index":2257,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["isint",{"_index":1985,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isjson",{"_index":1633,"title":{},"body":{"interfaces/IEventStoreMessage.html":{}}}],["islowercase",{"_index":1280,"title":{},"body":{"classes/FacebookAuth.html":{},"classes/GoogleAuth.html":{},"classes/LocalAuth.html":{}}}],["isn't",{"_index":783,"title":{},"body":{"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{}}}],["isnotempty",{"_index":484,"title":{},"body":{"classes/AuthResponseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseSearchDto.html":{},"classes/PageOptionsDto.html":{},"classes/ProjectEntity.html":{},"classes/ProjectResponseDto.html":{},"classes/UserResponseDto.html":{}}}],["isnumber",{"_index":764,"title":{},"body":{"classes/BaseSearchDto.html":{}}}],["isoptional",{"_index":1986,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isrequestscoped",{"_index":2084,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["isresolverreference",{"_index":2114,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["isstring",{"_index":763,"title":{},"body":{"classes/BaseSearchDto.html":{},"classes/PageOptionsDto.html":{}}}],["itemcount",{"_index":1643,"title":{},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{}}}],["items",{"_index":678,"title":{},"body":{"classes/BaseRepository.html":{}}}],["itenantrepo",{"_index":1653,"title":{"interfaces/ITenantRepo.html":{}},"body":{"interfaces/ITenantRepo.html":{},"coverage.html":{}}}],["iuserrepo",{"_index":1668,"title":{"interfaces/IUserRepo.html":{}},"body":{"interfaces/IUserRepo.html":{},"coverage.html":{}}}],["join",{"_index":894,"title":{},"body":{"classes/ConfigService.html":{}}}],["join(__dirname",{"_index":930,"title":{},"body":{"classes/ConfigService.html":{}}}],["joincolumnname",{"_index":2143,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["joincolumnname(relationname",{"_index":2157,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["jointablecolumnname",{"_index":2144,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["jointablecolumnname(tablename",{"_index":2160,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["jointablename",{"_index":2145,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["jointablename(firsttablename",{"_index":2162,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["js",{"_index":2563,"title":{},"body":{"index.html":{}}}],["json",{"_index":796,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["json(r",{"_index":1579,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["json.parse(rawdata",{"_index":1244,"title":{},"body":{"injectables/EventStore.html":{}}}],["juicycleff/nest",{"_index":262,"title":{},"body":{"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"classes/BaseEntity.html":{},"modules/MongoCoreModule.html":{},"modules/NestMultiTenantModule.html":{},"classes/ProjectEntity.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{}}}],["juicycleff@gmail.com",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtmodule",{"_index":856,"title":{},"body":{"modules/CommonModule.html":{}}}],["jwtmodule.registerasync",{"_index":863,"title":{},"body":{"modules/CommonModule.html":{}}}],["keepconnectionalive",{"_index":918,"title":{},"body":{"classes/ConfigService.html":{}}}],["key",{"_index":553,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/CollectionProps.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"classes/ConfigService.html":{},"classes/ContextProvider.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"classes/HeadersDatasource.html":{},"interfaces/IndexDefinition.html":{},"modules/MongoCoreModule.html":{},"interfaces/MultiTenancyConfig.html":{},"classes/NotFoundError.html":{},"interfaces/TenantInfo.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"miscellaneous/variables.html":{}}}],["kill",{"_index":143,"title":{},"body":{"classes/AppUtils.html":{}}}],["killappwithgrace",{"_index":129,"title":{},"body":{"classes/AppUtils.html":{}}}],["kubernetes",{"_index":2558,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":2212,"title":{},"body":{"classes/UserEntity.html":{},"classes/UserResponseDto.html":{}}}],["leap",{"_index":2534,"title":{},"body":{"index.html":{}}}],["legend",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CoreModule.html":{},"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{},"modules/NestCasbinModule.html":{},"modules/NestMultiTenantModule.html":{},"modules/NestjsEventStoreModule.html":{},"modules/ProjectModule.html":{},"modules/RepositoryModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":821,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"classes/DtoMapperUtils.html":{}}}],["libs/.../auth",{"_index":2596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../auth.setup.ts",{"_index":2461,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../blood",{"_index":2597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../common.module.ts",{"_index":2611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../constraint",{"_index":2600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../context.middelware.ts",{"_index":2601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../current",{"_index":2603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../db.constants.ts",{"_index":2604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../encryption.util.ts",{"_index":2608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../entity",{"_index":2607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../entity.decorator.ts",{"_index":2465,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../graphql",{"_index":2613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../hash.utils.ts",{"_index":2468,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../hooks.decorator.ts",{"_index":2594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../index.ts",{"_index":2595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../key.shared.utils.ts",{"_index":2466,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../mongo.constants.ts",{"_index":2605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../mongo.decorator.ts",{"_index":2609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../mongo.provider.ts",{"_index":2463,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../mongo.util.ts",{"_index":2467,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../multi",{"_index":2464,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../nest",{"_index":2598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../nestjs",{"_index":2612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../object",{"_index":2469,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../order.edum.ts",{"_index":2450,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../permission.decorator.ts",{"_index":2470,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../project",{"_index":2610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../resolve",{"_index":2471,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../resource.decorator.ts",{"_index":2472,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../swagger.setup.ts",{"_index":2473,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../tenant.constant.ts",{"_index":2602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../tenant.enum.ts",{"_index":2451,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../tokens.ts",{"_index":2606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../types.interface.ts",{"_index":2599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../user",{"_index":2614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/common/src/common.module.ts",{"_index":852,"title":{},"body":{"modules/CommonModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/common.service.ts",{"_index":868,"title":{},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["libs/common/src/decorators/current",{"_index":2276,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/decorators/permission.decorator.ts",{"_index":2279,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/decorators/resource.decorator.ts",{"_index":2282,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/errors/index.ts",{"_index":1513,"title":{},"body":{"classes/GraphqlErrors.html":{},"coverage.html":{}}}],["libs/common/src/errors/index.ts:5",{"_index":1516,"title":{},"body":{"classes/GraphqlErrors.html":{}}}],["libs/common/src/errors/not",{"_index":1962,"title":{},"body":{"classes/NotFoundError.html":{},"coverage.html":{}}}],["libs/common/src/exceptions/app.exception.ts",{"_index":42,"title":{},"body":{"classes/AppError.html":{},"coverage.html":{}}}],["libs/common/src/exceptions/app.exception.ts:3",{"_index":52,"title":{},"body":{"classes/AppError.html":{}}}],["libs/common/src/exceptions/app.exception.ts:4",{"_index":58,"title":{},"body":{"classes/AppError.html":{}}}],["libs/common/src/exceptions/validation.exception.ts",{"_index":2241,"title":{},"body":{"classes/ValidationError.html":{},"coverage.html":{}}}],["libs/common/src/exceptions/validation.exception.ts:5",{"_index":2243,"title":{},"body":{"classes/ValidationError.html":{}}}],["libs/common/src/exceptions/validation.exception.ts:7",{"_index":2244,"title":{},"body":{"classes/ValidationError.html":{}}}],["libs/common/src/filters/bad",{"_index":1548,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["libs/common/src/filters/constraint",{"_index":1604,"title":{},"body":{"interfaces/IConstraintErrors.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/filters/query",{"_index":2048,"title":{},"body":{"classes/QueryFailedFilter.html":{},"coverage.html":{}}}],["libs/common/src/guards/auth.guard.ts",{"_index":306,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["libs/common/src/guards/auth.guard.ts:6",{"_index":310,"title":{},"body":{"guards/AuthGuard.html":{}}}],["libs/common/src/guards/gql",{"_index":1323,"title":{},"body":{"guards/GqlAuthGuard.html":{},"coverage.html":{}}}],["libs/common/src/interceptors/app",{"_index":1255,"title":{},"body":{"injectables/ExitInterceptor.html":{},"coverage.html":{}}}],["libs/common/src/interceptors/errors.interceptor.ts",{"_index":1133,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"coverage.html":{}}}],["libs/common/src/interceptors/errors.interceptor.ts:7",{"_index":1137,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["libs/common/src/interceptors/timeout.interceptors.ts",{"_index":2206,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["libs/common/src/interceptors/timeout.interceptors.ts:7",{"_index":2207,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["libs/common/src/interfaces/aws",{"_index":1601,"title":{},"body":{"interfaces/IAwsConfigInterface.html":{},"coverage.html":{}}}],["libs/common/src/interfaces/event",{"_index":1620,"title":{},"body":{"interfaces/IEventSourceConfig.html":{},"interfaces/IGosipConfig.html":{},"coverage.html":{}}}],["libs/common/src/interfaces/file.interface.ts",{"_index":1635,"title":{},"body":{"interfaces/IFile.html":{},"coverage.html":{}}}],["libs/common/src/middlewares/blood",{"_index":2286,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/middlewares/context.middelware.ts",{"_index":2289,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/providers/context.provider.ts",{"_index":961,"title":{},"body":{"classes/ContextProvider.html":{},"coverage.html":{}}}],["libs/common/src/providers/context.provider.ts:10",{"_index":969,"title":{},"body":{"classes/ContextProvider.html":{}}}],["libs/common/src/providers/context.provider.ts:15",{"_index":964,"title":{},"body":{"classes/ContextProvider.html":{}}}],["libs/common/src/providers/context.provider.ts:17",{"_index":966,"title":{},"body":{"classes/ContextProvider.html":{}}}],["libs/common/src/providers/context.provider.ts:6",{"_index":967,"title":{},"body":{"classes/ContextProvider.html":{}}}],["libs/common/src/providers/cookie.serializer.ts",{"_index":974,"title":{},"body":{"injectables/CookieSerializer.html":{},"coverage.html":{}}}],["libs/common/src/providers/cookie.serializer.ts:10",{"_index":981,"title":{},"body":{"injectables/CookieSerializer.html":{}}}],["libs/common/src/providers/cookie.serializer.ts:6",{"_index":984,"title":{},"body":{"injectables/CookieSerializer.html":{}}}],["libs/common/src/services/aws",{"_index":513,"title":{},"body":{"injectables/AwsS3Service.html":{},"coverage.html":{}}}],["libs/common/src/services/config.service.ts",{"_index":869,"title":{},"body":{"classes/ConfigService.html":{},"coverage.html":{}}}],["libs/common/src/services/config.service.ts:21",{"_index":877,"title":{},"body":{"classes/ConfigService.html":{}}}],["libs/common/src/services/config.service.ts:25",{"_index":879,"title":{},"body":{"classes/ConfigService.html":{}}}],["libs/common/src/services/config.service.ts:29",{"_index":887,"title":{},"body":{"classes/ConfigService.html":{}}}],["libs/common/src/services/config.service.ts:33",{"_index":881,"title":{},"body":{"classes/ConfigService.html":{}}}],["libs/common/src/services/config.service.ts:37",{"_index":884,"title":{},"body":{"classes/ConfigService.html":{}}}],["libs/common/src/services/config.service.ts:68",{"_index":889,"title":{},"body":{"classes/ConfigService.html":{}}}],["libs/common/src/services/config.service.ts:7",{"_index":875,"title":{},"body":{"classes/ConfigService.html":{}}}],["libs/common/src/services/config.service.ts:76",{"_index":891,"title":{},"body":{"classes/ConfigService.html":{}}}],["libs/common/src/services/generator.service.ts",{"_index":1299,"title":{},"body":{"injectables/GeneratorService.html":{},"coverage.html":{}}}],["libs/common/src/services/generator.service.ts:6",{"_index":1303,"title":{},"body":{"injectables/GeneratorService.html":{}}}],["libs/common/src/services/generator.service.ts:9",{"_index":1301,"title":{},"body":{"injectables/GeneratorService.html":{}}}],["libs/common/src/services/validator.service.ts",{"_index":2255,"title":{},"body":{"injectables/ValidatorService.html":{},"coverage.html":{}}}],["libs/common/src/services/validator.service.ts:6",{"_index":2258,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["libs/common/src/setup/auth.setup.ts",{"_index":2292,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/setup/swagger.setup.ts",{"_index":2298,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/common/src/strategies/snake",{"_index":2137,"title":{},"body":{"classes/SnakeNamingStrategy.html":{},"coverage.html":{}}}],["libs/common/src/utils/app.utils.ts",{"_index":127,"title":{},"body":{"classes/AppUtils.html":{},"coverage.html":{}}}],["libs/common/src/utils/app.utils.ts:4",{"_index":132,"title":{},"body":{"classes/AppUtils.html":{}}}],["libs/common/src/utils/dto",{"_index":1095,"title":{},"body":{"classes/DtoMapperUtils.html":{},"coverage.html":{}}}],["libs/common/src/utils/encryption.util.ts",{"_index":2303,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/utils/hash.utils.ts",{"_index":2305,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/common/src/utils/key.shared.utils.ts",{"_index":2306,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/core/src/core.module.ts",{"_index":993,"title":{},"body":{"modules/CoreModule.html":{}}}],["libs/core/src/core.service.ts",{"_index":995,"title":{},"body":{"injectables/CoreService.html":{},"coverage.html":{}}}],["libs/core/src/cqrs/commands/handlers/auth/create",{"_index":1005,"title":{},"body":{"classes/CreateAuthHandler.html":{},"coverage.html":{}}}],["libs/core/src/cqrs/commands/handlers/auth/index.ts",{"_index":2308,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/core/src/cqrs/commands/impl/auth/create",{"_index":997,"title":{},"body":{"classes/CreateAuthCommand.html":{},"coverage.html":{}}}],["libs/core/src/cqrs/events/handlers/auth/auth",{"_index":181,"title":{},"body":{"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthUpdatedHandler.html":{},"coverage.html":{}}}],["libs/core/src/cqrs/events/handlers/auth/index.ts",{"_index":2310,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/core/src/cqrs/events/impl/auth/auth",{"_index":170,"title":{},"body":{"classes/AuthCreatedEvent.html":{},"classes/AuthDeletedEvent.html":{},"classes/AuthUpdatedEvent.html":{},"coverage.html":{}}}],["libs/core/src/cqrs/queries/handlers/auth/auth",{"_index":273,"title":{},"body":{"classes/AuthExistHandler.html":{},"coverage.html":{}}}],["libs/core/src/cqrs/queries/handlers/auth/get",{"_index":1307,"title":{},"body":{"classes/GetAuthHandler.html":{},"coverage.html":{}}}],["libs/core/src/cqrs/queries/handlers/auth/index.ts",{"_index":2312,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/core/src/cqrs/queries/impl/auth/auth",{"_index":296,"title":{},"body":{"classes/AuthExistQuery.html":{},"coverage.html":{}}}],["libs/core/src/cqrs/queries/impl/auth/get",{"_index":1312,"title":{},"body":{"classes/GetAuthQuery.html":{},"coverage.html":{}}}],["libs/graphql",{"_index":1332,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IServiceList.html":{},"injectables/ReferencesExplorerService.html":{},"interfaces/ServiceListItem.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/nest",{"_index":597,"title":{},"body":{"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"interfaces/DBSource.html":{},"classes/DatabaseClient.html":{},"classes/Deferred.html":{},"interfaces/Document.html":{},"interfaces/EntityOptions.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"interfaces/MultiTenancyConfig.html":{},"interfaces/MultiTenantModuleOptions.html":{},"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"modules/NestMultiTenantModule.html":{},"injectables/NestMultiTenantService.html":{},"interfaces/TenantInfo.html":{},"injectables/TenantMiddleware.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/nestjs",{"_index":1150,"title":{},"body":{"injectables/EventStore.html":{},"interfaces/EventStoreOptionConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IEventStoreMessage.html":{},"interfaces/IGosipConfig-1.html":{},"classes/NestStoreConfigProvider.html":{},"classes/NestjsEventStore.html":{},"modules/NestjsEventStoreModule.html":{},"injectables/NestjsEventStoreService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/repository/src/db.constants.ts",{"_index":2356,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/repository/src/dtos/base",{"_index":746,"title":{},"body":{"classes/BaseSearchDto.html":{},"coverage.html":{}}}],["libs/repository/src/dtos/base.dto.ts",{"_index":562,"title":{},"body":{"classes/BaseDto.html":{},"coverage.html":{}}}],["libs/repository/src/dtos/base.dto.ts:5",{"_index":566,"title":{},"body":{"classes/BaseDto.html":{}}}],["libs/repository/src/dtos/base.dto.ts:6",{"_index":565,"title":{},"body":{"classes/BaseDto.html":{}}}],["libs/repository/src/dtos/base.dto.ts:7",{"_index":564,"title":{},"body":{"classes/BaseDto.html":{}}}],["libs/repository/src/dtos/page",{"_index":1641,"title":{},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"coverage.html":{}}}],["libs/repository/src/dtos/paginate.dto.ts",{"_index":1993,"title":{},"body":{"classes/Paginate.html":{},"coverage.html":{}}}],["libs/repository/src/dtos/paginate.dto.ts:2",{"_index":1995,"title":{},"body":{"classes/Paginate.html":{}}}],["libs/repository/src/dtos/paginate.dto.ts:3",{"_index":1996,"title":{},"body":{"classes/Paginate.html":{}}}],["libs/repository/src/dtos/response/auth.response.ts",{"_index":477,"title":{},"body":{"classes/AuthResponseDto.html":{},"coverage.html":{}}}],["libs/repository/src/dtos/response/auth.response.ts:6",{"_index":479,"title":{},"body":{"classes/AuthResponseDto.html":{}}}],["libs/repository/src/dtos/response/project.response.ts",{"_index":2044,"title":{},"body":{"classes/ProjectResponseDto.html":{},"coverage.html":{}}}],["libs/repository/src/dtos/response/project.response.ts:6",{"_index":2045,"title":{},"body":{"classes/ProjectResponseDto.html":{}}}],["libs/repository/src/dtos/response/user.response.ts",{"_index":2236,"title":{},"body":{"classes/UserResponseDto.html":{},"coverage.html":{}}}],["libs/repository/src/dtos/response/user.response.ts:12",{"_index":2237,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["libs/repository/src/dtos/response/user.response.ts:6",{"_index":2238,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["libs/repository/src/dtos/response/user.response.ts:9",{"_index":2239,"title":{},"body":{"classes/UserResponseDto.html":{}}}],["libs/repository/src/entities/auth.entity.ts",{"_index":205,"title":{},"body":{"classes/AuthEntity.html":{},"coverage.html":{}}}],["libs/repository/src/entities/auth.entity.ts:13",{"_index":223,"title":{},"body":{"classes/AuthEntity.html":{}}}],["libs/repository/src/entities/auth.entity.ts:18",{"_index":224,"title":{},"body":{"classes/AuthEntity.html":{}}}],["libs/repository/src/entities/auth.entity.ts:22",{"_index":239,"title":{},"body":{"classes/AuthEntity.html":{}}}],["libs/repository/src/entities/base",{"_index":573,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["libs/repository/src/entities/embeded/social.ts",{"_index":1273,"title":{},"body":{"classes/FacebookAuth.html":{},"classes/GoogleAuth.html":{},"classes/LocalAuth.html":{},"coverage.html":{}}}],["libs/repository/src/entities/embeded/social.ts:10",{"_index":1275,"title":{},"body":{"classes/FacebookAuth.html":{}}}],["libs/repository/src/entities/embeded/social.ts:13",{"_index":1278,"title":{},"body":{"classes/FacebookAuth.html":{}}}],["libs/repository/src/entities/embeded/social.ts:16",{"_index":1276,"title":{},"body":{"classes/FacebookAuth.html":{}}}],["libs/repository/src/entities/embeded/social.ts:22",{"_index":1321,"title":{},"body":{"classes/GoogleAuth.html":{}}}],["libs/repository/src/entities/embeded/social.ts:25",{"_index":1319,"title":{},"body":{"classes/GoogleAuth.html":{}}}],["libs/repository/src/entities/embeded/social.ts:28",{"_index":1322,"title":{},"body":{"classes/GoogleAuth.html":{}}}],["libs/repository/src/entities/embeded/social.ts:31",{"_index":1320,"title":{},"body":{"classes/GoogleAuth.html":{}}}],["libs/repository/src/entities/embeded/social.ts:37",{"_index":1677,"title":{},"body":{"classes/LocalAuth.html":{}}}],["libs/repository/src/entities/embeded/social.ts:40",{"_index":1678,"title":{},"body":{"classes/LocalAuth.html":{}}}],["libs/repository/src/entities/embeded/social.ts:7",{"_index":1277,"title":{},"body":{"classes/FacebookAuth.html":{}}}],["libs/repository/src/entities/project.entity.ts",{"_index":1997,"title":{},"body":{"classes/ProjectEntity.html":{},"coverage.html":{}}}],["libs/repository/src/entities/project.entity.ts:13",{"_index":2000,"title":{},"body":{"classes/ProjectEntity.html":{}}}],["libs/repository/src/entities/project.entity.ts:16",{"_index":1999,"title":{},"body":{"classes/ProjectEntity.html":{}}}],["libs/repository/src/entities/project.entity.ts:19",{"_index":2002,"title":{},"body":{"classes/ProjectEntity.html":{}}}],["libs/repository/src/entities/project.entity.ts:21",{"_index":2003,"title":{},"body":{"classes/ProjectEntity.html":{}}}],["libs/repository/src/entities/user.entity.ts",{"_index":2210,"title":{},"body":{"classes/UserEntity.html":{},"coverage.html":{}}}],["libs/repository/src/entities/user.entity.ts:12",{"_index":2216,"title":{},"body":{"classes/UserEntity.html":{}}}],["libs/repository/src/entities/user.entity.ts:15",{"_index":2217,"title":{},"body":{"classes/UserEntity.html":{}}}],["libs/repository/src/entities/user.entity.ts:18",{"_index":2215,"title":{},"body":{"classes/UserEntity.html":{}}}],["libs/repository/src/entities/user.entity.ts:21",{"_index":2213,"title":{},"body":{"classes/UserEntity.html":{}}}],["libs/repository/src/entities/user.entity.ts:24",{"_index":2218,"title":{},"body":{"classes/UserEntity.html":{}}}],["libs/repository/src/entities/user.entity.ts:26",{"_index":2219,"title":{},"body":{"classes/UserEntity.html":{}}}],["libs/repository/src/enums/order.edum.ts",{"_index":2452,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/repository/src/providers/auth",{"_index":2365,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/repository/src/providers/project",{"_index":2368,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/repository/src/providers/user",{"_index":2370,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/repository/src/repositories/auth.repository.ts",{"_index":332,"title":{},"body":{"injectables/AuthRepository.html":{},"coverage.html":{}}}],["libs/repository/src/repositories/auth.repository.ts:8",{"_index":355,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["libs/repository/src/repositories/contracts/auth",{"_index":1594,"title":{},"body":{"interfaces/IAuthRepo.html":{},"coverage.html":{}}}],["libs/repository/src/repositories/contracts/project",{"_index":1654,"title":{},"body":{"interfaces/ITenantRepo.html":{},"coverage.html":{}}}],["libs/repository/src/repositories/contracts/user",{"_index":1669,"title":{},"body":{"interfaces/IUserRepo.html":{},"coverage.html":{}}}],["libs/repository/src/repositories/project.repository.ts",{"_index":2014,"title":{},"body":{"injectables/ProjectRepository.html":{},"coverage.html":{}}}],["libs/repository/src/repositories/project.repository.ts:8",{"_index":2016,"title":{},"body":{"injectables/ProjectRepository.html":{}}}],["libs/repository/src/repositories/tenant.repository.ts",{"_index":2203,"title":{},"body":{"injectables/TenantRepository.html":{},"coverage.html":{}}}],["libs/repository/src/repositories/tenant.repository.ts:8",{"_index":2204,"title":{},"body":{"injectables/TenantRepository.html":{}}}],["libs/repository/src/repositories/user.repository.ts",{"_index":2232,"title":{},"body":{"injectables/UserRepository.html":{},"coverage.html":{}}}],["libs/repository/src/repositories/user.repository.ts:8",{"_index":2233,"title":{},"body":{"injectables/UserRepository.html":{}}}],["libs/repository/src/repository.module.ts",{"_index":2134,"title":{},"body":{"modules/RepositoryModule.html":{}}}],["libs/repository/src/repository.service.ts",{"_index":2136,"title":{},"body":{"injectables/RepositoryService.html":{},"coverage.html":{}}}],["license",{"_index":2581,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":2583,"title":{},"body":{"index.html":{}}}],["light",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["limit",{"_index":776,"title":{},"body":{"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{}}}],["line",{"_index":1617,"title":{},"body":{"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IServiceList.html":{},"interfaces/ServiceListItem.html":{}}}],["line:ban",{"_index":831,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["line:no",{"_index":1002,"title":{},"body":{"classes/CreateAuthCommand.html":{},"injectables/EventStore.html":{},"classes/HeadersDatasource.html":{},"classes/ValidationError.html":{}}}],["line:variable",{"_index":535,"title":{},"body":{"injectables/AwsS3Service.html":{},"classes/ContextProvider.html":{},"classes/SnakeNamingStrategy.html":{}}}],["linq",{"_index":2437,"title":{},"body":{"dependencies.html":{}}}],["list",{"_index":376,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["literal",{"_index":1622,"title":{},"body":{"interfaces/IEventSourceConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IndexDefinition.html":{},"classes/NotFoundError.html":{},"interfaces/TenantInfo.html":{},"classes/ValidationError.html":{}}}],["local",{"_index":207,"title":{},"body":{"classes/AuthEntity.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/IAuthRepo.html":{},"dependencies.html":{}}}],["localauth",{"_index":222,"title":{"classes/LocalAuth.html":{}},"body":{"classes/AuthEntity.html":{},"classes/AuthExistHandler.html":{},"classes/AuthExistQuery.html":{},"classes/FacebookAuth.html":{},"classes/GoogleAuth.html":{},"interfaces/IAuthRepo.html":{},"classes/LocalAuth.html":{},"coverage.html":{}}}],["localstrategy",{"_index":321,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["lodash",{"_index":1114,"title":{},"body":{"classes/DtoMapperUtils.html":{},"injectables/GraphQLTypesLoader.html":{},"classes/HttpExceptionFilter.html":{},"injectables/ValidatorService.html":{},"dependencies.html":{}}}],["logger",{"_index":188,"title":{},"body":{"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthExistHandler.html":{},"classes/AuthUpdatedHandler.html":{},"classes/CreateAuthHandler.html":{},"classes/GetAuthHandler.html":{}}}],["logger.log('async",{"_index":1017,"title":{},"body":{"classes/CreateAuthHandler.html":{}}}],["logger.log(error",{"_index":1028,"title":{},"body":{"classes/CreateAuthHandler.html":{}}}],["logger.log(event",{"_index":192,"title":{},"body":{"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthUpdatedHandler.html":{}}}],["logger.log(query",{"_index":289,"title":{},"body":{"classes/AuthExistHandler.html":{},"classes/GetAuthHandler.html":{}}}],["logging",{"_index":937,"title":{},"body":{"classes/ConfigService.html":{}}}],["login",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{}}}],["login(@args('input",{"_index":453,"title":{},"body":{"classes/AuthResolver.html":{}}}],["login(undefined",{"_index":439,"title":{},"body":{"classes/AuthResolver.html":{}}}],["logout",{"_index":436,"title":{},"body":{"classes/AuthResolver.html":{}}}],["logout(@context",{"_index":471,"title":{},"body":{"classes/AuthResolver.html":{}}}],["logout(context",{"_index":442,"title":{},"body":{"classes/AuthResolver.html":{}}}],["look",{"_index":1861,"title":{},"body":{"injectables/NestCasbinService.html":{}}}],["make",{"_index":1860,"title":{},"body":{"injectables/NestCasbinService.html":{}}}],["map",{"_index":1263,"title":{},"body":{"injectables/ExitInterceptor.html":{},"classes/HeadersDatasource.html":{},"modules/MongoCoreModule.html":{},"miscellaneous/functions.html":{}}}],["map((data",{"_index":1271,"title":{},"body":{"injectables/ExitInterceptor.html":{}}}],["map((resolver",{"_index":2124,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["mapper.utils.ts",{"_index":1096,"title":{},"body":{"classes/DtoMapperUtils.html":{},"coverage.html":{}}}],["mapper.utils.ts:12",{"_index":1108,"title":{},"body":{"classes/DtoMapperUtils.html":{}}}],["mapper.utils.ts:13",{"_index":1111,"title":{},"body":{"classes/DtoMapperUtils.html":{}}}],["mapper.utils.ts:14",{"_index":1112,"title":{},"body":{"classes/DtoMapperUtils.html":{}}}],["mapper.utils.ts:28",{"_index":1099,"title":{},"body":{"classes/DtoMapperUtils.html":{}}}],["mapper.utils.ts:32",{"_index":1105,"title":{},"body":{"classes/DtoMapperUtils.html":{}}}],["mark",{"_index":2477,"title":{},"body":{"miscellaneous/functions.html":{}}}],["marked",{"_index":807,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["matching",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"classes/AppError.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"classes/AppUtils.html":{},"controllers/AuthController.html":{},"classes/AuthCreatedEvent.html":{},"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedEvent.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthEntity.html":{},"classes/AuthExistHandler.html":{},"classes/AuthExistQuery.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"classes/AuthResolver.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatedEvent.html":{},"classes/AuthUpdatedHandler.html":{},"injectables/AwsS3Service.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"classes/BaseSearchDto.html":{},"interfaces/CollectionProps.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigService.html":{},"classes/ContextProvider.html":{},"injectables/CookieSerializer.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CreateAuthCommand.html":{},"classes/CreateAuthHandler.html":{},"interfaces/DBSource.html":{},"classes/DatabaseClient.html":{},"classes/Deferred.html":{},"interfaces/Document.html":{},"classes/DtoMapperUtils.html":{},"interfaces/EntityOptions.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/EventStore.html":{},"interfaces/EventStoreOptionConfig.html":{},"injectables/ExitInterceptor.html":{},"classes/FacebookAuth.html":{},"injectables/FacebookStrategy.html":{},"interfaces/FindRequest.html":{},"injectables/GeneratorService.html":{},"classes/GetAuthHandler.html":{},"classes/GetAuthQuery.html":{},"classes/GoogleAuth.html":{},"guards/GqlAuthGuard.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/GraphqlErrors.html":{},"classes/HeadersDatasource.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAuthRepo.html":{},"interfaces/IAwsConfigInterface.html":{},"interfaces/IConstraintErrors.html":{},"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IEventSourceConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IEventStoreMessage.html":{},"interfaces/IFile.html":{},"interfaces/IGosipConfig.html":{},"interfaces/IGosipConfig-1.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IServiceList.html":{},"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"interfaces/IndexDefinition.html":{},"classes/LocalAuth.html":{},"injectables/LocalStrategy.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"interfaces/MultiTenancyConfig.html":{},"interfaces/MultiTenantModuleOptions.html":{},"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"modules/NestMultiTenantModule.html":{},"injectables/NestMultiTenantService.html":{},"classes/NestStoreConfigProvider.html":{},"classes/NestjsEventStore.html":{},"modules/NestjsEventStoreModule.html":{},"injectables/NestjsEventStoreService.html":{},"classes/NotFoundError.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/Paginate.html":{},"classes/ProjectEntity.html":{},"modules/ProjectModule.html":{},"injectables/ProjectRepository.html":{},"classes/ProjectResolver.html":{},"classes/ProjectResponseDto.html":{},"injectables/ProjectService.html":{},"classes/QueryFailedFilter.html":{},"injectables/ReferencesExplorerService.html":{},"modules/RepositoryModule.html":{},"injectables/RepositoryService.html":{},"interfaces/ServiceListItem.html":{},"classes/SnakeNamingStrategy.html":{},"interfaces/TenantInfo.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"classes/UserResolver.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"classes/ValidationError.html":{},"injectables/ValidatorService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(itemcount",{"_index":1652,"title":{},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{}}}],["math.random().tostring(36).replace(/[^a",{"_index":1119,"title":{},"body":{"classes/DtoMapperUtils.html":{}}}],["max",{"_index":712,"title":{},"body":{"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"classes/ConfigService.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IEventSourceConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IGosipConfig.html":{},"interfaces/IGosipConfig-1.html":{},"interfaces/IndexDefinition.html":{},"classes/PageOptionsDto.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{}}}],["max(50",{"_index":1992,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["maxage",{"_index":2674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maximum",{"_index":1980,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["maybeoptions",{"_index":2483,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mdn",{"_index":1082,"title":{},"body":{"classes/Deferred.html":{}}}],["means",{"_index":824,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["memberof",{"_index":626,"title":{},"body":{"classes/BaseRepository.html":{},"classes/DatabaseClient.html":{}}}],["meow",{"_index":462,"title":{},"body":{"classes/AuthResolver.html":{}}}],["merge",{"_index":1348,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["mergedefaults",{"_index":1481,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["mergedefaults(options",{"_index":1486,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["mergedtypedefs",{"_index":1500,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["mergeoptions",{"_index":1376,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{}}}],["mergeoptions(options",{"_index":1389,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{}}}],["mergetypes",{"_index":1347,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["mergetypes([...flattypes",{"_index":1364,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["mergetypesbypaths",{"_index":1336,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["mergetypesbypaths(paths",{"_index":1340,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["message",{"_index":56,"title":{},"body":{"classes/AppError.html":{},"injectables/ErrorsInterceptor.html":{},"classes/GraphqlErrors.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundError.html":{},"classes/QueryFailedFilter.html":{}}}],["messages",{"_index":1583,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationError.html":{}}}],["messages.length",{"_index":2249,"title":{},"body":{"classes/ValidationError.html":{}}}],["messages[0",{"_index":2250,"title":{},"body":{"classes/ValidationError.html":{}}}],["meta.dto.ts",{"_index":1642,"title":{},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{},"coverage.html":{}}}],["meta.dto.ts:11",{"_index":1969,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:14",{"_index":1970,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:17",{"_index":1968,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:20",{"_index":1967,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["metadata",{"_index":48,"title":{},"body":{"classes/AppError.html":{},"interfaces/IEventStoreMessage.html":{},"classes/ValidationError.html":{},"dependencies.html":{}}}],["metadata.interface",{"_index":2100,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["metadata/issues/53#issuecomment",{"_index":2623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadatascanner",{"_index":1470,"title":{},"body":{"modules/GraphqlDistributedModule.html":{},"injectables/ReferencesExplorerService.html":{}}}],["methoddecorator",{"_index":2492,"title":{},"body":{"miscellaneous/functions.html":{}}}],["methodname",{"_index":2090,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["methods",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"controllers/AuthController.html":{},"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthEntity.html":{},"classes/AuthExistHandler.html":{},"guards/AuthGuard.html":{},"injectables/AuthRepository.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatedHandler.html":{},"injectables/AwsS3Service.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"classes/ConfigService.html":{},"classes/ContextProvider.html":{},"injectables/CookieSerializer.html":{},"classes/CreateAuthHandler.html":{},"classes/DatabaseClient.html":{},"classes/DtoMapperUtils.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/EventStore.html":{},"injectables/ExitInterceptor.html":{},"injectables/FacebookStrategy.html":{},"injectables/GeneratorService.html":{},"classes/GetAuthHandler.html":{},"guards/GqlAuthGuard.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/GraphqlErrors.html":{},"classes/HeadersDatasource.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAuthRepo.html":{},"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"injectables/LocalStrategy.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"interfaces/MongoOptionsFactory.html":{},"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"modules/NestMultiTenantModule.html":{},"injectables/NestMultiTenantService.html":{},"classes/NestjsEventStore.html":{},"modules/NestjsEventStoreModule.html":{},"classes/ProjectEntity.html":{},"injectables/ProjectRepository.html":{},"classes/ProjectResolver.html":{},"classes/QueryFailedFilter.html":{},"injectables/ReferencesExplorerService.html":{},"classes/SnakeNamingStrategy.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"injectables/ValidatorService.html":{}}}],["microservice",{"_index":2504,"title":{},"body":{"index.html":{}}}],["migrations",{"_index":915,"title":{},"body":{"classes/ConfigService.html":{}}}],["migrations/**{.ts,.js",{"_index":931,"title":{},"body":{"classes/ConfigService.html":{}}}],["migrations/*{.ts,.js",{"_index":917,"title":{},"body":{"classes/ConfigService.html":{}}}],["migrationsrun",{"_index":934,"title":{},"body":{"classes/ConfigService.html":{}}}],["mime",{"_index":529,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["mimetype",{"_index":1638,"title":{},"body":{"interfaces/IFile.html":{},"injectables/ValidatorService.html":{}}}],["min",{"_index":958,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IEventSourceConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IGosipConfig.html":{},"interfaces/IGosipConfig-1.html":{},"classes/PageOptionsDto.html":{}}}],["min(1",{"_index":1990,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["min(10",{"_index":1991,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["minimum",{"_index":1989,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["miscellaneous",{"_index":2448,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2582,"title":{},"body":{"index.html":{}}}],["mode",{"_index":2570,"title":{},"body":{"index.html":{}}}],["model",{"_index":1110,"title":{},"body":{"classes/DtoMapperUtils.html":{}}}],["model(entity",{"_index":1118,"title":{},"body":{"classes/DtoMapperUtils.html":{}}}],["model(u",{"_index":1117,"title":{},"body":{"classes/DtoMapperUtils.html":{}}}],["module",{"_index":63,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CoreModule.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"modules/NestCasbinModule.html":{},"modules/NestMultiTenantModule.html":{},"modules/NestjsEventStoreModule.html":{},"modules/ProjectModule.html":{},"modules/RepositoryModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CoreModule.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IServiceList.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"modules/NestCasbinModule.html":{},"modules/NestMultiTenantModule.html":{},"modules/NestjsEventStoreModule.html":{},"modules/ProjectModule.html":{},"injectables/ReferencesExplorerService.html":{},"modules/RepositoryModule.html":{},"interfaces/ServiceListItem.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["module.options",{"_index":1871,"title":{},"body":{"modules/NestMultiTenantModule.html":{}}}],["module.options.ts",{"_index":1811,"title":{},"body":{"interfaces/MultiTenantModuleOptions.html":{},"coverage.html":{}}}],["modulemetadata",{"_index":1791,"title":{},"body":{"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{}}}],["moduleref",{"_index":1704,"title":{},"body":{"modules/MongoCoreModule.html":{},"injectables/ReferencesExplorerService.html":{}}}],["modules",{"_index":65,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CoreModule.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"modules/NestCasbinModule.html":{},"modules/NestMultiTenantModule.html":{},"modules/NestjsEventStoreModule.html":{},"modules/ProjectModule.html":{},"injectables/ReferencesExplorerService.html":{},"modules/RepositoryModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["modulescontainer",{"_index":2075,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["mongo",{"_index":1771,"title":{},"body":{"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mongo's",{"_index":418,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["mongo.constants",{"_index":1712,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["mongo.provider",{"_index":1774,"title":{},"body":{"modules/MongoModule.html":{}}}],["mongo.util",{"_index":1709,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["mongo_connection_name",{"_index":2340,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongo_connections_container",{"_index":2341,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongo_container_name",{"_index":1710,"title":{},"body":{"modules/MongoCoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongo_module_options",{"_index":1711,"title":{},"body":{"modules/MongoCoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongoclient",{"_index":353,"title":{},"body":{"injectables/AuthRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"classes/DatabaseClient.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"injectables/UserRepository.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mongoclient(uri",{"_index":1730,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["mongoclient.connect(uri",{"_index":1075,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["mongoclientoptions",{"_index":1047,"title":{},"body":{"classes/DatabaseClient.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"miscellaneous/variables.html":{}}}],["mongoconnectionname",{"_index":2644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoconnectionscontainer",{"_index":2645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongocontainername",{"_index":1736,"title":{},"body":{"modules/MongoCoreModule.html":{},"miscellaneous/variables.html":{}}}],["mongocoremodule",{"_index":1685,"title":{"modules/MongoCoreModule.html":{}},"body":{"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"modules.html":{},"overview.html":{}}}],["mongocoremodule.forroot(uri",{"_index":1775,"title":{},"body":{"modules/MongoModule.html":{}}}],["mongocoremodule.forrootasync(options",{"_index":1776,"title":{},"body":{"modules/MongoModule.html":{}}}],["mongodb",{"_index":424,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"classes/DatabaseClient.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"injectables/UserRepository.html":{},"dependencies.html":{},"index.html":{}}}],["mongodb://${uri}/${databasename}${replicaname",{"_index":1906,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["mongodb://localhost",{"_index":1902,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["mongodb://localhost/test",{"_index":1890,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["mongodb://localhost:27017/test",{"_index":2680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongodbstore",{"_index":2294,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongoerror",{"_index":726,"title":{},"body":{"classes/BaseRepository.html":{}}}],["mongomodule",{"_index":329,"title":{"modules/MongoModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"modules.html":{},"overview.html":{}}}],["mongomoduleasyncoptions",{"_index":1691,"title":{"interfaces/MongoModuleAsyncOptions.html":{}},"body":{"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"coverage.html":{}}}],["mongomoduleoptions",{"_index":1713,"title":{"interfaces/MongoModuleOptions.html":{}},"body":{"modules/MongoCoreModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"injectables/NestMultiTenantService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongooptionsfactory",{"_index":1714,"title":{"interfaces/MongoOptionsFactory.html":{}},"body":{"modules/MongoCoreModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"coverage.html":{}}}],["more",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["msg",{"_index":1517,"title":{},"body":{"classes/GraphqlErrors.html":{}}}],["multi",{"_index":263,"title":{},"body":{"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"interfaces/DBSource.html":{},"classes/DatabaseClient.html":{},"classes/Deferred.html":{},"interfaces/Document.html":{},"interfaces/EntityOptions.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"interfaces/MultiTenancyConfig.html":{},"interfaces/MultiTenantModuleOptions.html":{},"modules/NestMultiTenantModule.html":{},"injectables/NestMultiTenantService.html":{},"classes/ProjectEntity.html":{},"injectables/ProjectRepository.html":{},"interfaces/TenantInfo.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["multi_con_xxx",{"_index":2640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multiline",{"_index":905,"title":{},"body":{"classes/ConfigService.html":{}}}],["multiple",{"_index":364,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["multitenancyconfig",{"_index":1797,"title":{"interfaces/MultiTenancyConfig.html":{}},"body":{"interfaces/MultiTenancyConfig.html":{},"interfaces/MultiTenantModuleOptions.html":{},"interfaces/TenantInfo.html":{},"injectables/TenantMiddleware.html":{},"coverage.html":{}}}],["multitenantmoduleoptions",{"_index":1809,"title":{"interfaces/MultiTenantModuleOptions.html":{}},"body":{"interfaces/MultiTenantModuleOptions.html":{},"modules/NestMultiTenantModule.html":{},"coverage.html":{}}}],["mutation",{"_index":446,"title":{},"body":{"classes/AuthResolver.html":{},"classes/ProjectResolver.html":{}}}],["mutation('login",{"_index":440,"title":{},"body":{"classes/AuthResolver.html":{}}}],["mutation('logout",{"_index":470,"title":{},"body":{"classes/AuthResolver.html":{}}}],["mysql",{"_index":797,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["n",{"_index":903,"title":{},"body":{"classes/ConfigService.html":{}}}],["name",{"_index":54,"title":{},"body":{"classes/AppError.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthCreatedEvent.html":{},"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedEvent.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthEntity.html":{},"classes/AuthExistHandler.html":{},"classes/AuthExistQuery.html":{},"guards/AuthGuard.html":{},"injectables/AuthRepository.html":{},"classes/AuthResolver.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatedEvent.html":{},"classes/AuthUpdatedHandler.html":{},"injectables/AwsS3Service.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"classes/ConfigService.html":{},"classes/ContextProvider.html":{},"injectables/CookieSerializer.html":{},"classes/CreateAuthCommand.html":{},"classes/CreateAuthHandler.html":{},"interfaces/DBSource.html":{},"classes/DatabaseClient.html":{},"interfaces/Document.html":{},"classes/DtoMapperUtils.html":{},"interfaces/EntityOptions.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/EventStore.html":{},"interfaces/EventStoreOptionConfig.html":{},"injectables/ExitInterceptor.html":{},"classes/FacebookAuth.html":{},"injectables/FacebookStrategy.html":{},"interfaces/FindRequest.html":{},"injectables/GeneratorService.html":{},"classes/GetAuthHandler.html":{},"classes/GetAuthQuery.html":{},"classes/GoogleAuth.html":{},"guards/GqlAuthGuard.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/GraphqlErrors.html":{},"classes/HeadersDatasource.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAuthRepo.html":{},"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IServiceList.html":{},"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"interfaces/IndexDefinition.html":{},"classes/LocalAuth.html":{},"injectables/LocalStrategy.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"modules/NestMultiTenantModule.html":{},"injectables/NestMultiTenantService.html":{},"classes/NestStoreConfigProvider.html":{},"classes/NestjsEventStore.html":{},"modules/NestjsEventStoreModule.html":{},"classes/NotFoundError.html":{},"classes/PageMetaDto.html":{},"classes/ProjectEntity.html":{},"injectables/ProjectRepository.html":{},"classes/ProjectResolver.html":{},"classes/ProjectResponseDto.html":{},"classes/QueryFailedFilter.html":{},"injectables/ReferencesExplorerService.html":{},"interfaces/ServiceListItem.html":{},"classes/SnakeNamingStrategy.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"classes/ValidationError.html":{},"injectables/ValidatorService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nameoroptions",{"_index":2484,"title":{},"body":{"miscellaneous/functions.html":{}}}],["names",{"_index":1758,"title":{},"body":{"modules/MongoModule.html":{}}}],["naming",{"_index":1131,"title":{},"body":{"interfaces/EntityOptions.html":{}}}],["naming.strategy",{"_index":899,"title":{},"body":{"classes/ConfigService.html":{}}}],["naming.strategy.ts",{"_index":2138,"title":{},"body":{"classes/SnakeNamingStrategy.html":{},"coverage.html":{}}}],["naming.strategy.ts:13",{"_index":2169,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["naming.strategy.ts:17",{"_index":2159,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["naming.strategy.ts:21",{"_index":2166,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["naming.strategy.ts:30",{"_index":2161,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["naming.strategy.ts:34",{"_index":2150,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["naming.strategy.ts:5",{"_index":2171,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["naming.strategy.ts:9",{"_index":2155,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["namingstrategy",{"_index":938,"title":{},"body":{"classes/ConfigService.html":{}}}],["namingstrategyinterface",{"_index":2140,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["need",{"_index":1794,"title":{},"body":{"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{}}}],["nest",{"_index":1828,"title":{},"body":{"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"modules/NestMultiTenantModule.html":{}}}],["nestcasbinmodule",{"_index":1812,"title":{"modules/NestCasbinModule.html":{}},"body":{"modules/NestCasbinModule.html":{},"modules.html":{},"overview.html":{}}}],["nestcasbinservice",{"_index":1816,"title":{"injectables/NestCasbinService.html":{}},"body":{"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"coverage.html":{},"overview.html":{}}}],["nestinterceptor",{"_index":1138,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/ExitInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["nestjs",{"_index":1182,"title":{},"body":{"injectables/EventStore.html":{},"modules/NestjsEventStoreModule.html":{},"injectables/NestjsEventStoreService.html":{},"index.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"classes/AppError.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"classes/AppUtils.html":{},"controllers/AuthController.html":{},"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthExistHandler.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatedHandler.html":{},"injectables/AwsS3Service.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"injectables/CookieSerializer.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CreateAuthHandler.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/EventStore.html":{},"injectables/ExitInterceptor.html":{},"injectables/FacebookStrategy.html":{},"injectables/GeneratorService.html":{},"classes/GetAuthHandler.html":{},"guards/GqlAuthGuard.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LocalStrategy.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"modules/NestMultiTenantModule.html":{},"injectables/NestMultiTenantService.html":{},"modules/NestjsEventStoreModule.html":{},"injectables/NestjsEventStoreService.html":{},"modules/ProjectModule.html":{},"injectables/ProjectRepository.html":{},"injectables/ProjectService.html":{},"classes/QueryFailedFilter.html":{},"injectables/ReferencesExplorerService.html":{},"modules/RepositoryModule.html":{},"injectables/RepositoryService.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"injectables/TimeoutInterceptor.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"classes/ValidationError.html":{},"injectables/ValidatorService.html":{},"dependencies.html":{}}}],["nestjs/common/interfaces",{"_index":1792,"title":{},"body":{"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{}}}],["nestjs/common/interfaces/external/validator",{"_index":2246,"title":{},"body":{"classes/ValidationError.html":{}}}],["nestjs/core",{"_index":1430,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/HttpExceptionFilter.html":{},"modules/MongoCoreModule.html":{},"injectables/NestMultiTenantService.html":{},"classes/QueryFailedFilter.html":{},"injectables/ReferencesExplorerService.html":{},"dependencies.html":{}}}],["nestjs/core/helpers/external",{"_index":2092,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["nestjs/core/injector/instance",{"_index":2094,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["nestjs/core/injector/module",{"_index":2095,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["nestjs/core/metadata",{"_index":1471,"title":{},"body":{"modules/GraphqlDistributedModule.html":{},"injectables/ReferencesExplorerService.html":{}}}],["nestjs/cqrs",{"_index":178,"title":{},"body":{"classes/AuthCreatedEvent.html":{},"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedEvent.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthExistHandler.html":{},"classes/AuthExistQuery.html":{},"classes/AuthUpdatedEvent.html":{},"classes/AuthUpdatedHandler.html":{},"classes/BaseEntity.html":{},"classes/CreateAuthCommand.html":{},"classes/CreateAuthHandler.html":{},"injectables/EventStore.html":{},"classes/GetAuthHandler.html":{},"classes/GetAuthQuery.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":448,"title":{},"body":{"classes/AuthResolver.html":{},"guards/GqlAuthGuard.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedModule.html":{},"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IServiceList.html":{},"injectables/NestMultiTenantService.html":{},"classes/ProjectResolver.html":{},"injectables/ReferencesExplorerService.html":{},"interfaces/ServiceListItem.html":{},"classes/UserResolver.html":{},"dependencies.html":{}}}],["nestjs/graphql/dist/factories/params.factory",{"_index":2096,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["nestjs/graphql/dist/graphql",{"_index":1394,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedModule.html":{}}}],["nestjs/graphql/dist/graphql.constants",{"_index":1477,"title":{},"body":{"modules/GraphqlDistributedModule.html":{},"injectables/ReferencesExplorerService.html":{}}}],["nestjs/graphql/dist/interfaces/gql",{"_index":1615,"title":{},"body":{"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IServiceList.html":{},"interfaces/ServiceListItem.html":{}}}],["nestjs/graphql/dist/interfaces/resolver",{"_index":2099,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["nestjs/graphql/dist/services/base",{"_index":2101,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["nestjs/graphql/dist/services/delegates",{"_index":1397,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedModule.html":{}}}],["nestjs/graphql/dist/services/resolvers",{"_index":1399,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedModule.html":{}}}],["nestjs/graphql/dist/services/scalars",{"_index":1400,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedModule.html":{}}}],["nestjs/graphql/dist/utils/extend.util",{"_index":1402,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedModule.html":{}}}],["nestjs/graphql/dist/utils/generate",{"_index":1479,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["nestjs/graphql/dist/utils/merge",{"_index":1482,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["nestjs/graphql/dist/utils/remove",{"_index":1404,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{}}}],["nestjs/jwt",{"_index":857,"title":{},"body":{"modules/CommonModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":985,"title":{},"body":{"injectables/CookieSerializer.html":{},"injectables/FacebookStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2385,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":760,"title":{},"body":{"classes/BaseSearchDto.html":{},"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":892,"title":{},"body":{"classes/ConfigService.html":{},"dependencies.html":{}}}],["nestjseventstore",{"_index":1917,"title":{"classes/NestjsEventStore.html":{}},"body":{"classes/NestjsEventStore.html":{},"injectables/NestjsEventStoreService.html":{},"coverage.html":{}}}],["nestjseventstoremodule",{"_index":1941,"title":{"modules/NestjsEventStoreModule.html":{}},"body":{"modules/NestjsEventStoreModule.html":{},"modules.html":{},"overview.html":{}}}],["nestjseventstoreservice",{"_index":1945,"title":{"injectables/NestjsEventStoreService.html":{}},"body":{"modules/NestjsEventStoreModule.html":{},"injectables/NestjsEventStoreService.html":{},"coverage.html":{},"overview.html":{}}}],["nestmiddleware",{"_index":2188,"title":{},"body":{"injectables/TenantMiddleware.html":{}}}],["nestmultitenantmodule",{"_index":1688,"title":{"modules/NestMultiTenantModule.html":{}},"body":{"modules/MongoCoreModule.html":{},"modules/NestMultiTenantModule.html":{},"modules.html":{},"overview.html":{}}}],["nestmultitenantservice",{"_index":1718,"title":{"injectables/NestMultiTenantService.html":{}},"body":{"modules/MongoCoreModule.html":{},"modules/NestMultiTenantModule.html":{},"injectables/NestMultiTenantService.html":{},"coverage.html":{},"overview.html":{}}}],["neststoreconfigprovider",{"_index":1908,"title":{"classes/NestStoreConfigProvider.html":{}},"body":{"classes/NestStoreConfigProvider.html":{},"coverage.html":{}}}],["new",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthRepository.html":{},"injectables/AwsS3Service.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"classes/ConfigService.html":{},"classes/DatabaseClient.html":{},"classes/Deferred.html":{},"classes/DtoMapperUtils.html":{},"injectables/FacebookStrategy.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/GraphqlErrors.html":{},"injectables/LocalStrategy.html":{},"modules/MongoCoreModule.html":{},"modules/NestCasbinModule.html":{},"classes/NestjsEventStore.html":{},"injectables/NestjsEventStoreService.html":{},"injectables/ProjectRepository.html":{},"injectables/ReferencesExplorerService.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new(entity",{"_index":268,"title":{},"body":{"classes/AuthEntity.html":{},"classes/DtoMapperUtils.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["newdocument",{"_index":666,"title":{},"body":{"classes/BaseRepository.html":{}}}],["newdocument._id",{"_index":685,"title":{},"body":{"classes/BaseRepository.html":{}}}],["newdocument.id",{"_index":680,"title":{},"body":{"classes/BaseRepository.html":{}}}],["newdocuments",{"_index":658,"title":{},"body":{"classes/BaseRepository.html":{}}}],["newevent",{"_index":1920,"title":{},"body":{"classes/NestjsEventStore.html":{}}}],["newevent(name",{"_index":1926,"title":{},"body":{"classes/NestjsEventStore.html":{}}}],["next",{"_index":534,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"classes/ContextProvider.html":{},"classes/CreateAuthCommand.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/EventStore.html":{},"injectables/ExitInterceptor.html":{},"classes/HeadersDatasource.html":{},"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IServiceList.html":{},"interfaces/ServiceListItem.html":{},"classes/SnakeNamingStrategy.html":{},"injectables/TenantMiddleware.html":{},"injectables/TimeoutInterceptor.html":{},"classes/ValidationError.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next.handle",{"_index":1264,"title":{},"body":{"injectables/ExitInterceptor.html":{}}}],["next.handle().pipe(catcherror((error",{"_index":1141,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["next.handle().pipe(timeout(5000",{"_index":2209,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["node",{"_index":2425,"title":{},"body":{"dependencies.html":{}}}],["node_modules",{"_index":1367,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["nodeenv",{"_index":873,"title":{},"body":{"classes/ConfigService.html":{}}}],["nodeenv}.env",{"_index":902,"title":{},"body":{"classes/ConfigService.html":{}}}],["nodejs",{"_index":2555,"title":{},"body":{"index.html":{}}}],["not_found_error",{"_index":1519,"title":{},"body":{"classes/GraphqlErrors.html":{},"classes/NotFoundError.html":{}}}],["note",{"_index":794,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["notfounderror",{"_index":1514,"title":{"classes/NotFoundError.html":{}},"body":{"classes/GraphqlErrors.html":{},"classes/NotFoundError.html":{},"coverage.html":{}}}],["notfounderror(prefix",{"_index":1515,"title":{},"body":{"classes/GraphqlErrors.html":{}}}],["null",{"_index":294,"title":{},"body":{"classes/AuthExistHandler.html":{},"injectables/AuthService.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"classes/CreateAuthHandler.html":{},"injectables/EventStore.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/NestMultiTenantService.html":{},"modules/NestjsEventStoreModule.html":{},"classes/ProjectResolver.html":{},"injectables/ReferencesExplorerService.html":{},"injectables/TenantMiddleware.html":{},"classes/ValidationError.html":{}}}],["nullable",{"_index":592,"title":{},"body":{"classes/BaseEntity.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"classes/FacebookAuth.html":{},"classes/GoogleAuth.html":{},"classes/LocalAuth.html":{},"classes/UserEntity.html":{}}}],["number",{"_index":236,"title":{},"body":{"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/BaseSearchDto.html":{},"interfaces/CollectionProps.html":{},"interfaces/ColumnOptions.html":{},"classes/ConfigService.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"classes/DtoMapperUtils.html":{},"interfaces/FindRequest.html":{},"interfaces/IEventSourceConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IEventStoreMessage.html":{},"interfaces/IFile.html":{},"interfaces/IGosipConfig.html":{},"interfaces/IGosipConfig-1.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IndexDefinition.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/Paginate.html":{},"classes/ProjectEntity.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"classes/UserEntity.html":{}}}],["number(this.get(key",{"_index":912,"title":{},"body":{"classes/ConfigService.html":{}}}],["object",{"_index":51,"title":{},"body":{"classes/AppError.html":{},"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"interfaces/ColumnOptions.html":{},"classes/Deferred.html":{},"injectables/EventStore.html":{},"interfaces/IEventStoreMessage.html":{},"modules/MongoCoreModule.html":{},"injectables/ProjectRepository.html":{},"injectables/ReferencesExplorerService.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object).toarray",{"_index":641,"title":{},"body":{"classes/BaseRepository.html":{}}}],["object.assign",{"_index":629,"title":{},"body":{"classes/BaseRepository.html":{},"classes/DatabaseClient.html":{}}}],["object.assign(document",{"_index":679,"title":{},"body":{"classes/BaseRepository.html":{}}}],["object.defineproperty(this",{"_index":1965,"title":{},"body":{"classes/NotFoundError.html":{}}}],["object.entries(validationerror.constraints",{"_index":1582,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["object.freeze(this",{"_index":1092,"title":{},"body":{"classes/Deferred.html":{}}}],["object.getprototypeof(instance",{"_index":2120,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["object.keys(event)[0",{"_index":1211,"title":{},"body":{"injectables/EventStore.html":{}}}],["object.keys(process.env",{"_index":908,"title":{},"body":{"classes/ConfigService.html":{}}}],["objectid",{"_index":231,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthRepository.html":{},"classes/AuthResponseDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"classes/ProjectEntity.html":{},"injectables/ProjectRepository.html":{},"classes/ProjectResponseDto.html":{},"injectables/TenantRepository.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{}}}],["objectid(document.id",{"_index":669,"title":{},"body":{"classes/BaseRepository.html":{}}}],["objectid(id",{"_index":637,"title":{},"body":{"classes/BaseRepository.html":{}}}],["objectidcolumn",{"_index":232,"title":{},"body":{"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["objectidcolumn(options",{"_index":2490,"title":{},"body":{"miscellaneous/functions.html":{}}}],["observable",{"_index":311,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/ExitInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["occurs",{"_index":2628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offset",{"_index":1994,"title":{},"body":{"classes/Paginate.html":{}}}],["omit",{"_index":1614,"title":{},"body":{"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IServiceList.html":{},"interfaces/ServiceListItem.html":{}}}],["ondropped",{"_index":1247,"title":{},"body":{"injectables/EventStore.html":{}}}],["one",{"_index":806,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{}}}],["onevent",{"_index":1223,"title":{},"body":{"injectables/EventStore.html":{}}}],["onhealthcheck",{"_index":1443,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{}}}],["onmoduledestroy",{"_index":1702,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["onmoduleinit",{"_index":1425,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{}}}],["operation",{"_index":1070,"title":{},"body":{"classes/DatabaseClient.html":{},"injectables/NestCasbinService.html":{}}}],["operation.attempt(async",{"_index":1073,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["operation.retry(e",{"_index":1078,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["operations",{"_index":817,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["option",{"_index":1914,"title":{},"body":{"classes/NestStoreConfigProvider.html":{},"modules/NestjsEventStoreModule.html":{},"injectables/TenantMiddleware.html":{},"miscellaneous/functions.html":{}}}],["option.config",{"_index":1180,"title":{},"body":{"injectables/EventStore.html":{},"modules/NestjsEventStoreModule.html":{}}}],["option.config.ts",{"_index":1253,"title":{},"body":{"interfaces/EventStoreOptionConfig.html":{},"coverage.html":{}}}],["option.interface.ts",{"_index":1127,"title":{},"body":{"interfaces/EntityOptions.html":{},"coverage.html":{}}}],["optional",{"_index":47,"title":{},"body":{"classes/AppError.html":{},"controllers/AuthController.html":{},"classes/AuthCreatedEvent.html":{},"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedEvent.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthEntity.html":{},"classes/AuthExistHandler.html":{},"classes/AuthExistQuery.html":{},"guards/AuthGuard.html":{},"injectables/AuthRepository.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatedEvent.html":{},"classes/AuthUpdatedHandler.html":{},"injectables/AwsS3Service.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"classes/ConfigService.html":{},"classes/ContextProvider.html":{},"injectables/CookieSerializer.html":{},"classes/CreateAuthCommand.html":{},"classes/CreateAuthHandler.html":{},"classes/DatabaseClient.html":{},"interfaces/Document.html":{},"classes/DtoMapperUtils.html":{},"interfaces/EntityOptions.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/EventStore.html":{},"interfaces/EventStoreOptionConfig.html":{},"injectables/ExitInterceptor.html":{},"injectables/FacebookStrategy.html":{},"interfaces/FindRequest.html":{},"injectables/GeneratorService.html":{},"classes/GetAuthHandler.html":{},"classes/GetAuthQuery.html":{},"guards/GqlAuthGuard.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/GraphqlErrors.html":{},"classes/HeadersDatasource.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAuthRepo.html":{},"interfaces/IEventSourceConfig.html":{},"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"interfaces/IndexDefinition.html":{},"injectables/LocalStrategy.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MultiTenancyConfig.html":{},"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"modules/NestMultiTenantModule.html":{},"injectables/NestMultiTenantService.html":{},"classes/NestStoreConfigProvider.html":{},"classes/NestjsEventStore.html":{},"modules/NestjsEventStoreModule.html":{},"classes/NotFoundError.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/Paginate.html":{},"classes/ProjectEntity.html":{},"injectables/ProjectRepository.html":{},"classes/ProjectResolver.html":{},"classes/QueryFailedFilter.html":{},"injectables/ReferencesExplorerService.html":{},"classes/SnakeNamingStrategy.html":{},"interfaces/TenantInfo.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/UpdateByIdRequest.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"classes/ValidationError.html":{},"injectables/ValidatorService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":248,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthRepository.html":{},"injectables/AwsS3Service.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"classes/ConfigService.html":{},"interfaces/DBSource.html":{},"classes/DatabaseClient.html":{},"interfaces/Document.html":{},"classes/DtoMapperUtils.html":{},"interfaces/EntityOptions.html":{},"interfaces/FindRequest.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"interfaces/IndexDefinition.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"modules/NestMultiTenantModule.html":{},"classes/ProjectEntity.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{}}}],["options.containername",{"_index":1737,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["options.credentials",{"_index":548,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["options.dto",{"_index":1645,"title":{},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{}}}],["options.dto.ts",{"_index":1971,"title":{},"body":{"classes/PageOptionsDto.html":{},"coverage.html":{}}}],["options.dto.ts:14",{"_index":1975,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:24",{"_index":1977,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:36",{"_index":1982,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:38",{"_index":1983,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:46",{"_index":1979,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.imports",{"_index":1487,"title":{},"body":{"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{}}}],["options.inject",{"_index":1494,"title":{},"body":{"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{}}}],["options.interface",{"_index":1616,"title":{},"body":{"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IServiceList.html":{},"modules/MongoCoreModule.html":{},"interfaces/ServiceListItem.html":{},"classes/ValidationError.html":{}}}],["options.interface.ts",{"_index":1611,"title":{},"body":{"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IServiceList.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"interfaces/ServiceListItem.html":{},"coverage.html":{}}}],["options.interface.ts:14",{"_index":1796,"title":{},"body":{"interfaces/MongoOptionsFactory.html":{}}}],["options.ts",{"_index":787,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"coverage.html":{}}}],["options.useclass",{"_index":1492,"title":{},"body":{"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{}}}],["options.useexisting",{"_index":1489,"title":{},"body":{"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{}}}],["options.usefactory",{"_index":1490,"title":{},"body":{"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{}}}],["optionsfactory",{"_index":1495,"title":{},"body":{"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{}}}],["optionsfactory.creategqloptions",{"_index":1496,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["optionsfactory.createmongooptions",{"_index":1749,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["opts",{"_index":600,"title":{},"body":{"classes/BaseRepository.html":{},"classes/DatabaseClient.html":{}}}],["order",{"_index":1972,"title":{},"body":{"classes/PageOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["order.asc",{"_index":1973,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["originalname",{"_index":1639,"title":{},"body":{"interfaces/IFile.html":{}}}],["orm",{"_index":825,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["ourcollection",{"_index":706,"title":{},"body":{"classes/BaseRepository.html":{}}}],["ourcollection.createindex(indexdefinition.fields",{"_index":720,"title":{},"body":{"classes/BaseRepository.html":{}}}],["ourcollection.dropindex(indexdefinition.options.name",{"_index":732,"title":{},"body":{"classes/BaseRepository.html":{}}}],["out",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CoreModule.html":{},"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{},"modules/NestCasbinModule.html":{},"modules/NestMultiTenantModule.html":{},"modules/NestjsEventStoreModule.html":{},"modules/ProjectModule.html":{},"modules/RepositoryModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":2588,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":781,"title":{},"body":{"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{}}}],["owner",{"_index":1998,"title":{},"body":{"classes/ProjectEntity.html":{},"classes/ProjectResolver.html":{}}}],["owner(@parent",{"_index":2040,"title":{},"body":{"classes/ProjectResolver.html":{}}}],["owner(project",{"_index":2022,"title":{},"body":{"classes/ProjectResolver.html":{}}}],["package",{"_index":2376,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":748,"title":{},"body":{"classes/BaseSearchDto.html":{},"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["pagecount",{"_index":1647,"title":{},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{}}}],["pagemetadto",{"_index":1646,"title":{"classes/PageMetaDto.html":{}},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{},"coverage.html":{}}}],["pageoptionsdto",{"_index":1644,"title":{"classes/PageOptionsDto.html":{}},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"coverage.html":{}}}],["pageoptionsdto.page",{"_index":1648,"title":{},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{}}}],["pageoptionsdto.take",{"_index":1649,"title":{},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{}}}],["paginate",{"_index":1659,"title":{"classes/Paginate.html":{}},"body":{"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"classes/Paginate.html":{},"classes/ProjectResolver.html":{},"coverage.html":{}}}],["pagination",{"_index":2422,"title":{},"body":{"dependencies.html":{}}}],["param",{"_index":625,"title":{},"body":{"classes/BaseRepository.html":{},"classes/DatabaseClient.html":{},"classes/DtoMapperUtils.html":{},"injectables/EventStore.html":{},"interfaces/IAuthRepo.html":{},"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"modules/MongoModule.html":{}}}],["param_args_metadata",{"_index":2097,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["parameters",{"_index":53,"title":{},"body":{"classes/AppError.html":{},"controllers/AuthController.html":{},"classes/AuthCreatedEvent.html":{},"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedEvent.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthEntity.html":{},"classes/AuthExistHandler.html":{},"classes/AuthExistQuery.html":{},"guards/AuthGuard.html":{},"injectables/AuthRepository.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatedEvent.html":{},"classes/AuthUpdatedHandler.html":{},"injectables/AwsS3Service.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"classes/ConfigService.html":{},"classes/ContextProvider.html":{},"injectables/CookieSerializer.html":{},"classes/CreateAuthCommand.html":{},"classes/CreateAuthHandler.html":{},"classes/DatabaseClient.html":{},"classes/DtoMapperUtils.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/EventStore.html":{},"injectables/ExitInterceptor.html":{},"injectables/FacebookStrategy.html":{},"injectables/GeneratorService.html":{},"classes/GetAuthHandler.html":{},"classes/GetAuthQuery.html":{},"guards/GqlAuthGuard.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/GraphqlErrors.html":{},"classes/HeadersDatasource.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAuthRepo.html":{},"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"injectables/LocalStrategy.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"modules/NestMultiTenantModule.html":{},"injectables/NestMultiTenantService.html":{},"classes/NestStoreConfigProvider.html":{},"classes/NestjsEventStore.html":{},"modules/NestjsEventStoreModule.html":{},"classes/NotFoundError.html":{},"classes/PageMetaDto.html":{},"classes/ProjectEntity.html":{},"injectables/ProjectRepository.html":{},"classes/ProjectResolver.html":{},"classes/QueryFailedFilter.html":{},"injectables/ReferencesExplorerService.html":{},"classes/SnakeNamingStrategy.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"classes/ValidationError.html":{},"injectables/ValidatorService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1845,"title":{},"body":{"injectables/NestCasbinService.html":{}}}],["parent",{"_index":2029,"title":{},"body":{"classes/ProjectResolver.html":{}}}],["parenttableidpropertyname",{"_index":2149,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["parenttablename",{"_index":2151,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["parser",{"_index":1531,"title":{},"body":{"classes/HeadersDatasource.html":{},"dependencies.html":{}}}],["pass",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"injectables/FacebookStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passport.authenticate('facebook",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{}}}],["passport.initialize",{"_index":2665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passport.session",{"_index":2666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passportmiddleware",{"_index":2295,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["passportserializer",{"_index":975,"title":{},"body":{"injectables/CookieSerializer.html":{}}}],["passportsessionmiddleware",{"_index":2296,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["passportstrategy",{"_index":1287,"title":{},"body":{"injectables/FacebookStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(graphqllocalstrategy",{"_index":1683,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1290,"title":{},"body":{"injectables/FacebookStrategy.html":{}}}],["password",{"_index":455,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/FacebookStrategy.html":{},"interfaces/IEventSourceConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IGosipConfig.html":{},"interfaces/IGosipConfig-1.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["passwordhash",{"_index":2656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"interfaces/ITenantRepo.html":{},"miscellaneous/functions.html":{}}}],["paths",{"_index":1339,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["paths.length",{"_index":1353,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["pattern",{"_index":2505,"title":{},"body":{"index.html":{}}}],["patterns",{"_index":2527,"title":{},"body":{"index.html":{}}}],["payload",{"_index":982,"title":{},"body":{"injectables/CookieSerializer.html":{},"classes/NestjsEventStore.html":{}}}],["permission",{"_index":2280,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["permission(options",{"_index":2491,"title":{},"body":{"miscellaneous/functions.html":{}}}],["permission_definition",{"_index":2281,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pick",{"_index":1612,"title":{},"body":{"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IServiceList.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"interfaces/ServiceListItem.html":{}}}],["pipe",{"_index":1265,"title":{},"body":{"injectables/ExitInterceptor.html":{}}}],["pipeline",{"_index":2561,"title":{},"body":{"index.html":{}}}],["plaintoclass",{"_index":2031,"title":{},"body":{"classes/ProjectResolver.html":{}}}],["plaintoclass(authentity",{"_index":1022,"title":{},"body":{"classes/CreateAuthHandler.html":{}}}],["plaintoclass(user",{"_index":2043,"title":{},"body":{"classes/ProjectResolver.html":{}}}],["playground",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["point",{"_index":840,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["polygon",{"_index":841,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["pooloptions",{"_index":956,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IEventSourceConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IGosipConfig.html":{},"interfaces/IGosipConfig-1.html":{}}}],["populate",{"_index":1788,"title":{},"body":{"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{}}}],["port",{"_index":923,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IEventSourceConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IGosipConfig.html":{},"interfaces/IGosipConfig-1.html":{}}}],["possible",{"_index":829,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["post",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"miscellaneous/variables.html":{}}}],["post('/facebook/callback",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["post_key",{"_index":408,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"injectables/UserRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["postgres",{"_index":836,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["powered",{"_index":2635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pre",{"_index":775,"title":{},"body":{"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"miscellaneous/variables.html":{}}}],["pre_key",{"_index":407,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"injectables/UserRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["predicate",{"_index":2073,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["predicate(instance",{"_index":2089,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["prefix",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"classes/GraphqlErrors.html":{}}}],["preflightcontinue",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["primary",{"_index":790,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["primarycolumn",{"_index":811,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["printschema",{"_index":1469,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["printschema(apollooptions.schema",{"_index":1508,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["private",{"_index":288,"title":{},"body":{"classes/AuthExistHandler.html":{},"injectables/AuthRepository.html":{},"classes/AuthResolver.html":{},"injectables/AwsS3Service.html":{},"classes/BaseRepository.html":{},"classes/ContextProvider.html":{},"classes/CreateAuthHandler.html":{},"classes/DatabaseClient.html":{},"injectables/EventStore.html":{},"classes/GetAuthHandler.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/HttpExceptionFilter.html":{},"modules/MongoCoreModule.html":{},"injectables/NestCasbinService.html":{},"injectables/NestMultiTenantService.html":{},"classes/NestStoreConfigProvider.html":{},"injectables/ProjectRepository.html":{},"injectables/ReferencesExplorerService.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["probably",{"_index":2118,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["problem",{"_index":2578,"title":{},"body":{"index.html":{}}}],["process",{"_index":2517,"title":{},"body":{"index.html":{}}}],["process.env.database_name",{"_index":1891,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["process.env.database_replica_name",{"_index":1898,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["process.env.database_uri",{"_index":1889,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["process.env[envname",{"_index":909,"title":{},"body":{"classes/ConfigService.html":{}}}],["process.env[envname].replace(/\\\\n/g",{"_index":910,"title":{},"body":{"classes/ConfigService.html":{}}}],["process.env[key",{"_index":911,"title":{},"body":{"classes/ConfigService.html":{}}}],["process.exit(0",{"_index":142,"title":{},"body":{"classes/AppUtils.html":{}}}],["process.exit(1",{"_index":138,"title":{},"body":{"classes/AppUtils.html":{}}}],["process.on('sigint",{"_index":135,"title":{},"body":{"classes/AppUtils.html":{}}}],["process.on('sigterm",{"_index":145,"title":{},"body":{"classes/AppUtils.html":{}}}],["production",{"_index":2521,"title":{},"body":{"index.html":{}}}],["project",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseRepository.html":{},"classes/ProjectEntity.html":{},"injectables/ProjectRepository.html":{},"classes/ProjectResolver.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["project(@args('id",{"_index":2036,"title":{},"body":{"classes/ProjectResolver.html":{}}}],["project(id",{"_index":2025,"title":{},"body":{"classes/ProjectResolver.html":{}}}],["project.entity",{"_index":2222,"title":{},"body":{"classes/UserEntity.html":{}}}],["project.owner",{"_index":2042,"title":{},"body":{"classes/ProjectResolver.html":{}}}],["project.resolver",{"_index":2012,"title":{},"body":{"modules/ProjectModule.html":{}}}],["project.service",{"_index":2010,"title":{},"body":{"modules/ProjectModule.html":{}}}],["project/src/app.controller.ts",{"_index":35,"title":{},"body":{"controllers/AppController-2.html":{},"coverage.html":{}}}],["project/src/app.controller.ts:9",{"_index":36,"title":{},"body":{"controllers/AppController-2.html":{}}}],["project/src/app.service.ts",{"_index":122,"title":{},"body":{"injectables/AppService-2.html":{},"coverage.html":{}}}],["project/src/app.service.ts:5",{"_index":123,"title":{},"body":{"injectables/AppService-2.html":{}}}],["project/src/main.ts",{"_index":2272,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["project/src/project/project.module.ts",{"_index":2009,"title":{},"body":{"modules/ProjectModule.html":{}}}],["project/src/project/project.resolver.ts",{"_index":2017,"title":{},"body":{"classes/ProjectResolver.html":{},"coverage.html":{}}}],["project/src/project/project.resolver.ts:14",{"_index":2026,"title":{},"body":{"classes/ProjectResolver.html":{}}}],["project/src/project/project.resolver.ts:19",{"_index":2028,"title":{},"body":{"classes/ProjectResolver.html":{}}}],["project/src/project/project.resolver.ts:24",{"_index":2024,"title":{},"body":{"classes/ProjectResolver.html":{}}}],["project/src/project/project.resolver.ts:8",{"_index":2021,"title":{},"body":{"classes/ProjectResolver.html":{}}}],["project/src/project/project.service.ts",{"_index":2046,"title":{},"body":{"injectables/ProjectService.html":{},"coverage.html":{}}}],["projectentity",{"_index":1665,"title":{"classes/ProjectEntity.html":{}},"body":{"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"classes/ProjectEntity.html":{},"injectables/ProjectRepository.html":{},"classes/UserEntity.html":{},"coverage.html":{}}}],["projection",{"_index":777,"title":{},"body":{"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{}}}],["projectmodule",{"_index":2005,"title":{"modules/ProjectModule.html":{}},"body":{"modules/ProjectModule.html":{},"modules.html":{},"overview.html":{}}}],["projectrepoprovider",{"_index":2369,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projectrepository",{"_index":2013,"title":{"injectables/ProjectRepository.html":{}},"body":{"injectables/ProjectRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projectresolver",{"_index":2011,"title":{"classes/ProjectResolver.html":{}},"body":{"modules/ProjectModule.html":{},"classes/ProjectResolver.html":{},"coverage.html":{}}}],["projectresponsedto",{"_index":2004,"title":{"classes/ProjectResponseDto.html":{}},"body":{"classes/ProjectEntity.html":{},"classes/ProjectResponseDto.html":{},"coverage.html":{}}}],["projects",{"_index":2019,"title":{},"body":{"classes/ProjectResolver.html":{},"classes/UserEntity.html":{}}}],["projects(@args('input",{"_index":2038,"title":{},"body":{"classes/ProjectResolver.html":{}}}],["projects(paginate",{"_index":2027,"title":{},"body":{"classes/ProjectResolver.html":{}}}],["projectservice",{"_index":2008,"title":{"injectables/ProjectService.html":{}},"body":{"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"coverage.html":{},"overview.html":{}}}],["promise",{"_index":284,"title":{},"body":{"classes/AuthExistHandler.html":{},"guards/AuthGuard.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"classes/CreateAuthHandler.html":{},"interfaces/DBSource.html":{},"classes/DatabaseClient.html":{},"classes/Deferred.html":{},"interfaces/Document.html":{},"injectables/FacebookStrategy.html":{},"interfaces/FindRequest.html":{},"classes/GetAuthHandler.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"interfaces/IAuthRepo.html":{},"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"interfaces/IndexDefinition.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"injectables/NestMultiTenantService.html":{},"injectables/ProjectRepository.html":{},"classes/ProjectResolver.html":{},"injectables/TenantRepository.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"injectables/UserRepository.html":{}}}],["promise((resolve",{"_index":1069,"title":{},"body":{"classes/DatabaseClient.html":{},"classes/Deferred.html":{}}}],["promise.all",{"_index":1746,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["promise.all(filecontentspromises",{"_index":1372,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["promise.resolve",{"_index":1143,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["promise2",{"_index":1933,"title":{},"body":{"classes/NestjsEventStore.html":{},"dependencies.html":{}}}],["promise>(async",{"_index":699,"title":{},"body":{"classes/BaseRepository.html":{}}}],["proof",{"_index":2511,"title":{},"body":{"index.html":{}}}],["properties",{"_index":45,"title":{},"body":{"classes/AppError.html":{},"classes/AppUtils.html":{},"classes/AuthCreatedEvent.html":{},"classes/AuthDeletedEvent.html":{},"classes/AuthEntity.html":{},"classes/AuthExistQuery.html":{},"injectables/AuthRepository.html":{},"classes/AuthResponseDto.html":{},"classes/AuthUpdatedEvent.html":{},"injectables/AwsS3Service.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"classes/BaseSearchDto.html":{},"interfaces/CollectionProps.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"classes/ContextProvider.html":{},"classes/CreateAuthCommand.html":{},"interfaces/DBSource.html":{},"classes/DatabaseClient.html":{},"classes/Deferred.html":{},"interfaces/Document.html":{},"interfaces/EntityOptions.html":{},"injectables/EventStore.html":{},"interfaces/EventStoreOptionConfig.html":{},"classes/FacebookAuth.html":{},"interfaces/FindRequest.html":{},"classes/GetAuthQuery.html":{},"classes/GoogleAuth.html":{},"classes/GraphqlErrors.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAwsConfigInterface.html":{},"interfaces/IEventSourceConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IEventStoreMessage.html":{},"interfaces/IFile.html":{},"interfaces/IGosipConfig.html":{},"interfaces/IGosipConfig-1.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IServiceList.html":{},"interfaces/IndexDefinition.html":{},"classes/LocalAuth.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MultiTenancyConfig.html":{},"interfaces/MultiTenantModuleOptions.html":{},"classes/NestStoreConfigProvider.html":{},"classes/NotFoundError.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/Paginate.html":{},"classes/ProjectEntity.html":{},"injectables/ProjectRepository.html":{},"classes/ProjectResponseDto.html":{},"classes/QueryFailedFilter.html":{},"injectables/ReferencesExplorerService.html":{},"interfaces/ServiceListItem.html":{},"interfaces/TenantInfo.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{},"classes/ValidationError.html":{}}}],["propertyname",{"_index":2156,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["props",{"_index":2649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["protected",{"_index":350,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["protocol",{"_index":952,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IEventSourceConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IGosipConfig.html":{},"interfaces/IGosipConfig-1.html":{}}}],["prototype",{"_index":2080,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["prototype[methodname",{"_index":2113,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["prototype[resolver.methodname",{"_index":2128,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["provide",{"_index":1434,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{},"modules/NestCasbinModule.html":{},"modules/NestjsEventStoreModule.html":{},"injectables/NestjsEventStoreService.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":632,"title":{},"body":{"classes/BaseRepository.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{}}}],["provider",{"_index":1460,"title":{},"body":{"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{},"modules/NestCasbinModule.html":{}}}],["providers",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CoreModule.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"modules/NestCasbinModule.html":{},"modules/NestMultiTenantModule.html":{},"modules/NestjsEventStoreModule.html":{},"modules/ProjectModule.html":{},"modules/RepositoryModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["providersconstants",{"_index":1181,"title":{},"body":{"injectables/EventStore.html":{},"modules/NestjsEventStoreModule.html":{},"injectables/NestjsEventStoreService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["providersconstants.event_store_connection_config_provider",{"_index":1952,"title":{},"body":{"modules/NestjsEventStoreModule.html":{}}}],["providersconstants.event_store_provider",{"_index":1958,"title":{},"body":{"injectables/NestjsEventStoreService.html":{}}}],["providersconstants.event_store_stream_config_provider",{"_index":1954,"title":{},"body":{"modules/NestjsEventStoreModule.html":{}}}],["pub",{"_index":1023,"title":{},"body":{"classes/CreateAuthHandler.html":{}}}],["pub.commit",{"_index":1026,"title":{},"body":{"classes/CreateAuthHandler.html":{}}}],["pub.notify(result",{"_index":1025,"title":{},"body":{"classes/CreateAuthHandler.html":{}}}],["public",{"_index":46,"title":{},"body":{"classes/AppError.html":{},"classes/AppUtils.html":{},"classes/AuthCreatedEvent.html":{},"classes/AuthDeletedEvent.html":{},"classes/AuthEntity.html":{},"classes/AuthExistQuery.html":{},"injectables/AuthRepository.html":{},"classes/AuthUpdatedEvent.html":{},"injectables/AwsS3Service.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"classes/ConfigService.html":{},"classes/CreateAuthCommand.html":{},"classes/DtoMapperUtils.html":{},"injectables/ExitInterceptor.html":{},"injectables/GeneratorService.html":{},"classes/GetAuthQuery.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/HttpExceptionFilter.html":{},"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"modules/NestMultiTenantModule.html":{},"classes/ProjectEntity.html":{},"injectables/ProjectRepository.html":{},"classes/QueryFailedFilter.html":{},"injectables/ReferencesExplorerService.html":{},"injectables/TenantRepository.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"classes/ValidationError.html":{},"injectables/ValidatorService.html":{}}}],["publish",{"_index":1158,"title":{},"body":{"injectables/EventStore.html":{}}}],["publish(event",{"_index":1168,"title":{},"body":{"injectables/EventStore.html":{}}}],["publisher",{"_index":1008,"title":{},"body":{"classes/CreateAuthHandler.html":{}}}],["push",{"_index":2619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["q",{"_index":749,"title":{},"body":{"classes/BaseSearchDto.html":{},"classes/PageOptionsDto.html":{}}}],["query",{"_index":283,"title":{},"body":{"classes/AuthExistHandler.html":{},"classes/BaseRepository.html":{},"classes/GetAuthHandler.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/NestCasbinService.html":{},"classes/ProjectResolver.html":{},"index.html":{}}}],["querybuilder",{"_index":816,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["queryfailederror",{"_index":2054,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["queryfailedfilter",{"_index":2047,"title":{"classes/QueryFailedFilter.html":{}},"body":{"classes/QueryFailedFilter.html":{},"coverage.html":{}}}],["queryhandler",{"_index":285,"title":{},"body":{"classes/AuthExistHandler.html":{},"classes/GetAuthHandler.html":{}}}],["queryhandler(authexistquery",{"_index":287,"title":{},"body":{"classes/AuthExistHandler.html":{}}}],["queryhandler(getauthquery",{"_index":1310,"title":{},"body":{"classes/GetAuthHandler.html":{}}}],["querystring",{"_index":2459,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["queue",{"_index":2542,"title":{},"body":{"index.html":{}}}],["r",{"_index":1570,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["r.message",{"_index":1575,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["r.message[0",{"_index":1573,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["r.statuscode",{"_index":1577,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["random",{"_index":1101,"title":{},"body":{"classes/DtoMapperUtils.html":{}}}],["rawdata",{"_index":1240,"title":{},"body":{"injectables/EventStore.html":{}}}],["react",{"_index":2547,"title":{},"body":{"index.html":{}}}],["read",{"_index":561,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["readfile",{"_index":1351,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["readfile(filepath.tostring",{"_index":1370,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["readonly",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"classes/AuthCreatedEvent.html":{},"classes/AuthDeletedEvent.html":{},"classes/AuthExistHandler.html":{},"classes/AuthExistQuery.html":{},"injectables/AuthRepository.html":{},"classes/AuthResolver.html":{},"classes/AuthUpdatedEvent.html":{},"injectables/AwsS3Service.html":{},"classes/BaseRepository.html":{},"classes/ContextProvider.html":{},"classes/CreateAuthCommand.html":{},"classes/CreateAuthHandler.html":{},"injectables/EventStore.html":{},"injectables/FacebookStrategy.html":{},"classes/GetAuthHandler.html":{},"classes/GetAuthQuery.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"interfaces/IPageMetaDtoParameters.html":{},"injectables/LocalStrategy.html":{},"modules/MongoCoreModule.html":{},"injectables/NestCasbinService.html":{},"injectables/NestMultiTenantService.html":{},"classes/NestStoreConfigProvider.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"injectables/ProjectRepository.html":{},"injectables/ReferencesExplorerService.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["reason",{"_index":1249,"title":{},"body":{"injectables/EventStore.html":{}}}],["received",{"_index":1194,"title":{},"body":{"injectables/EventStore.html":{}}}],["record",{"_index":369,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["records",{"_index":365,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["recreate",{"_index":731,"title":{},"body":{"classes/BaseRepository.html":{}}}],["recreateerr",{"_index":733,"title":{},"body":{"classes/BaseRepository.html":{}}}],["redis",{"_index":2554,"title":{},"body":{"index.html":{}}}],["reference.decorator.ts",{"_index":2315,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["referencedcolumnname",{"_index":2158,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["references",{"_index":2107,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["referencesexplorerservice",{"_index":1381,"title":{"injectables/ReferencesExplorerService.html":{}},"body":{"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedModule.html":{},"injectables/ReferencesExplorerService.html":{},"coverage.html":{},"overview.html":{}}}],["reflect",{"_index":2429,"title":{},"body":{"dependencies.html":{}}}],["reflect.definemetadata(`${post_key}_${event",{"_index":2627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect.definemetadata(`${pre_key}_${event",{"_index":2630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect.definemetadata(collection_key",{"_index":2650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect.getmetadata(`${post_key}_${event",{"_index":2617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect.getmetadata(`${pre_key}_${event",{"_index":2629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect.getmetadata(`${type}_${fn",{"_index":739,"title":{},"body":{"classes/BaseRepository.html":{}}}],["reflect.getmetadata(collection_key",{"_index":624,"title":{},"body":{"classes/BaseRepository.html":{}}}],["reflect.getmetadata(resolve_reference_metadata",{"_index":2115,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["reflect.getmetadata(resolver_type_metadata",{"_index":2116,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["reflector",{"_index":1551,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["region",{"_index":541,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["reject",{"_index":701,"title":{},"body":{"classes/BaseRepository.html":{},"classes/DatabaseClient.html":{},"classes/Deferred.html":{}}}],["reject(createerr",{"_index":715,"title":{},"body":{"classes/BaseRepository.html":{}}}],["reject(e",{"_index":1080,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["reject(indexerr",{"_index":735,"title":{},"body":{"classes/BaseRepository.html":{}}}],["reject(recreateerr",{"_index":734,"title":{},"body":{"classes/BaseRepository.html":{}}}],["relationname",{"_index":2146,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["relationname(propertyname",{"_index":2168,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["reloadpolicy",{"_index":1839,"title":{},"body":{"injectables/NestCasbinService.html":{}}}],["remotegraphqldatasource",{"_index":1521,"title":{},"body":{"classes/HeadersDatasource.html":{}}}],["remove",{"_index":218,"title":{},"body":{"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["removed",{"_index":1856,"title":{},"body":{"injectables/NestCasbinService.html":{}}}],["removepolicy",{"_index":1840,"title":{},"body":{"injectables/NestCasbinService.html":{}}}],["removepolicy(...params",{"_index":1849,"title":{},"body":{"injectables/NestCasbinService.html":{}}}],["removetempfield",{"_index":1403,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{}}}],["removetempfield(federatedschema",{"_index":1414,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{}}}],["replace",{"_index":415,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"classes/ConfigService.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["replicaname",{"_index":1879,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["replicaset",{"_index":1907,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["repo.interface.ts",{"_index":1595,"title":{},"body":{"interfaces/IAuthRepo.html":{},"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"coverage.html":{}}}],["repo.interface.ts:11",{"_index":1674,"title":{},"body":{"interfaces/IUserRepo.html":{}}}],["repo.interface.ts:15",{"_index":1600,"title":{},"body":{"interfaces/IAuthRepo.html":{},"interfaces/ITenantRepo.html":{}}}],["repo.interface.ts:17",{"_index":1673,"title":{},"body":{"interfaces/IUserRepo.html":{}}}],["repo.interface.ts:21",{"_index":1663,"title":{},"body":{"interfaces/ITenantRepo.html":{}}}],["repo.interface.ts:23",{"_index":1671,"title":{},"body":{"interfaces/IUserRepo.html":{}}}],["repo.interface.ts:27",{"_index":1666,"title":{},"body":{"interfaces/ITenantRepo.html":{}}}],["repo.interface.ts:29",{"_index":1676,"title":{},"body":{"interfaces/IUserRepo.html":{}}}],["repo.interface.ts:9",{"_index":1598,"title":{},"body":{"interfaces/IAuthRepo.html":{},"interfaces/ITenantRepo.html":{}}}],["repo.provider.ts",{"_index":2366,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["repository",{"_index":2438,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["repository.decorator.ts",{"_index":2321,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["repositorymodule",{"_index":317,"title":{"modules/RepositoryModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/RepositoryModule.html":{},"modules.html":{},"overview.html":{}}}],["repositoryservice",{"_index":2135,"title":{"injectables/RepositoryService.html":{}},"body":{"injectables/RepositoryService.html":{},"coverage.html":{}}}],["representation",{"_index":419,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["represents",{"_index":2653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/NestMultiTenantService.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["req.cookie",{"_index":2201,"title":{},"body":{"injectables/TenantMiddleware.html":{}}}],["req.limit",{"_index":656,"title":{},"body":{"classes/BaseRepository.html":{}}}],["req.projection",{"_index":650,"title":{},"body":{"classes/BaseRepository.html":{}}}],["req.skip",{"_index":654,"title":{},"body":{"classes/BaseRepository.html":{}}}],["req.sort",{"_index":652,"title":{},"body":{"classes/BaseRepository.html":{}}}],["req.subdomains.length",{"_index":2196,"title":{},"body":{"injectables/TenantMiddleware.html":{}}}],["req.subdomains[0",{"_index":2197,"title":{},"body":{"injectables/TenantMiddleware.html":{}}}],["req.tenantinfo",{"_index":1888,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["req.updates",{"_index":687,"title":{},"body":{"classes/BaseRepository.html":{}}}],["req.upsert",{"_index":688,"title":{},"body":{"classes/BaseRepository.html":{}}}],["request",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"classes/ContextProvider.html":{},"classes/HeadersDatasource.html":{},"injectables/NestMultiTenantService.html":{},"dependencies.html":{},"index.html":{}}}],["request.filter.ts",{"_index":1549,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["request.filter.ts:10",{"_index":1555,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["request.filter.ts:12",{"_index":1563,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["request.filter.ts:31",{"_index":1558,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["request.filter.ts:8",{"_index":1554,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["request.http.headers.set(key",{"_index":1536,"title":{},"body":{"classes/HeadersDatasource.html":{}}}],["requestcontext",{"_index":970,"title":{},"body":{"classes/ContextProvider.html":{}}}],["requestcontext.get(contextprovider._getkeywithnamespace(key",{"_index":971,"title":{},"body":{"classes/ContextProvider.html":{}}}],["requestcontext.middleware('request",{"_index":2639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestcontext.set(contextprovider._getkeywithnamespace(key",{"_index":972,"title":{},"body":{"classes/ContextProvider.html":{}}}],["required",{"_index":1785,"title":{},"body":{"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{}}}],["requirements",{"_index":2549,"title":{},"body":{"index.html":{}}}],["res",{"_index":664,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/TenantMiddleware.html":{},"miscellaneous/variables.html":{}}}],["res.header('x",{"_index":2634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res.ops[0",{"_index":667,"title":{},"body":{"classes/BaseRepository.html":{}}}],["res.value",{"_index":691,"title":{},"body":{"classes/BaseRepository.html":{}}}],["resave",{"_index":2671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CoreModule.html":{},"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{},"modules/NestCasbinModule.html":{},"modules/NestMultiTenantModule.html":{},"modules/NestjsEventStoreModule.html":{},"modules/ProjectModule.html":{},"modules/RepositoryModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolve",{"_index":700,"title":{},"body":{"classes/BaseRepository.html":{},"classes/Deferred.html":{}}}],["resolve(client",{"_index":1077,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["resolve(ourcollection",{"_index":736,"title":{},"body":{"classes/BaseRepository.html":{}}}],["resolve_reference_key",{"_index":2102,"title":{},"body":{"injectables/ReferencesExplorerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resolve_reference_metadata",{"_index":2103,"title":{},"body":{"injectables/ReferencesExplorerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resolvelinktos",{"_index":1156,"title":{},"body":{"injectables/EventStore.html":{},"interfaces/EventStoreOptionConfig.html":{}}}],["resolveproperty",{"_index":2030,"title":{},"body":{"classes/ProjectResolver.html":{}}}],["resolveproperty('owner",{"_index":2023,"title":{},"body":{"classes/ProjectResolver.html":{}}}],["resolver",{"_index":447,"title":{},"body":{"classes/AuthResolver.html":{},"classes/ProjectResolver.html":{},"injectables/ReferencesExplorerService.html":{},"classes/UserResolver.html":{},"index.html":{}}}],["resolver('authpayload",{"_index":452,"title":{},"body":{"classes/AuthResolver.html":{}}}],["resolver('project",{"_index":2033,"title":{},"body":{"classes/ProjectResolver.html":{}}}],["resolver('user",{"_index":2235,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolver.methodname",{"_index":2129,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["resolver_type_metadata",{"_index":2098,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["resolvereference",{"_index":2316,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["resolvermetadata",{"_index":2083,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["resolvers",{"_index":1388,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{},"injectables/ReferencesExplorerService.html":{}}}],["resolvers.reduce((prev",{"_index":1415,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{}}}],["resolversexplorerservice",{"_index":1378,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedModule.html":{}}}],["resolvertype",{"_index":1801,"title":{},"body":{"interfaces/MultiTenancyConfig.html":{},"injectables/ReferencesExplorerService.html":{},"interfaces/TenantInfo.html":{}}}],["resource",{"_index":2283,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["resource(options",{"_index":2493,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resource_definition",{"_index":2284,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["response",{"_index":1526,"title":{},"body":{"classes/HeadersDatasource.html":{},"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["response.data",{"_index":1239,"title":{},"body":{"injectables/EventStore.html":{}}}],["response.status(status).json",{"_index":2064,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["responsetype",{"_index":1234,"title":{},"body":{"injectables/EventStore.html":{}}}],["responsibility",{"_index":2508,"title":{},"body":{"index.html":{}}}],["responsible",{"_index":1197,"title":{},"body":{"injectables/EventStore.html":{}}}],["rest",{"_index":1446,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{}}}],["result",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"classes/AppError.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"classes/AppUtils.html":{},"controllers/AuthController.html":{},"classes/AuthCreatedEvent.html":{},"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedEvent.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthEntity.html":{},"classes/AuthExistHandler.html":{},"classes/AuthExistQuery.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"classes/AuthResolver.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatedEvent.html":{},"classes/AuthUpdatedHandler.html":{},"injectables/AwsS3Service.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"classes/BaseSearchDto.html":{},"interfaces/CollectionProps.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigService.html":{},"classes/ContextProvider.html":{},"injectables/CookieSerializer.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CreateAuthCommand.html":{},"classes/CreateAuthHandler.html":{},"interfaces/DBSource.html":{},"classes/DatabaseClient.html":{},"classes/Deferred.html":{},"interfaces/Document.html":{},"classes/DtoMapperUtils.html":{},"interfaces/EntityOptions.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/EventStore.html":{},"interfaces/EventStoreOptionConfig.html":{},"injectables/ExitInterceptor.html":{},"classes/FacebookAuth.html":{},"injectables/FacebookStrategy.html":{},"interfaces/FindRequest.html":{},"injectables/GeneratorService.html":{},"classes/GetAuthHandler.html":{},"classes/GetAuthQuery.html":{},"classes/GoogleAuth.html":{},"guards/GqlAuthGuard.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/GraphqlErrors.html":{},"classes/HeadersDatasource.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAuthRepo.html":{},"interfaces/IAwsConfigInterface.html":{},"interfaces/IConstraintErrors.html":{},"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IEventSourceConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IEventStoreMessage.html":{},"interfaces/IFile.html":{},"interfaces/IGosipConfig.html":{},"interfaces/IGosipConfig-1.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IServiceList.html":{},"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"interfaces/IndexDefinition.html":{},"classes/LocalAuth.html":{},"injectables/LocalStrategy.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"interfaces/MultiTenancyConfig.html":{},"interfaces/MultiTenantModuleOptions.html":{},"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"modules/NestMultiTenantModule.html":{},"injectables/NestMultiTenantService.html":{},"classes/NestStoreConfigProvider.html":{},"classes/NestjsEventStore.html":{},"modules/NestjsEventStoreModule.html":{},"injectables/NestjsEventStoreService.html":{},"classes/NotFoundError.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/Paginate.html":{},"classes/ProjectEntity.html":{},"modules/ProjectModule.html":{},"injectables/ProjectRepository.html":{},"classes/ProjectResolver.html":{},"classes/ProjectResponseDto.html":{},"injectables/ProjectService.html":{},"classes/QueryFailedFilter.html":{},"injectables/ReferencesExplorerService.html":{},"modules/RepositoryModule.html":{},"injectables/RepositoryService.html":{},"interfaces/ServiceListItem.html":{},"classes/SnakeNamingStrategy.html":{},"interfaces/TenantInfo.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"classes/UserResolver.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"classes/ValidationError.html":{},"injectables/ValidatorService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"classes/AppError.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"classes/AppUtils.html":{},"controllers/AuthController.html":{},"classes/AuthCreatedEvent.html":{},"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedEvent.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthEntity.html":{},"classes/AuthExistHandler.html":{},"classes/AuthExistQuery.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"classes/AuthResolver.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatedEvent.html":{},"classes/AuthUpdatedHandler.html":{},"injectables/AwsS3Service.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"classes/BaseSearchDto.html":{},"interfaces/CollectionProps.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigService.html":{},"classes/ContextProvider.html":{},"injectables/CookieSerializer.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CreateAuthCommand.html":{},"classes/CreateAuthHandler.html":{},"interfaces/DBSource.html":{},"classes/DatabaseClient.html":{},"classes/Deferred.html":{},"interfaces/Document.html":{},"classes/DtoMapperUtils.html":{},"interfaces/EntityOptions.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/EventStore.html":{},"interfaces/EventStoreOptionConfig.html":{},"injectables/ExitInterceptor.html":{},"classes/FacebookAuth.html":{},"injectables/FacebookStrategy.html":{},"interfaces/FindRequest.html":{},"injectables/GeneratorService.html":{},"classes/GetAuthHandler.html":{},"classes/GetAuthQuery.html":{},"classes/GoogleAuth.html":{},"guards/GqlAuthGuard.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/GraphqlErrors.html":{},"classes/HeadersDatasource.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAuthRepo.html":{},"interfaces/IAwsConfigInterface.html":{},"interfaces/IConstraintErrors.html":{},"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IEventSourceConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IEventStoreMessage.html":{},"interfaces/IFile.html":{},"interfaces/IGosipConfig.html":{},"interfaces/IGosipConfig-1.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IServiceList.html":{},"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"interfaces/IndexDefinition.html":{},"classes/LocalAuth.html":{},"injectables/LocalStrategy.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"interfaces/MultiTenancyConfig.html":{},"interfaces/MultiTenantModuleOptions.html":{},"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"modules/NestMultiTenantModule.html":{},"injectables/NestMultiTenantService.html":{},"classes/NestStoreConfigProvider.html":{},"classes/NestjsEventStore.html":{},"modules/NestjsEventStoreModule.html":{},"injectables/NestjsEventStoreService.html":{},"classes/NotFoundError.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/Paginate.html":{},"classes/ProjectEntity.html":{},"modules/ProjectModule.html":{},"injectables/ProjectRepository.html":{},"classes/ProjectResolver.html":{},"classes/ProjectResponseDto.html":{},"injectables/ProjectService.html":{},"classes/QueryFailedFilter.html":{},"injectables/ReferencesExplorerService.html":{},"modules/RepositoryModule.html":{},"injectables/RepositoryService.html":{},"interfaces/ServiceListItem.html":{},"classes/SnakeNamingStrategy.html":{},"interfaces/TenantInfo.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"classes/UserResolver.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"classes/ValidationError.html":{},"injectables/ValidatorService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results.push(await",{"_index":642,"title":{},"body":{"classes/BaseRepository.html":{}}}],["results.push(document",{"_index":660,"title":{},"body":{"classes/BaseRepository.html":{}}}],["retrieved",{"_index":2480,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retry",{"_index":1052,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["retry.operation",{"_index":1071,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["return",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"controllers/AuthController.html":{},"classes/AuthExistHandler.html":{},"guards/AuthGuard.html":{},"injectables/AuthRepository.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"classes/BaseSearchDto.html":{},"modules/CommonModule.html":{},"classes/ConfigService.html":{},"classes/ContextProvider.html":{},"classes/CreateAuthHandler.html":{},"classes/DatabaseClient.html":{},"classes/DtoMapperUtils.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/EventStore.html":{},"injectables/ExitInterceptor.html":{},"injectables/FacebookStrategy.html":{},"injectables/GeneratorService.html":{},"classes/GetAuthHandler.html":{},"guards/GqlAuthGuard.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/GraphqlErrors.html":{},"classes/HeadersDatasource.html":{},"injectables/LocalStrategy.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"modules/NestMultiTenantModule.html":{},"injectables/NestMultiTenantService.html":{},"classes/NestStoreConfigProvider.html":{},"classes/NestjsEventStore.html":{},"modules/NestjsEventStoreModule.html":{},"injectables/NestjsEventStoreService.html":{},"classes/PageOptionsDto.html":{},"injectables/ProjectRepository.html":{},"classes/ProjectResolver.html":{},"injectables/ReferencesExplorerService.html":{},"classes/SnakeNamingStrategy.html":{},"injectables/TenantRepository.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserRepository.html":{},"injectables/ValidatorService.html":{},"miscellaneous/variables.html":{}}}],["returnoriginal",{"_index":690,"title":{},"body":{"classes/BaseRepository.html":{}}}],["returns",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"controllers/AuthController.html":{},"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthEntity.html":{},"classes/AuthExistHandler.html":{},"guards/AuthGuard.html":{},"injectables/AuthRepository.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatedHandler.html":{},"injectables/AwsS3Service.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"classes/ConfigService.html":{},"classes/ContextProvider.html":{},"injectables/CookieSerializer.html":{},"classes/CreateAuthHandler.html":{},"classes/DatabaseClient.html":{},"classes/DtoMapperUtils.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/EventStore.html":{},"injectables/ExitInterceptor.html":{},"injectables/FacebookStrategy.html":{},"injectables/GeneratorService.html":{},"classes/GetAuthHandler.html":{},"guards/GqlAuthGuard.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/GraphqlErrors.html":{},"classes/HeadersDatasource.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAuthRepo.html":{},"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"injectables/LocalStrategy.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"interfaces/MongoOptionsFactory.html":{},"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"modules/NestMultiTenantModule.html":{},"injectables/NestMultiTenantService.html":{},"classes/NestjsEventStore.html":{},"modules/NestjsEventStoreModule.html":{},"classes/ProjectEntity.html":{},"injectables/ProjectRepository.html":{},"classes/ProjectResolver.html":{},"classes/QueryFailedFilter.html":{},"injectables/ReferencesExplorerService.html":{},"classes/SnakeNamingStrategy.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"injectables/ValidatorService.html":{},"miscellaneous/functions.html":{}}}],["reuse",{"_index":1789,"title":{},"body":{"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{}}}],["reverse",{"_index":420,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["rimraf",{"_index":2432,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":2543,"title":{},"body":{"index.html":{}}}],["rolling",{"_index":2672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":1129,"title":{},"body":{"interfaces/EntityOptions.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":2567,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["runtime",{"_index":2557,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":312,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/EventStore.html":{},"injectables/ExitInterceptor.html":{},"injectables/ReferencesExplorerService.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1140,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/ExitInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["s3.service",{"_index":859,"title":{},"body":{"modules/CommonModule.html":{}}}],["s3.service.ts",{"_index":514,"title":{},"body":{"injectables/AwsS3Service.html":{},"coverage.html":{}}}],["s3.service.ts:11",{"_index":520,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["s3.service.ts:14",{"_index":525,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["s3.service.ts:15",{"_index":526,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["s3.service.ts:34",{"_index":523,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["same",{"_index":784,"title":{},"body":{"interfaces/CollectionProps.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{}}}],["save",{"_index":349,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["save(cat",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["save(document",{"_index":411,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["saved",{"_index":1020,"title":{},"body":{"classes/CreateAuthHandler.html":{}}}],["saveuninitialized",{"_index":2673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scalable",{"_index":2516,"title":{},"body":{"index.html":{}}}],["scalarsexplorerservice",{"_index":1380,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedModule.html":{}}}],["scale",{"_index":2502,"title":{},"body":{"index.html":{}}}],["scanner",{"_index":1472,"title":{},"body":{"modules/GraphqlDistributedModule.html":{},"injectables/ReferencesExplorerService.html":{}}}],["schema",{"_index":1395,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedModule.html":{},"miscellaneous/functions.html":{}}}],["schemas",{"_index":1349,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["schemas/issues/155",{"_index":1361,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["scope",{"_index":1881,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["scope.request",{"_index":1882,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["sdk",{"_index":528,"title":{},"body":{"injectables/AwsS3Service.html":{},"dependencies.html":{}}}],["search.dto.ts",{"_index":747,"title":{},"body":{"classes/BaseSearchDto.html":{},"coverage.html":{}}}],["search.dto.ts:15",{"_index":754,"title":{},"body":{"classes/BaseSearchDto.html":{}}}],["search.dto.ts:17",{"_index":757,"title":{},"body":{"classes/BaseSearchDto.html":{}}}],["search.dto.ts:21",{"_index":759,"title":{},"body":{"classes/BaseSearchDto.html":{}}}],["search.dto.ts:9",{"_index":755,"title":{},"body":{"classes/BaseSearchDto.html":{}}}],["secondtablename",{"_index":2163,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["secret",{"_index":1808,"title":{},"body":{"interfaces/MultiTenancyConfig.html":{},"interfaces/TenantInfo.html":{},"miscellaneous/variables.html":{}}}],["secretaccesskey",{"_index":945,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IAwsConfigInterface.html":{}}}],["secretorprivatekey",{"_index":865,"title":{},"body":{"modules/CommonModule.html":{}}}],["secure",{"_index":2678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["security",{"_index":2546,"title":{},"body":{"index.html":{}}}],["see",{"_index":2621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["segregation",{"_index":2509,"title":{},"body":{"index.html":{}}}],["select",{"_index":791,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["selected",{"_index":815,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["sequence",{"_index":803,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["serializeuser",{"_index":977,"title":{},"body":{"injectables/CookieSerializer.html":{}}}],["serializeuser(user",{"_index":983,"title":{},"body":{"injectables/CookieSerializer.html":{}}}],["server",{"_index":1261,"title":{},"body":{"injectables/ExitInterceptor.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/GraphqlErrors.html":{},"classes/NotFoundError.html":{},"dependencies.html":{},"index.html":{}}}],["service",{"_index":1767,"title":{},"body":{"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{}}}],["servicelist",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IServiceList.html":{},"interfaces/ServiceListItem.html":{}}}],["servicelistitem",{"_index":1619,"title":{"interfaces/ServiceListItem.html":{}},"body":{"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IServiceList.html":{},"interfaces/ServiceListItem.html":{},"coverage.html":{}}}],["services",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedModule.html":{}}}],["services/aws",{"_index":858,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/config.service",{"_index":860,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/generator.service",{"_index":861,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/validator.service",{"_index":862,"title":{},"body":{"modules/CommonModule.html":{}}}],["session",{"_index":2392,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["session.app",{"_index":2679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sessionmiddleware",{"_index":2297,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":675,"title":{},"body":{"classes/BaseRepository.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"classes/ContextProvider.html":{},"classes/HeadersDatasource.html":{},"dependencies.html":{}}}],["set(key",{"_index":968,"title":{},"body":{"classes/ContextProvider.html":{}}}],["setcookie",{"_index":1529,"title":{},"body":{"classes/HeadersDatasource.html":{}}}],["setcookie.parse(response.headers.get('set",{"_index":1543,"title":{},"body":{"classes/HeadersDatasource.html":{}}}],["seteventhandlers",{"_index":1159,"title":{},"body":{"injectables/EventStore.html":{}}}],["seteventhandlers(eventhandlers",{"_index":1170,"title":{},"body":{"injectables/EventStore.html":{}}}],["settimeout",{"_index":137,"title":{},"body":{"classes/AppUtils.html":{}}}],["settings",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["setup",{"_index":1934,"title":{},"body":{"classes/NestjsEventStore.html":{}}}],["setupswagger",{"_index":2299,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupswagger(title",{"_index":2494,"title":{},"body":{"miscellaneous/functions.html":{}}}],["siblings",{"_index":2620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simply",{"_index":834,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["size",{"_index":708,"title":{},"body":{"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IFile.html":{},"interfaces/IndexDefinition.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{}}}],["skip",{"_index":751,"title":{},"body":{"classes/BaseSearchDto.html":{},"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"classes/PageOptionsDto.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{}}}],["slim",{"_index":2515,"title":{},"body":{"index.html":{}}}],["snakecase",{"_index":2173,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["snakecase(classname",{"_index":2175,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["snakecase(embeddedprefixes.join('_",{"_index":2176,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["snakecase(firsttablename",{"_index":2179,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["snakecase(parenttablename",{"_index":2182,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["snakecase(propertyname",{"_index":2177,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["snakecase(relationname",{"_index":2178,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["snakecase(tablename",{"_index":2181,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["snakenamingstrategy",{"_index":897,"title":{"classes/SnakeNamingStrategy.html":{}},"body":{"classes/ConfigService.html":{},"classes/SnakeNamingStrategy.html":{},"coverage.html":{}}}],["soft",{"_index":244,"title":{},"body":{"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["software",{"_index":2537,"title":{},"body":{"index.html":{}}}],["sort",{"_index":778,"title":{},"body":{"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{}}}],["sound",{"_index":461,"title":{},"body":{"classes/AuthResolver.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"classes/AppError.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"classes/AppUtils.html":{},"controllers/AuthController.html":{},"classes/AuthCreatedEvent.html":{},"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedEvent.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthEntity.html":{},"classes/AuthExistHandler.html":{},"classes/AuthExistQuery.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"classes/AuthResolver.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatedEvent.html":{},"classes/AuthUpdatedHandler.html":{},"injectables/AwsS3Service.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"classes/BaseSearchDto.html":{},"interfaces/CollectionProps.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigService.html":{},"classes/ContextProvider.html":{},"injectables/CookieSerializer.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CreateAuthCommand.html":{},"classes/CreateAuthHandler.html":{},"interfaces/DBSource.html":{},"classes/DatabaseClient.html":{},"classes/Deferred.html":{},"interfaces/Document.html":{},"classes/DtoMapperUtils.html":{},"interfaces/EntityOptions.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/EventStore.html":{},"interfaces/EventStoreOptionConfig.html":{},"injectables/ExitInterceptor.html":{},"classes/FacebookAuth.html":{},"injectables/FacebookStrategy.html":{},"interfaces/FindRequest.html":{},"injectables/GeneratorService.html":{},"classes/GetAuthHandler.html":{},"classes/GetAuthQuery.html":{},"classes/GoogleAuth.html":{},"guards/GqlAuthGuard.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/GraphqlErrors.html":{},"classes/HeadersDatasource.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAuthRepo.html":{},"interfaces/IAwsConfigInterface.html":{},"interfaces/IConstraintErrors.html":{},"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IEventSourceConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IEventStoreMessage.html":{},"interfaces/IFile.html":{},"interfaces/IGosipConfig.html":{},"interfaces/IGosipConfig-1.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IServiceList.html":{},"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"interfaces/IndexDefinition.html":{},"classes/LocalAuth.html":{},"injectables/LocalStrategy.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"interfaces/MultiTenancyConfig.html":{},"interfaces/MultiTenantModuleOptions.html":{},"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"modules/NestMultiTenantModule.html":{},"injectables/NestMultiTenantService.html":{},"classes/NestStoreConfigProvider.html":{},"classes/NestjsEventStore.html":{},"modules/NestjsEventStoreModule.html":{},"injectables/NestjsEventStoreService.html":{},"classes/NotFoundError.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/Paginate.html":{},"classes/ProjectEntity.html":{},"modules/ProjectModule.html":{},"injectables/ProjectRepository.html":{},"classes/ProjectResolver.html":{},"classes/ProjectResponseDto.html":{},"injectables/ProjectService.html":{},"classes/QueryFailedFilter.html":{},"injectables/ReferencesExplorerService.html":{},"modules/RepositoryModule.html":{},"injectables/RepositoryService.html":{},"interfaces/ServiceListItem.html":{},"classes/SnakeNamingStrategy.html":{},"interfaces/TenantInfo.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"classes/UserResolver.html":{},"classes/UserResponseDto.html":{},"injectables/UserService.html":{},"classes/ValidationError.html":{},"injectables/ValidatorService.html":{},"coverage.html":{},"index.html":{}}}],["sourcing",{"_index":2539,"title":{},"body":{"index.html":{}}}],["spatial",{"_index":837,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["spatialfeaturetype",{"_index":843,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["spec",{"_index":1083,"title":{},"body":{"classes/Deferred.html":{}}}],["specific",{"_index":788,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["specified",{"_index":835,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"interfaces/EntityOptions.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{}}}],["specifies",{"_index":800,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["stack",{"_index":2550,"title":{},"body":{"index.html":{}}}],["start",{"_index":2568,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":2571,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":2572,"title":{},"body":{"index.html":{}}}],["started",{"_index":2499,"title":{"index.html":{}},"body":{}}],["stateful",{"_index":2538,"title":{},"body":{"index.html":{}}}],["statements",{"_index":2265,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":128,"title":{},"body":{"classes/AppUtils.html":{},"classes/ContextProvider.html":{},"classes/DtoMapperUtils.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/GraphqlErrors.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"modules/NestCasbinModule.html":{},"modules/NestMultiTenantModule.html":{},"modules/NestjsEventStoreModule.html":{}}}],["status",{"_index":2059,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["status(statuscode",{"_index":1578,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["status_codes",{"_index":2053,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["status_codes[status",{"_index":2065,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["statuscode",{"_index":1568,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["storage",{"_index":2389,"title":{},"body":{"dependencies.html":{}}}],["store",{"_index":1179,"title":{},"body":{"injectables/EventStore.html":{},"interfaces/EventStoreOptionConfig.html":{},"interfaces/IAuthRepo.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IGosipConfig-1.html":{},"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"classes/NestStoreConfigProvider.html":{},"classes/NestjsEventStore.html":{},"modules/NestjsEventStoreModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["store(authentity",{"_index":1599,"title":{},"body":{"interfaces/IAuthRepo.html":{}}}],["store(tenant",{"_index":1664,"title":{},"body":{"interfaces/ITenantRepo.html":{}}}],["store(userentity",{"_index":1675,"title":{},"body":{"interfaces/IUserRepo.html":{}}}],["store.class",{"_index":1957,"title":{},"body":{"injectables/NestjsEventStoreService.html":{}}}],["store.class.ts",{"_index":1918,"title":{},"body":{"classes/NestjsEventStore.html":{},"coverage.html":{}}}],["store.class.ts:16",{"_index":1924,"title":{},"body":{"classes/NestjsEventStore.html":{}}}],["store.class.ts:22",{"_index":1925,"title":{},"body":{"classes/NestjsEventStore.html":{}}}],["store.class.ts:26",{"_index":1927,"title":{},"body":{"classes/NestjsEventStore.html":{}}}],["store.class.ts:30",{"_index":1922,"title":{},"body":{"classes/NestjsEventStore.html":{}}}],["store.class.ts:6",{"_index":1929,"title":{},"body":{"classes/NestjsEventStore.html":{}}}],["store.class.ts:7",{"_index":1921,"title":{},"body":{"classes/NestjsEventStore.html":{}}}],["store.constant",{"_index":1183,"title":{},"body":{"injectables/EventStore.html":{},"modules/NestjsEventStoreModule.html":{},"injectables/NestjsEventStoreService.html":{}}}],["store.constant.ts",{"_index":2355,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["store.interface.ts",{"_index":1629,"title":{},"body":{"interfaces/IEventStoreMessage.html":{},"coverage.html":{}}}],["store.module.ts",{"_index":1946,"title":{},"body":{"modules/NestjsEventStoreModule.html":{}}}],["store.module.ts:14",{"_index":1950,"title":{},"body":{"modules/NestjsEventStoreModule.html":{}}}],["store.module.ts:28",{"_index":1948,"title":{},"body":{"modules/NestjsEventStoreModule.html":{}}}],["store.service",{"_index":1951,"title":{},"body":{"modules/NestjsEventStoreModule.html":{}}}],["store.service.ts",{"_index":1955,"title":{},"body":{"injectables/NestjsEventStoreService.html":{},"coverage.html":{}}}],["store.service.ts:6",{"_index":1956,"title":{},"body":{"injectables/NestjsEventStoreService.html":{}}}],["store.ts",{"_index":1152,"title":{},"body":{"injectables/EventStore.html":{},"coverage.html":{}}}],["store.ts:108",{"_index":1171,"title":{},"body":{"injectables/EventStore.html":{}}}],["store.ts:17",{"_index":1174,"title":{},"body":{"injectables/EventStore.html":{}}}],["store.ts:18",{"_index":1173,"title":{},"body":{"injectables/EventStore.html":{}}}],["store.ts:19",{"_index":1172,"title":{},"body":{"injectables/EventStore.html":{}}}],["store.ts:20",{"_index":1175,"title":{},"body":{"injectables/EventStore.html":{}}}],["store.ts:21",{"_index":1164,"title":{},"body":{"injectables/EventStore.html":{}}}],["store.ts:37",{"_index":1169,"title":{},"body":{"injectables/EventStore.html":{}}}],["store.ts:60",{"_index":1167,"title":{},"body":{"injectables/EventStore.html":{}}}],["store/src/contract/event",{"_index":1624,"title":{},"body":{"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IGosipConfig-1.html":{},"coverage.html":{}}}],["store/src/contract/nestjs",{"_index":1628,"title":{},"body":{"interfaces/IEventStoreMessage.html":{},"coverage.html":{}}}],["store/src/event",{"_index":1151,"title":{},"body":{"injectables/EventStore.html":{},"interfaces/EventStoreOptionConfig.html":{},"coverage.html":{}}}],["store/src/nestjs",{"_index":1909,"title":{},"body":{"classes/NestStoreConfigProvider.html":{},"classes/NestjsEventStore.html":{},"modules/NestjsEventStoreModule.html":{},"injectables/NestjsEventStoreService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["str",{"_index":2489,"title":{},"body":{"miscellaneous/functions.html":{}}}],["strategies/snake",{"_index":898,"title":{},"body":{"classes/ConfigService.html":{}}}],["strategy",{"_index":326,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/EntityOptions.html":{},"injectables/FacebookStrategy.html":{},"index.html":{}}}],["stream",{"_index":1220,"title":{},"body":{"injectables/EventStore.html":{}}}],["stream.on('data",{"_index":1241,"title":{},"body":{"injectables/EventStore.html":{}}}],["stream.on('end",{"_index":1243,"title":{},"body":{"injectables/EventStore.html":{}}}],["streamid",{"_index":1634,"title":{},"body":{"interfaces/IEventStoreMessage.html":{}}}],["streamname",{"_index":1214,"title":{},"body":{"injectables/EventStore.html":{}}}],["strict",{"_index":704,"title":{},"body":{"classes/BaseRepository.html":{}}}],["string",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{},"classes/AppError.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{},"classes/AuthDeletedEvent.html":{},"classes/AuthEntity.html":{},"injectables/AuthRepository.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"classes/BaseSearchDto.html":{},"interfaces/CollectionProps.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"classes/ConfigService.html":{},"classes/ContextProvider.html":{},"interfaces/DBSource.html":{},"classes/DatabaseClient.html":{},"interfaces/Document.html":{},"classes/DtoMapperUtils.html":{},"interfaces/EntityOptions.html":{},"injectables/EventStore.html":{},"interfaces/EventStoreOptionConfig.html":{},"classes/FacebookAuth.html":{},"injectables/FacebookStrategy.html":{},"interfaces/FindRequest.html":{},"injectables/GeneratorService.html":{},"classes/GoogleAuth.html":{},"injectables/GraphQLTypesLoader.html":{},"classes/GraphqlErrors.html":{},"interfaces/IAwsConfigInterface.html":{},"interfaces/IConstraintErrors.html":{},"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IEventSourceConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IEventStoreMessage.html":{},"interfaces/IFile.html":{},"interfaces/IGosipConfig.html":{},"interfaces/IGosipConfig-1.html":{},"interfaces/IServiceList.html":{},"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"interfaces/IndexDefinition.html":{},"classes/LocalAuth.html":{},"injectables/LocalStrategy.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"interfaces/MultiTenancyConfig.html":{},"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"injectables/NestMultiTenantService.html":{},"classes/NestjsEventStore.html":{},"classes/NotFoundError.html":{},"classes/PageOptionsDto.html":{},"classes/ProjectEntity.html":{},"injectables/ProjectRepository.html":{},"classes/ProjectResolver.html":{},"classes/ProjectResponseDto.html":{},"injectables/ReferencesExplorerService.html":{},"interfaces/ServiceListItem.html":{},"classes/SnakeNamingStrategy.html":{},"interfaces/TenantInfo.html":{},"injectables/TenantRepository.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{},"classes/ValidationError.html":{},"injectables/ValidatorService.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":906,"title":{},"body":{"classes/ConfigService.html":{}}}],["string|number",{"_index":827,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["strip",{"_index":417,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["subject",{"_index":1166,"title":{},"body":{"injectables/EventStore.html":{}}}],["subject.next(event",{"_index":1230,"title":{},"body":{"injectables/EventStore.html":{}}}],["subscribed",{"_index":1192,"title":{},"body":{"injectables/EventStore.html":{}}}],["subscribers",{"_index":932,"title":{},"body":{"classes/ConfigService.html":{}}}],["subscribers/**{.ts,.js",{"_index":933,"title":{},"body":{"classes/ConfigService.html":{}}}],["subscribes",{"_index":1219,"title":{},"body":{"injectables/EventStore.html":{}}}],["subscription",{"_index":1248,"title":{},"body":{"injectables/EventStore.html":{}}}],["subscriptions",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphqlDistributedModule.html":{}}}],["substr(0",{"_index":1123,"title":{},"body":{"classes/DtoMapperUtils.html":{}}}],["success",{"_index":474,"title":{},"body":{"classes/AuthResolver.html":{}}}],["successredirect",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{}}}],["such",{"_index":1765,"title":{},"body":{"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{}}}],["super",{"_index":433,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/DatabaseClient.html":{},"injectables/FacebookStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/ProjectRepository.html":{},"injectables/ReferencesExplorerService.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["super(message",{"_index":60,"title":{},"body":{"classes/AppError.html":{},"classes/NotFoundError.html":{}}}],["super(messages",{"_index":2248,"title":{},"body":{"classes/ValidationError.html":{}}}],["super.didreceiveresponse(response",{"_index":1540,"title":{},"body":{"classes/HeadersDatasource.html":{}}}],["supplies",{"_index":1786,"title":{},"body":{"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{}}}],["support",{"_index":904,"title":{},"body":{"classes/ConfigService.html":{},"modules/GraphqlDistributedModule.html":{},"modules.html":{}}}],["supported",{"_index":795,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["supporttenant",{"_index":771,"title":{},"body":{"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{}}}],["svg",{"_index":2585,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":2410,"title":{},"body":{"dependencies.html":{}}}],["swaggerbaseconfig",{"_index":2497,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sweat",{"_index":2637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol('distributed_gateway_build_service",{"_index":2646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol('distributed_gateway_options",{"_index":2647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol('resolve_reference_metadata",{"_index":2648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":929,"title":{},"body":{"classes/ConfigService.html":{}}}],["synchronously",{"_index":1761,"title":{},"body":{"modules/MongoModule.html":{}}}],["syntax",{"_index":1585,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["system",{"_index":2556,"title":{},"body":{"index.html":{}}}],["t",{"_index":361,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"classes/ContextProvider.html":{},"classes/DtoMapperUtils.html":{},"injectables/EventStore.html":{},"injectables/ProjectRepository.html":{},"injectables/ReferencesExplorerService.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["table",{"_index":2375,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tablename",{"_index":2147,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["tablename(classname",{"_index":2170,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2374,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":2495,"title":{},"body":{"miscellaneous/functions.html":{}}}],["take",{"_index":752,"title":{},"body":{"classes/BaseSearchDto.html":{},"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["target",{"_index":2247,"title":{},"body":{"classes/ValidationError.html":{},"miscellaneous/variables.html":{}}}],["target.prototype",{"_index":2651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target[name",{"_index":2626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tcp",{"_index":1626,"title":{},"body":{"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IGosipConfig-1.html":{}}}],["tcpclient",{"_index":1930,"title":{},"body":{"classes/NestjsEventStore.html":{}}}],["tcpclient(config",{"_index":1938,"title":{},"body":{"classes/NestjsEventStore.html":{}}}],["tears",{"_index":2638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tears.middleware.ts",{"_index":2287,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["temp",{"_index":1018,"title":{},"body":{"classes/CreateAuthHandler.html":{},"injectables/EventStore.html":{}}}],["temp.content.data",{"_index":1245,"title":{},"body":{"injectables/EventStore.html":{}}}],["temp.content.eventtype",{"_index":1246,"title":{},"body":{"injectables/EventStore.html":{}}}],["temp.util",{"_index":1405,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{}}}],["temp__",{"_index":1363,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["temporary",{"_index":1358,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["temptype",{"_index":1362,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["tenancy",{"_index":1130,"title":{},"body":{"interfaces/EntityOptions.html":{},"injectables/TenantMiddleware.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tenant",{"_index":264,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthRepository.html":{},"classes/BaseEntity.html":{},"interfaces/ITenantRepo.html":{},"interfaces/MultiTenancyConfig.html":{},"interfaces/MultiTenantModuleOptions.html":{},"modules/NestMultiTenantModule.html":{},"injectables/ProjectRepository.html":{},"interfaces/TenantInfo.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{},"coverage.html":{}}}],["tenant.enum",{"_index":1804,"title":{},"body":{"interfaces/MultiTenancyConfig.html":{},"interfaces/TenantInfo.html":{}}}],["tenant.id",{"_index":2195,"title":{},"body":{"injectables/TenantMiddleware.html":{}}}],["tenant.module",{"_index":1717,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["tenant.module.ts",{"_index":1868,"title":{},"body":{"modules/NestMultiTenantModule.html":{}}}],["tenant.module.ts:13",{"_index":1869,"title":{},"body":{"modules/NestMultiTenantModule.html":{}}}],["tenant.service",{"_index":1719,"title":{},"body":{"modules/MongoCoreModule.html":{},"modules/NestMultiTenantModule.html":{}}}],["tenant.service.ts",{"_index":1872,"title":{},"body":{"injectables/NestMultiTenantService.html":{},"coverage.html":{}}}],["tenant.service.ts:14",{"_index":1876,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["tenant.service.ts:76",{"_index":1880,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["tenant.service.ts:8",{"_index":1875,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["tenant/database",{"_index":330,"title":{},"body":{"modules/AuthModule.html":{}}}],["tenant/database/mongo/decorators/entity.decorator",{"_index":265,"title":{},"body":{"classes/AuthEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["tenant/interfaces/multi",{"_index":1870,"title":{},"body":{"modules/NestMultiTenantModule.html":{}}}],["tenant/nest",{"_index":1716,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["tenant/src/database/mongo/decorators/entity",{"_index":2320,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tenant/src/database/mongo/decorators/entity.decorator.ts",{"_index":2323,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tenant/src/database/mongo/decorators/hooks.decorator.ts",{"_index":2324,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tenant/src/database/mongo/decorators/mongo.decorator.ts",{"_index":2325,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tenant/src/database/mongo/decorators/object",{"_index":2328,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tenant/src/database/mongo/interfaces/column",{"_index":786,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"coverage.html":{}}}],["tenant/src/database/mongo/interfaces/entity",{"_index":1126,"title":{},"body":{"interfaces/EntityOptions.html":{},"coverage.html":{}}}],["tenant/src/database/mongo/interfaces/mongo",{"_index":1778,"title":{},"body":{"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"coverage.html":{}}}],["tenant/src/database/mongo/interfaces/types.interface.ts",{"_index":770,"title":{},"body":{"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tenant/src/database/mongo/interfaces/types.interface.ts:47",{"_index":1094,"title":{},"body":{"interfaces/Document.html":{}}}],["tenant/src/database/mongo/mongo",{"_index":1689,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["tenant/src/database/mongo/mongo.client.ts",{"_index":1030,"title":{},"body":{"classes/DatabaseClient.html":{},"coverage.html":{}}}],["tenant/src/database/mongo/mongo.client.ts:11",{"_index":1043,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["tenant/src/database/mongo/mongo.client.ts:12",{"_index":1042,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["tenant/src/database/mongo/mongo.client.ts:13",{"_index":1038,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["tenant/src/database/mongo/mongo.client.ts:36",{"_index":1048,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["tenant/src/database/mongo/mongo.client.ts:53",{"_index":1044,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["tenant/src/database/mongo/mongo.client.ts:67",{"_index":1051,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["tenant/src/database/mongo/mongo.client.ts:8",{"_index":1039,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["tenant/src/database/mongo/mongo.client.ts:9",{"_index":1040,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["tenant/src/database/mongo/mongo.constants.ts",{"_index":2338,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tenant/src/database/mongo/mongo.module.ts",{"_index":1751,"title":{},"body":{"modules/MongoModule.html":{}}}],["tenant/src/database/mongo/mongo.module.ts:20",{"_index":1760,"title":{},"body":{"modules/MongoModule.html":{}}}],["tenant/src/database/mongo/mongo.module.ts:39",{"_index":1762,"title":{},"body":{"modules/MongoModule.html":{}}}],["tenant/src/database/mongo/mongo.module.ts:52",{"_index":1756,"title":{},"body":{"modules/MongoModule.html":{}}}],["tenant/src/database/mongo/mongo.provider.ts",{"_index":2342,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tenant/src/database/mongo/mongo.util.ts",{"_index":2343,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tenant/src/database/mongo/repository/base.repository.ts",{"_index":598,"title":{},"body":{"classes/BaseRepository.html":{},"coverage.html":{}}}],["tenant/src/database/mongo/repository/base.repository.ts:10",{"_index":601,"title":{},"body":{"classes/BaseRepository.html":{}}}],["tenant/src/database/mongo/repository/base.repository.ts:126",{"_index":606,"title":{},"body":{"classes/BaseRepository.html":{}}}],["tenant/src/database/mongo/repository/base.repository.ts:146",{"_index":619,"title":{},"body":{"classes/BaseRepository.html":{}}}],["tenant/src/database/mongo/repository/base.repository.ts:181",{"_index":616,"title":{},"body":{"classes/BaseRepository.html":{}}}],["tenant/src/database/mongo/repository/base.repository.ts:196",{"_index":615,"title":{},"body":{"classes/BaseRepository.html":{}}}],["tenant/src/database/mongo/repository/base.repository.ts:21",{"_index":605,"title":{},"body":{"classes/BaseRepository.html":{}}}],["tenant/src/database/mongo/repository/base.repository.ts:218",{"_index":609,"title":{},"body":{"classes/BaseRepository.html":{}}}],["tenant/src/database/mongo/repository/base.repository.ts:229",{"_index":608,"title":{},"body":{"classes/BaseRepository.html":{}}}],["tenant/src/database/mongo/repository/base.repository.ts:246",{"_index":607,"title":{},"body":{"classes/BaseRepository.html":{}}}],["tenant/src/database/mongo/repository/base.repository.ts:265",{"_index":620,"title":{},"body":{"classes/BaseRepository.html":{}}}],["tenant/src/database/mongo/repository/base.repository.ts:286",{"_index":617,"title":{},"body":{"classes/BaseRepository.html":{}}}],["tenant/src/database/mongo/repository/base.repository.ts:344",{"_index":618,"title":{},"body":{"classes/BaseRepository.html":{}}}],["tenant/src/database/mongo/repository/base.repository.ts:358",{"_index":610,"title":{},"body":{"classes/BaseRepository.html":{}}}],["tenant/src/database/mongo/repository/base.repository.ts:36",{"_index":612,"title":{},"body":{"classes/BaseRepository.html":{}}}],["tenant/src/database/mongo/repository/base.repository.ts:47",{"_index":613,"title":{},"body":{"classes/BaseRepository.html":{}}}],["tenant/src/database/mongo/repository/base.repository.ts:67",{"_index":614,"title":{},"body":{"classes/BaseRepository.html":{}}}],["tenant/src/database/mongo/repository/base.repository.ts:85",{"_index":611,"title":{},"body":{"classes/BaseRepository.html":{}}}],["tenant/src/database/mongo/repository/base.repository.ts:9",{"_index":604,"title":{},"body":{"classes/BaseRepository.html":{}}}],["tenant/src/interfaces/multi",{"_index":1810,"title":{},"body":{"interfaces/MultiTenantModuleOptions.html":{},"coverage.html":{}}}],["tenant/src/interfaces/tenant",{"_index":1798,"title":{},"body":{"interfaces/MultiTenancyConfig.html":{},"interfaces/TenantInfo.html":{},"coverage.html":{}}}],["tenant/src/middleware/multi",{"_index":2348,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["tenant/src/middleware/tenant.middleware.ts",{"_index":2184,"title":{},"body":{"injectables/TenantMiddleware.html":{},"coverage.html":{}}}],["tenant/src/middleware/tenant.middleware.ts:12",{"_index":2187,"title":{},"body":{"injectables/TenantMiddleware.html":{}}}],["tenant/src/middleware/tenant.middleware.ts:7",{"_index":2185,"title":{},"body":{"injectables/TenantMiddleware.html":{}}}],["tenant/src/nest",{"_index":1867,"title":{},"body":{"modules/NestMultiTenantModule.html":{},"injectables/NestMultiTenantService.html":{},"coverage.html":{}}}],["tenant/src/tenant.constant.ts",{"_index":2351,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tenant/src/tenant.enum.ts",{"_index":2455,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tenant/src/utils/deferred.ts",{"_index":1081,"title":{},"body":{"classes/Deferred.html":{},"coverage.html":{}}}],["tenant/src/utils/deferred.ts:10",{"_index":1088,"title":{},"body":{"classes/Deferred.html":{}}}],["tenant/src/utils/deferred.ts:11",{"_index":1087,"title":{},"body":{"classes/Deferred.html":{}}}],["tenant/src/utils/deferred.ts:12",{"_index":1086,"title":{},"body":{"classes/Deferred.html":{}}}],["tenantdatabasestrategy",{"_index":1802,"title":{},"body":{"interfaces/MultiTenancyConfig.html":{},"injectables/NestMultiTenantService.html":{},"interfaces/TenantInfo.html":{},"miscellaneous/enumerations.html":{}}}],["tenantdatabasestrategy.both",{"_index":1903,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["tenantdatabasestrategy.databaseisolation",{"_index":1900,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["tenantinfo",{"_index":1805,"title":{"interfaces/TenantInfo.html":{}},"body":{"interfaces/MultiTenancyConfig.html":{},"injectables/NestMultiTenantService.html":{},"interfaces/TenantInfo.html":{},"coverage.html":{}}}],["tenantinfo.config.databasestrategy",{"_index":1899,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["tenantinfo.config.enabled",{"_index":1894,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["tenantinfo.connectionstring",{"_index":1901,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["tenantinfo.tenant",{"_index":1897,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["tenantmiddleware",{"_index":2183,"title":{"injectables/TenantMiddleware.html":{}},"body":{"injectables/TenantMiddleware.html":{},"coverage.html":{}}}],["tenantnamespace",{"_index":2189,"title":{},"body":{"injectables/TenantMiddleware.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tenantnamespace.run",{"_index":2198,"title":{},"body":{"injectables/TenantMiddleware.html":{}}}],["tenantnamespace.set('tenant",{"_index":2199,"title":{},"body":{"injectables/TenantMiddleware.html":{}}}],["tenantrepository",{"_index":2202,"title":{"injectables/TenantRepository.html":{}},"body":{"injectables/TenantRepository.html":{},"coverage.html":{}}}],["tenantresolvertype",{"_index":1803,"title":{},"body":{"interfaces/MultiTenancyConfig.html":{},"interfaces/TenantInfo.html":{},"injectables/TenantMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["tenantresolvertype.cookie",{"_index":2200,"title":{},"body":{"injectables/TenantMiddleware.html":{}}}],["tenantresolvertype.domain",{"_index":2194,"title":{},"body":{"injectables/TenantMiddleware.html":{}}}],["tenants",{"_index":2529,"title":{},"body":{"index.html":{}}}],["test",{"_index":1892,"title":{},"body":{"injectables/NestMultiTenantService.html":{},"index.html":{}}}],["test:covsystem",{"_index":2577,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":2576,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2574,"title":{},"body":{"index.html":{}}}],["then((response",{"_index":1238,"title":{},"body":{"injectables/EventStore.html":{}}}],["this._s3",{"_index":549,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["this._s3.putobject",{"_index":555,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["this._validationfilter(validationerror.children",{"_index":1592,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["this._validationfilter(validationerrors",{"_index":1576,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["this.apolloserver",{"_index":1447,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{}}}],["this.apolloserver.applymiddleware",{"_index":1448,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{}}}],["this.apolloserver.installsubscriptionhandlers",{"_index":1449,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{}}}],["this.appservice.gethello",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppController-1.html":{},"controllers/AppController-2.html":{},"controllers/AppController-3.html":{}}}],["this.authrepository.create",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authrepository.create(classtoplain(auth",{"_index":1019,"title":{},"body":{"classes/CreateAuthHandler.html":{}}}],["this.authrepository.exist(localauth",{"_index":295,"title":{},"body":{"classes/AuthExistHandler.html":{}}}],["this.authrepository.findone",{"_index":1311,"title":{},"body":{"classes/GetAuthHandler.html":{}}}],["this.authrepository.store(temp",{"_index":1021,"title":{},"body":{"classes/CreateAuthHandler.html":{}}}],["this.authservice.create",{"_index":459,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authservice.validateuser(email",{"_index":1297,"title":{},"body":{"injectables/FacebookStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["this.category",{"_index":1202,"title":{},"body":{"injectables/EventStore.html":{}}}],["this.client",{"_index":1057,"title":{},"body":{"classes/DatabaseClient.html":{},"classes/NestjsEventStore.html":{}}}],["this.client).db",{"_index":1067,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["this.client.close",{"_index":1940,"title":{},"body":{"classes/NestjsEventStore.html":{}}}],["this.collection",{"_index":633,"title":{},"body":{"classes/BaseRepository.html":{}}}],["this.configservice.awss3config.bucketname",{"_index":557,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["this.context",{"_index":1885,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["this.context.req",{"_index":1886,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["this.createasyncoptionsprovider(options",{"_index":1491,"title":{},"body":{"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{}}}],["this.createasyncproviders(options",{"_index":1488,"title":{},"body":{"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{}}}],["this.createcontextcallback",{"_index":2126,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["this.createdat",{"_index":569,"title":{},"body":{"classes/BaseDto.html":{},"classes/BaseEntity.html":{}}}],["this.db",{"_index":1060,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["this.dbsource.db",{"_index":702,"title":{},"body":{"classes/BaseRepository.html":{}}}],["this.deferredclient",{"_index":1056,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["this.deferredclient.promise",{"_index":1058,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["this.deferredclient.resolve(client",{"_index":1064,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["this.deferredclient.resolve(this.createclient(this.uri",{"_index":1065,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["this.deferreddb",{"_index":1059,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["this.deferreddb.promise",{"_index":1061,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["this.deferreddb.resolve((await",{"_index":1066,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["this.deleted",{"_index":596,"title":{},"body":{"classes/BaseEntity.html":{}}}],["this.deletedat",{"_index":595,"title":{},"body":{"classes/BaseEntity.html":{}}}],["this.deleteone",{"_index":692,"title":{},"body":{"classes/BaseRepository.html":{}}}],["this.emit('connected",{"_index":1076,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["this.emit('error",{"_index":1079,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["this.enforcer.addpolicy(...params",{"_index":1854,"title":{},"body":{"injectables/NestCasbinService.html":{}}}],["this.enforcer.enforce(params",{"_index":1863,"title":{},"body":{"injectables/NestCasbinService.html":{}}}],["this.enforcer.getadapter().enforce",{"_index":1862,"title":{},"body":{"injectables/NestCasbinService.html":{}}}],["this.enforcer.loadpolicy",{"_index":1852,"title":{},"body":{"injectables/NestCasbinService.html":{}}}],["this.enforcer.removepolicy(...params",{"_index":1857,"title":{},"body":{"injectables/NestCasbinService.html":{}}}],["this.enforcer.savepolicy",{"_index":1855,"title":{},"body":{"injectables/NestCasbinService.html":{}}}],["this.esconfig",{"_index":1916,"title":{},"body":{"classes/NestStoreConfigProvider.html":{}}}],["this.eventfactory",{"_index":1937,"title":{},"body":{"classes/NestjsEventStore.html":{}}}],["this.eventfactory.newevent(name",{"_index":1939,"title":{},"body":{"classes/NestjsEventStore.html":{}}}],["this.eventhandlers",{"_index":1252,"title":{},"body":{"injectables/EventStore.html":{}}}],["this.eventhandlers[eventtype](...object.values(data",{"_index":1229,"title":{},"body":{"injectables/EventStore.html":{}}}],["this.eventstore",{"_index":1206,"title":{},"body":{"injectables/EventStore.html":{}}}],["this.eventstore.client.subscribetostream(streamname",{"_index":1251,"title":{},"body":{"injectables/EventStore.html":{}}}],["this.eventstore.client.writeevent(streamname",{"_index":1216,"title":{},"body":{"injectables/EventStore.html":{}}}],["this.eventstore.connect(configservice.tcp",{"_index":1207,"title":{},"body":{"injectables/EventStore.html":{}}}],["this.eventstorehosturl",{"_index":1208,"title":{},"body":{"injectables/EventStore.html":{}}}],["this.eventstorehosturl}${event.metadata.$o}/${event.data.split('@')[0]}?embed=body",{"_index":1232,"title":{},"body":{"injectables/EventStore.html":{}}}],["this.extendresolvers",{"_index":1407,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{}}}],["this.externalcontextcreator.create",{"_index":2127,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["this.filterreferences(wrapper",{"_index":2110,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["this.findone",{"_index":635,"title":{},"body":{"classes/BaseRepository.html":{}}}],["this.findoneandupdate",{"_index":686,"title":{},"body":{"classes/BaseRepository.html":{}}}],["this.flatmap(modules",{"_index":2108,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["this.generatemongoconnectionstring",{"_index":1896,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["this.generatorservice.filename(mime.extension(file.mimetype",{"_index":552,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["this.get('aws_s3_access_key_id",{"_index":944,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('aws_s3_secret_access_key",{"_index":946,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('cock_database",{"_index":928,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('cock_host",{"_index":922,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('cock_password",{"_index":927,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('cock_username",{"_index":926,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('database_type",{"_index":919,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('drop_db",{"_index":936,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('es_hostname",{"_index":950,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('es_password",{"_index":954,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('es_protocol",{"_index":953,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('es_username",{"_index":955,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('node_env",{"_index":913,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('redis_host",{"_index":941,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.get('s3_bucket_name",{"_index":948,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getcollection",{"_index":634,"title":{},"body":{"classes/BaseRepository.html":{}}}],["this.getmodules",{"_index":2104,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["this.getnumber('cock_port",{"_index":924,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getnumber('es_pool_max",{"_index":957,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getnumber('es_pool_min",{"_index":959,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getnumber('es_port",{"_index":951,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getnumber('redis_port",{"_index":942,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.gettypesfrompaths(paths",{"_index":1355,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["this.gqloptions.include",{"_index":2106,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["this.gqlparamsfactory",{"_index":2130,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["this.graphqldistributedfactory.mergeoptions",{"_index":1504,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["this.graphqlfactory.generatedefinitions",{"_index":1507,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["this.graphqltypesloader.gettypesfrompaths(typepaths",{"_index":1499,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["this.groupmetadata(references",{"_index":2111,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["this.httpadapterhost",{"_index":1437,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{}}}],["this.id",{"_index":567,"title":{},"body":{"classes/BaseDto.html":{}}}],["this.invokeevents(post_key",{"_index":643,"title":{},"body":{"classes/BaseRepository.html":{}}}],["this.invokeevents(pre_key",{"_index":663,"title":{},"body":{"classes/BaseRepository.html":{}}}],["this.itemcount",{"_index":1650,"title":{},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{}}}],["this.local.hashedpassword",{"_index":270,"title":{},"body":{"classes/AuthEntity.html":{}}}],["this.messages",{"_index":2253,"title":{},"body":{"classes/ValidationError.html":{}}}],["this.metadatascanner.scanfromprototype",{"_index":2121,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["this.moduleref.get",{"_index":1744,"title":{},"body":{"modules/MongoCoreModule.html":{}}}],["this.modulescontainer",{"_index":2105,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["this.nodeenv",{"_index":900,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.option",{"_index":2191,"title":{},"body":{"injectables/TenantMiddleware.html":{}}}],["this.option.enabled",{"_index":2192,"title":{},"body":{"injectables/TenantMiddleware.html":{}}}],["this.option.resolvertype",{"_index":2193,"title":{},"body":{"injectables/TenantMiddleware.html":{}}}],["this.options",{"_index":628,"title":{},"body":{"classes/BaseRepository.html":{},"modules/GraphqlDistributedModule.html":{}}}],["this.options.capped",{"_index":711,"title":{},"body":{"classes/BaseRepository.html":{}}}],["this.options.definitions",{"_index":1505,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["this.options.definitions.path",{"_index":1506,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["this.options.indexes",{"_index":718,"title":{},"body":{"classes/BaseRepository.html":{}}}],["this.options.installsubscriptionhandlers",{"_index":1510,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["this.options.max",{"_index":713,"title":{},"body":{"classes/BaseRepository.html":{}}}],["this.options.name",{"_index":630,"title":{},"body":{"classes/BaseRepository.html":{}}}],["this.options.size",{"_index":709,"title":{},"body":{"classes/BaseRepository.html":{}}}],["this.options.typedefs",{"_index":1502,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["this.page",{"_index":766,"title":{},"body":{"classes/BaseSearchDto.html":{},"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["this.pagecount",{"_index":1651,"title":{},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{}}}],["this.predicate(instance",{"_index":2122,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["this.projectservice.create(input",{"_index":2035,"title":{},"body":{"classes/ProjectResolver.html":{}}}],["this.projectservice.findall(null",{"_index":2039,"title":{},"body":{"classes/ProjectResolver.html":{}}}],["this.projectservice.findone",{"_index":2037,"title":{},"body":{"classes/ProjectResolver.html":{}}}],["this.promise",{"_index":1089,"title":{},"body":{"classes/Deferred.html":{}}}],["this.publisher.mergeobjectcontext(result",{"_index":1024,"title":{},"body":{"classes/CreateAuthHandler.html":{}}}],["this.referencesexplorerservice.explore",{"_index":1410,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{}}}],["this.reject",{"_index":1091,"title":{},"body":{"classes/Deferred.html":{}}}],["this.request",{"_index":1887,"title":{},"body":{"injectables/NestMultiTenantService.html":{}}}],["this.resolve",{"_index":1090,"title":{},"body":{"classes/Deferred.html":{}}}],["this.resolvelinktos",{"_index":1204,"title":{},"body":{"injectables/EventStore.html":{}}}],["this.resolversexplorerservice.explore",{"_index":1408,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{}}}],["this.scalarsexplorerservice.explore",{"_index":1409,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{}}}],["this.take",{"_index":767,"title":{},"body":{"classes/BaseSearchDto.html":{},"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["this.toggleid(document",{"_index":646,"title":{},"body":{"classes/BaseRepository.html":{}}}],["this.toggleid(newdocument",{"_index":668,"title":{},"body":{"classes/BaseRepository.html":{}}}],["this.toggleid(req.conditions",{"_index":647,"title":{},"body":{"classes/BaseRepository.html":{}}}],["this.toggleid(result",{"_index":644,"title":{},"body":{"classes/BaseRepository.html":{}}}],["this.type",{"_index":1936,"title":{},"body":{"classes/NestjsEventStore.html":{}}}],["this.updatedat",{"_index":571,"title":{},"body":{"classes/BaseDto.html":{},"classes/BaseEntity.html":{}}}],["this.uri",{"_index":1062,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["this.userrepository.findone",{"_index":2041,"title":{},"body":{"classes/ProjectResolver.html":{}}}],["this.uuid",{"_index":1305,"title":{},"body":{"injectables/GeneratorService.html":{}}}],["throw",{"_index":291,"title":{},"body":{"classes/AuthExistHandler.html":{},"classes/BaseRepository.html":{},"injectables/FacebookStrategy.html":{},"classes/GetAuthHandler.html":{},"modules/GraphqlDistributedModule.html":{},"injectables/LocalStrategy.html":{},"modules/MongoCoreModule.html":{}}}],["throwerror",{"_index":1258,"title":{},"body":{"injectables/ExitInterceptor.html":{}}}],["throwerror(e",{"_index":1267,"title":{},"body":{"injectables/ExitInterceptor.html":{}}}],["throwerror(new",{"_index":1268,"title":{},"body":{"injectables/ExitInterceptor.html":{}}}],["timeout",{"_index":2208,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":2205,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["title",{"_index":2496,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tl;dr",{"_index":1511,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["todo",{"_index":1858,"title":{},"body":{"injectables/NestCasbinService.html":{}}}],["todto",{"_index":219,"title":{},"body":{"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/DtoMapperUtils.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["todto(model",{"_index":1107,"title":{},"body":{"classes/DtoMapperUtils.html":{}}}],["todto(options",{"_index":246,"title":{},"body":{"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["todtoclass",{"_index":208,"title":{},"body":{"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["toggleid",{"_index":351,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["toggleid(document",{"_index":414,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["token",{"_index":467,"title":{},"body":{"classes/AuthResolver.html":{},"miscellaneous/functions.html":{}}}],["token.util",{"_index":1480,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["tokens",{"_index":1433,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{},"injectables/ReferencesExplorerService.html":{}}}],["tools",{"_index":2415,"title":{},"body":{"dependencies.html":{}}}],["transactional",{"_index":2440,"title":{},"body":{"dependencies.html":{}}}],["transform",{"_index":761,"title":{},"body":{"classes/BaseSearchDto.html":{},"injectables/ReferencesExplorerService.html":{}}}],["transform(number",{"_index":765,"title":{},"body":{"classes/BaseSearchDto.html":{}}}],["transformer",{"_index":762,"title":{},"body":{"classes/BaseSearchDto.html":{},"classes/PageOptionsDto.html":{},"classes/ProjectResolver.html":{},"dependencies.html":{}}}],["translation",{"_index":1587,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["true",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"classes/AuthResolver.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"classes/ConfigService.html":{},"classes/DatabaseClient.html":{},"classes/FacebookAuth.html":{},"classes/GoogleAuth.html":{},"injectables/GraphQLTypesLoader.html":{},"classes/HeadersDatasource.html":{},"classes/LocalAuth.html":{},"injectables/NestMultiTenantService.html":{},"classes/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":472,"title":{},"body":{"classes/AuthResolver.html":{},"classes/BaseRepository.html":{},"classes/CreateAuthHandler.html":{},"classes/DatabaseClient.html":{},"classes/DtoMapperUtils.html":{},"injectables/EventStore.html":{}}}],["ts",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseRepository.html":{},"classes/ConfigService.html":{},"classes/DtoMapperUtils.html":{},"injectables/EventStore.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"injectables/NestMultiTenantService.html":{},"classes/NestjsEventStore.html":{},"injectables/ReferencesExplorerService.html":{}}}],["tslint:disable",{"_index":533,"title":{},"body":{"injectables/AwsS3Service.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"classes/ContextProvider.html":{},"classes/CreateAuthCommand.html":{},"injectables/EventStore.html":{},"classes/HeadersDatasource.html":{},"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IServiceList.html":{},"interfaces/ServiceListItem.html":{},"classes/SnakeNamingStrategy.html":{},"classes/ValidationError.html":{}}}],["type",{"_index":55,"title":{},"body":{"classes/AppError.html":{},"controllers/AuthController.html":{},"classes/AuthCreatedEvent.html":{},"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedEvent.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthEntity.html":{},"classes/AuthExistHandler.html":{},"classes/AuthExistQuery.html":{},"guards/AuthGuard.html":{},"injectables/AuthRepository.html":{},"classes/AuthResolver.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatedEvent.html":{},"classes/AuthUpdatedHandler.html":{},"injectables/AwsS3Service.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"classes/BaseSearchDto.html":{},"interfaces/CollectionProps.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"classes/ConfigService.html":{},"classes/ContextProvider.html":{},"injectables/CookieSerializer.html":{},"classes/CreateAuthCommand.html":{},"classes/CreateAuthHandler.html":{},"interfaces/DBSource.html":{},"classes/DatabaseClient.html":{},"classes/Deferred.html":{},"interfaces/Document.html":{},"classes/DtoMapperUtils.html":{},"interfaces/EntityOptions.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/EventStore.html":{},"interfaces/EventStoreOptionConfig.html":{},"injectables/ExitInterceptor.html":{},"classes/FacebookAuth.html":{},"injectables/FacebookStrategy.html":{},"interfaces/FindRequest.html":{},"injectables/GeneratorService.html":{},"classes/GetAuthHandler.html":{},"classes/GetAuthQuery.html":{},"classes/GoogleAuth.html":{},"guards/GqlAuthGuard.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"classes/GraphqlErrors.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAuthRepo.html":{},"interfaces/IAwsConfigInterface.html":{},"interfaces/IEventSourceConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IEventStoreMessage.html":{},"interfaces/IFile.html":{},"interfaces/IGosipConfig.html":{},"interfaces/IGosipConfig-1.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IServiceList.html":{},"interfaces/ITenantRepo.html":{},"interfaces/IUserRepo.html":{},"interfaces/IndexDefinition.html":{},"classes/LocalAuth.html":{},"injectables/LocalStrategy.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"interfaces/MultiTenancyConfig.html":{},"interfaces/MultiTenantModuleOptions.html":{},"modules/NestCasbinModule.html":{},"injectables/NestCasbinService.html":{},"modules/NestMultiTenantModule.html":{},"injectables/NestMultiTenantService.html":{},"classes/NestStoreConfigProvider.html":{},"modules/NestjsEventStoreModule.html":{},"classes/NotFoundError.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/Paginate.html":{},"classes/ProjectEntity.html":{},"injectables/ProjectRepository.html":{},"classes/ProjectResolver.html":{},"classes/ProjectResponseDto.html":{},"classes/QueryFailedFilter.html":{},"injectables/ReferencesExplorerService.html":{},"interfaces/ServiceListItem.html":{},"classes/SnakeNamingStrategy.html":{},"interfaces/TenantInfo.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"classes/UserResponseDto.html":{},"classes/ValidationError.html":{},"injectables/ValidatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type's",{"_index":820,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["typedefs",{"_index":1412,"title":{},"body":{"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedModule.html":{}}}],["typedpropertydescriptor",{"_index":2616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeof",{"_index":741,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/EventStore.html":{}}}],["typeorm",{"_index":1318,"title":{},"body":{"classes/GetAuthQuery.html":{},"modules/NestCasbinModule.html":{},"classes/ProjectEntity.html":{},"classes/QueryFailedFilter.html":{},"classes/SnakeNamingStrategy.html":{},"classes/UserEntity.html":{},"dependencies.html":{},"index.html":{}}}],["typeorm/util/stringutils",{"_index":2174,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["typeormadapter",{"_index":1827,"title":{},"body":{"modules/NestCasbinModule.html":{}}}],["typeormadapter.newadapter(dbconnectionoptions",{"_index":1833,"title":{},"body":{"modules/NestCasbinModule.html":{}}}],["typeormconfig",{"_index":872,"title":{},"body":{"classes/ConfigService.html":{}}}],["typeormconfig(entities",{"_index":883,"title":{},"body":{"classes/ConfigService.html":{}}}],["typeormmoduleoptions",{"_index":885,"title":{},"body":{"classes/ConfigService.html":{}}}],["typepaths",{"_index":1498,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["types",{"_index":406,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/AwsS3Service.html":{},"classes/BaseRepository.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"injectables/GraphQLTypesLoader.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["types.loader",{"_index":1485,"title":{},"body":{"modules/GraphqlDistributedModule.html":{}}}],["types.loader.ts",{"_index":1334,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types.loader.ts:13",{"_index":1341,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["types.loader.ts:25",{"_index":1338,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["types/continuation",{"_index":2388,"title":{},"body":{"dependencies.html":{}}}],["types/express",{"_index":2391,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":2559,"title":{},"body":{"index.html":{}}}],["ui",{"_index":2433,"title":{},"body":{"dependencies.html":{}}}],["ultimate",{"_index":1904,"title":{},"body":{"injectables/NestMultiTenantService.html":{},"index.html":{}}}],["ultimately",{"_index":1793,"title":{},"body":{"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{}}}],["unauthorizedexception",{"_index":1288,"title":{},"body":{"injectables/FacebookStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":1063,"title":{},"body":{"classes/DatabaseClient.html":{},"classes/DtoMapperUtils.html":{},"injectables/EventStore.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"injectables/NestMultiTenantService.html":{},"modules/NestjsEventStoreModule.html":{},"classes/PageOptionsDto.html":{},"injectables/ReferencesExplorerService.html":{}}}],["unique",{"_index":792,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"classes/UserEntity.html":{},"miscellaneous/functions.html":{}}}],["unit",{"_index":2573,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":662,"title":{},"body":{"classes/BaseRepository.html":{}}}],["up",{"_index":2520,"title":{},"body":{"index.html":{}}}],["update",{"_index":389,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["updatebyidrequest",{"_index":392,"title":{"interfaces/UpdateByIdRequest.html":{}},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"injectables/UserRepository.html":{},"coverage.html":{}}}],["updated.event.ts",{"_index":505,"title":{},"body":{"classes/AuthUpdatedEvent.html":{},"coverage.html":{}}}],["updated.event.ts:4",{"_index":506,"title":{},"body":{"classes/AuthUpdatedEvent.html":{}}}],["updated.event.ts:6",{"_index":507,"title":{},"body":{"classes/AuthUpdatedEvent.html":{}}}],["updated.handler.ts",{"_index":509,"title":{},"body":{"classes/AuthUpdatedHandler.html":{},"coverage.html":{}}}],["updated.handler.ts:7",{"_index":510,"title":{},"body":{"classes/AuthUpdatedHandler.html":{}}}],["updatedat",{"_index":214,"title":{},"body":{"classes/AuthEntity.html":{},"classes/AuthResponseDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/ProjectEntity.html":{},"classes/ProjectResponseDto.html":{},"classes/UserEntity.html":{},"classes/UserResponseDto.html":{}}}],["updatedates",{"_index":220,"title":{},"body":{"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["updateone",{"_index":409,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["updateremove",{"_index":221,"title":{},"body":{"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{}}}],["updaterequest",{"_index":387,"title":{"interfaces/UpdateRequest.html":{}},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{},"injectables/UserRepository.html":{},"coverage.html":{}}}],["updates",{"_index":671,"title":{},"body":{"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{}}}],["updates._id",{"_index":673,"title":{},"body":{"classes/BaseRepository.html":{}}}],["updates.id",{"_index":672,"title":{},"body":{"classes/BaseRepository.html":{}}}],["uploadimage",{"_index":518,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["uploadimage(file",{"_index":521,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["upon",{"_index":1193,"title":{},"body":{"injectables/EventStore.html":{}}}],["upsert",{"_index":676,"title":{},"body":{"classes/BaseRepository.html":{},"interfaces/CollectionProps.html":{},"interfaces/DBSource.html":{},"interfaces/Document.html":{},"interfaces/FindRequest.html":{},"interfaces/IndexDefinition.html":{},"interfaces/UpdateByIdRequest.html":{},"interfaces/UpdateRequest.html":{}}}],["uq_97672ac88f789774dd47f7c8be3",{"_index":1608,"title":{},"body":{"interfaces/IConstraintErrors.html":{},"miscellaneous/variables.html":{}}}],["uri",{"_index":1034,"title":{},"body":{"classes/DatabaseClient.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"injectables/NestMultiTenantService.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"interfaces/IDistributedGatewayOptions.html":{},"interfaces/IServiceList.html":{},"interfaces/ServiceListItem.html":{}}}],["ursa",{"_index":2444,"title":{},"body":{"dependencies.html":{}}}],["us/docs/mozilla/javascript_code_modules/promise.jsm/deferred",{"_index":1085,"title":{},"body":{"classes/Deferred.html":{}}}],["use",{"_index":801,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"injectables/TenantMiddleware.html":{},"index.html":{}}}],["use(req",{"_index":2186,"title":{},"body":{"injectables/TenantMiddleware.html":{}}}],["useclass",{"_index":1493,"title":{},"body":{"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{}}}],["used",{"_index":813,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"modules/MongoModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"miscellaneous/functions.html":{}}}],["useexisting",{"_index":1782,"title":{},"body":{"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{}}}],["usefactory",{"_index":864,"title":{},"body":{"modules/CommonModule.html":{},"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{},"interfaces/MongoModuleAsyncOptions.html":{},"interfaces/MongoModuleOptions.html":{},"interfaces/MongoOptionsFactory.html":{},"modules/NestCasbinModule.html":{},"injectables/NestjsEventStoreService.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":449,"title":{},"body":{"classes/AuthResolver.html":{}}}],["useguards(gqlauthguard",{"_index":469,"title":{},"body":{"classes/AuthResolver.html":{}}}],["useguards(gqlauthguard)@mutation('logout",{"_index":443,"title":{},"body":{"classes/AuthResolver.html":{}}}],["usenewurlparser",{"_index":1072,"title":{},"body":{"classes/DatabaseClient.html":{},"injectables/NestMultiTenantService.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthEntity.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/CookieSerializer.html":{},"injectables/EventStore.html":{},"injectables/FacebookStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/ProjectResolver.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user.decorator.ts",{"_index":2277,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.entity",{"_index":259,"title":{},"body":{"classes/AuthEntity.html":{},"classes/ProjectEntity.html":{}}}],["user.password",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.resolver",{"_index":2230,"title":{},"body":{"modules/UserModule.html":{}}}],["user.service",{"_index":2228,"title":{},"body":{"modules/UserModule.html":{}}}],["user/src/app.controller.ts",{"_index":38,"title":{},"body":{"controllers/AppController-3.html":{},"coverage.html":{}}}],["user/src/app.controller.ts:9",{"_index":39,"title":{},"body":{"controllers/AppController-3.html":{}}}],["user/src/app.service.ts",{"_index":124,"title":{},"body":{"injectables/AppService-3.html":{},"coverage.html":{}}}],["user/src/app.service.ts:5",{"_index":125,"title":{},"body":{"injectables/AppService-3.html":{}}}],["user/src/main.ts",{"_index":2274,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["user/src/user/user.module.ts",{"_index":2227,"title":{},"body":{"modules/UserModule.html":{}}}],["user/src/user/user.resolver.ts",{"_index":2234,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{}}}],["user/src/user/user.service.ts",{"_index":2240,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["userentity",{"_index":258,"title":{"classes/UserEntity.html":{}},"body":{"classes/AuthEntity.html":{},"interfaces/IUserRepo.html":{},"classes/ProjectEntity.html":{},"injectables/TenantRepository.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"coverage.html":{}}}],["usermodule",{"_index":2223,"title":{"modules/UserModule.html":{}},"body":{"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":925,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IEventSourceConfig.html":{},"interfaces/IEventStoreConnectConfig.html":{},"interfaces/IGosipConfig.html":{},"interfaces/IGosipConfig-1.html":{}}}],["useropts",{"_index":1046,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["userrepoprovider",{"_index":2371,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userrepository",{"_index":2231,"title":{"injectables/UserRepository.html":{}},"body":{"injectables/UserRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userresolver",{"_index":2229,"title":{"classes/UserResolver.html":{}},"body":{"modules/UserModule.html":{},"classes/UserResolver.html":{},"coverage.html":{}}}],["userresponsedto",{"_index":2220,"title":{"classes/UserResponseDto.html":{}},"body":{"classes/UserEntity.html":{},"classes/UserResponseDto.html":{},"coverage.html":{}}}],["userservice",{"_index":2226,"title":{"injectables/UserService.html":{}},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["useunifiedtopology",{"_index":1893,"title":{},"body":{"injectables/NestMultiTenantService.html":{},"miscellaneous/variables.html":{}}}],["usevalue",{"_index":1435,"title":{},"body":{"modules/GraphqlDistributedGatewayModule.html":{},"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{},"modules/NestjsEventStoreModule.html":{}}}],["using",{"_index":2507,"title":{},"body":{"index.html":{}}}],["utf8",{"_index":1371,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["util",{"_index":1350,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["util.promisify(fs.readfile",{"_index":1352,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{},"miscellaneous/variables.html":{}}}],["utils",{"_index":1055,"title":{},"body":{"classes/DatabaseClient.html":{}}}],["uuid",{"_index":799,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"injectables/GeneratorService.html":{},"dependencies.html":{}}}],["uuid/v1",{"_index":1304,"title":{},"body":{"injectables/GeneratorService.html":{}}}],["valid",{"_index":405,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["validate",{"_index":1283,"title":{},"body":{"injectables/FacebookStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":1285,"title":{},"body":{"injectables/FacebookStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validateuser",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":2251,"title":{},"body":{"classes/ValidationError.html":{}}}],["validationerror",{"_index":1557,"title":{"classes/ValidationError.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationError.html":{},"coverage.html":{}}}],["validationerror.constraints[constraintkey",{"_index":1588,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["validationerrors",{"_index":1559,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["validator",{"_index":589,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseSearchDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/PageOptionsDto.html":{},"dependencies.html":{}}}],["validatoroptions",{"_index":2245,"title":{},"body":{"classes/ValidationError.html":{}}}],["validatorservice",{"_index":851,"title":{"injectables/ValidatorService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/ValidatorService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["validpassword",{"_index":2304,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":131,"title":{},"body":{"classes/AppUtils.html":{},"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"classes/ContextProvider.html":{},"classes/DtoMapperUtils.html":{},"injectables/GraphqlDistributedFactory.html":{},"modules/GraphqlDistributedModule.html":{},"classes/GraphqlErrors.html":{},"modules/MongoCoreModule.html":{},"modules/MongoModule.html":{},"injectables/NestMultiTenantService.html":{},"classes/NotFoundError.html":{},"classes/PageOptionsDto.html":{},"injectables/ProjectRepository.html":{},"injectables/ReferencesExplorerService.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":390,"title":{},"body":{"injectables/AuthRepository.html":{},"classes/BaseRepository.html":{},"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{},"injectables/ProjectRepository.html":{},"injectables/TenantRepository.html":{},"injectables/UserRepository.html":{}}}],["varchar",{"_index":1281,"title":{},"body":{"classes/FacebookAuth.html":{},"classes/GoogleAuth.html":{},"classes/LocalAuth.html":{}}}],["varchar(100",{"_index":826,"title":{},"body":{"interfaces/ColumnCommonOptions.html":{},"interfaces/ColumnOptions.html":{}}}],["variable",{"_index":2275,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2593,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":215,"title":{},"body":{"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/ProjectEntity.html":{},"classes/UserEntity.html":{},"miscellaneous/functions.html":{}}}],["versioncolumn",{"_index":593,"title":{},"body":{"classes/BaseEntity.html":{}}}],["vhost",{"_index":2446,"title":{},"body":{"dependencies.html":{}}}],["void",{"_index":240,"title":{},"body":{"classes/AuthEntity.html":{},"injectables/AuthRepository.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"classes/ContextProvider.html":{},"injectables/CookieSerializer.html":{},"classes/DtoMapperUtils.html":{},"injectables/EventStore.html":{},"classes/HeadersDatasource.html":{},"classes/HttpExceptionFilter.html":{},"classes/ProjectEntity.html":{},"injectables/ProjectRepository.html":{},"classes/QueryFailedFilter.html":{},"injectables/ReferencesExplorerService.html":{},"injectables/TenantMiddleware.html":{},"injectables/TenantRepository.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{}}}],["watch",{"_index":2569,"title":{},"body":{"index.html":{}}}],["website",{"_index":2548,"title":{},"body":{"index.html":{}}}],["well",{"_index":2526,"title":{},"body":{"index.html":{}}}],["willsendrequest",{"_index":1523,"title":{},"body":{"classes/HeadersDatasource.html":{}}}],["willsendrequest(undefined",{"_index":1527,"title":{},"body":{"classes/HeadersDatasource.html":{}}}],["wip",{"_index":2500,"title":{},"body":{"index.html":{}}}],["workaround",{"_index":1359,"title":{},"body":{"injectables/GraphQLTypesLoader.html":{}}}],["workspacename",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["world",{"_index":119,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/AppService-2.html":{},"injectables/AppService-3.html":{}}}],["wrapper",{"_index":2081,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["wrapper.instance",{"_index":2109,"title":{},"body":{"injectables/ReferencesExplorerService.html":{}}}],["write",{"_index":193,"title":{},"body":{"classes/AuthCreatedHandler.html":{},"classes/AuthDeletedHandler.html":{},"classes/AuthUpdatedHandler.html":{}}}],["x",{"_index":1928,"title":{},"body":{"classes/NestjsEventStore.html":{}}}],["yarn",{"_index":2566,"title":{},"body":{"index.html":{}}}],["yarnrunning",{"_index":2565,"title":{},"body":{"index.html":{}}}],["yes",{"_index":57,"title":{},"body":{"classes/AppError.html":{},"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/BaseRepository.html":{},"classes/DatabaseClient.html":{},"classes/DtoMapperUtils.html":{},"classes/GraphqlErrors.html":{},"modules/MongoModule.html":{},"classes/NotFoundError.html":{},"classes/ProjectEntity.html":{},"classes/SnakeNamingStrategy.html":{},"classes/UserEntity.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{}}}],["z0",{"_index":1121,"title":{},"body":{"classes/DtoMapperUtils.html":{}}}],["za",{"_index":1120,"title":{},"body":{"classes/DtoMapperUtils.html":{}}}],["zoom",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CoreModule.html":{},"modules/GraphqlDistributedModule.html":{},"modules/MongoCoreModule.html":{},"modules/NestCasbinModule.html":{},"modules/NestMultiTenantModule.html":{},"modules/NestjsEventStoreModule.html":{},"modules/ProjectModule.html":{},"modules/RepositoryModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gateway-admin/src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/gateway-admin/src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController-1.html":{"url":"controllers/AppController-1.html","title":"controller - AppController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/service-auth/src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/service-auth/src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController-2.html":{"url":"controllers/AppController-2.html","title":"controller - AppController-2","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/service-project/src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/service-project/src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController-3.html":{"url":"controllers/AppController-3.html","title":"controller - AppController-3","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/service-user/src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/service-user/src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppError.html":{"url":"classes/AppError.html","title":"class - AppError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/exceptions/app.exception.ts\n        \n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                metaData\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, metaData?: object)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/exceptions/app.exception.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        metaData\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            metaData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/common/src/exceptions/app.exception.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class AppError extends HttpException {\n  constructor(message: string, public metaData?: object) {\n    super(message, HttpStatus.BAD_GATEWAY);\n    Error.captureStackTrace(this, AppError);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nGraphqlDistributedGatewayModule\n\nGraphqlDistributedGatewayModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nGraphqlDistributedGatewayModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gateway-admin/src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GraphqlDistributedGatewayModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { GraphqlDistributedGatewayModule } from '@graphqlcqrs/graphql-gateway';\nimport { HeadersDatasource } from './headers.datasource';\n\n@Module({\n  imports: [\n    GraphqlDistributedGatewayModule.forRoot({\n      subscriptions: false,\n      path: '/graphql',\n      context: context => context,\n      serviceList: [\n        { name: 'auth', url: 'http://localhost:9900/graphql' },\n        { name: 'user', url: 'http://localhost:9000/graphql' },\n        { name: 'project', url: 'http://localhost:9100/graphql' },\n        // more services\n      ],\n      buildService({ url }) {\n        return new HeadersDatasource({ url });\n      },\n      cors: {\n        preflightContinue: true,\n        credentials: true,\n      },\n      playground: {\n        workspaceName: 'Admin Gateway',\n        settings: {\n          'editor.theme': 'light',\n        },\n      },\n    }),\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gateway-admin/src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in apps/gateway-admin/src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService-1.html":{"url":"injectables/AppService-1.html","title":"injectable - AppService-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/service-auth/src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in apps/service-auth/src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService-2.html":{"url":"injectables/AppService-2.html","title":"injectable - AppService-2","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/service-project/src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in apps/service-project/src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService-3.html":{"url":"injectables/AppService-3.html","title":"injectable - AppService-3","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/service-user/src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in apps/service-user/src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppUtils.html":{"url":"classes/AppUtils.html","title":"class - AppUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/app.utils.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                killAppWithGrace\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            killAppWithGrace\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in libs/common/src/utils/app.utils.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { INestApplication } from '@nestjs/common';\n\nexport class AppUtils {\n  public static killAppWithGrace = (app: INestApplication) => {\n    process.on('SIGINT', async () => {\n      setTimeout(() => process.exit(1), 5000);\n      await app.close();\n      process.exit(0);\n    });\n\n    // kill -15\n    process.on('SIGTERM', async () => {\n      setTimeout(() => process.exit(1), 5000);\n      await app.close();\n      process.exit(0);\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/service-auth/src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                facebookLogin\n                            \n                            \n                                    Async\n                                facebookLoginCallback\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            facebookLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    facebookLogin(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/facebook')\n                \n            \n\n            \n                \n                    Defined in apps/service-auth/src/auth/auth.controller.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            facebookLoginCallback\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    facebookLoginCallback(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/facebook/callback')\n                \n            \n\n            \n                \n                    Defined in apps/service-auth/src/auth/auth.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Req, Request } from '@nestjs/common';\nimport * as passport from 'passport';\n\n@Controller('auth')\nexport class AuthController {\n\n  @Get('/facebook')\n  async facebookLogin(@Req() req: Request) {\n    return passport.authenticate('facebook', {\n      successRedirect: '/',\n      failureRedirect: '/login',\n    });\n  }\n\n  @Post('/facebook/callback')\n  async facebookLoginCallback(@Req() req: Request) {\n    console.log('/callback');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthCreatedEvent.html":{"url":"classes/AuthCreatedEvent.html","title":"class - AuthCreatedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthCreatedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/cqrs/events/impl/auth/auth-created.event.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        IEvent\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                auth\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthEntity)\n                    \n                \n                        \n                            \n                                Defined in libs/core/src/cqrs/events/impl/auth/auth-created.event.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthEntity\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/cqrs/events/impl/auth/auth-created.event.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IEvent } from '@nestjs/cqrs';\nimport {AuthEntity} from '../../../../data/entities';\n\nexport class AuthCreatedEvent implements IEvent {\n  constructor(\n    public readonly auth: AuthEntity) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthCreatedHandler.html":{"url":"classes/AuthCreatedHandler.html","title":"class - AuthCreatedHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthCreatedHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/cqrs/events/handlers/auth/auth-created.handler.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handle\n                        \n                        \n                    \n                \n            \n            \n                \nhandle(event: AuthCreatedEvent)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/cqrs/events/handlers/auth/auth-created.handler.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                AuthCreatedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Logger} from '@nestjs/common';\nimport {EventsHandler, IEventHandler} from '@nestjs/cqrs';\nimport {AuthCreatedEvent} from '../../impl/auth';\n\n@EventsHandler(AuthCreatedEvent)\nexport class AuthCreatedHandler implements IEventHandler {\n  handle(event: AuthCreatedEvent): any {\n    Logger.log(event, 'AuthCreatedEvent'); // write here\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthDeletedEvent.html":{"url":"classes/AuthDeletedEvent.html","title":"class - AuthDeletedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthDeletedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/cqrs/events/impl/auth/auth-deleted.event.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        IEvent\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                authId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authId: string)\n                    \n                \n                        \n                            \n                                Defined in libs/core/src/cqrs/events/impl/auth/auth-deleted.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            authId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/cqrs/events/impl/auth/auth-deleted.event.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IEvent } from '@nestjs/cqrs';\n\nexport class AuthDeletedEvent implements IEvent {\n  constructor(\n    public readonly authId: string) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthDeletedHandler.html":{"url":"classes/AuthDeletedHandler.html","title":"class - AuthDeletedHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthDeletedHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/cqrs/events/handlers/auth/auth-deleted.handler.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handle\n                        \n                        \n                    \n                \n            \n            \n                \nhandle(event: AuthDeletedEvent)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/cqrs/events/handlers/auth/auth-deleted.handler.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                AuthDeletedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Logger} from '@nestjs/common';\nimport {EventsHandler, IEventHandler} from '@nestjs/cqrs';\nimport {AuthDeletedEvent} from '../../impl/auth';\n\n@EventsHandler(AuthDeletedEvent)\nexport class AuthDeletedHandler implements IEventHandler {\n  handle(event: AuthDeletedEvent): any {\n    Logger.log(event, 'AuthDeletedEvent'); // write here\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthEntity.html":{"url":"classes/AuthEntity.html","title":"class - AuthEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/repository/src/entities/auth.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                local\n                            \n                            \n                                toDtoClass\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                deleted\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                    Abstract\n                                    Optional\n                                toDtoClass\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                enrichName\n                            \n                            \n                                beforeInsert\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                toDto\n                            \n                            \n                                updateDates\n                            \n                            \n                                updateRemove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            local\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LocalAuth\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/entities/auth.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toDtoClass\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in libs/repository/src/entities/auth.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectID\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ObjectIdColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Optional\n                            toDtoClass\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:31\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enrichName\n                        \n                        \n                    \n                \n            \n            \n                \nenrichName()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Before('save')@Before('update')\n                \n            \n\n            \n                \n                    Defined in libs/repository/src/entities/auth.entity.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            beforeInsert\n                        \n                        \n                    \n                \n            \n            \n                \nbeforeInsert()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Before('update')\n                \n            \n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:42\n\n                \n            \n\n\n            \n                \n                    Soft delete\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toDto\n                        \n                        \n                    \n                \n            \n            \n                \ntoDto(options?: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateDates\n                        \n                        \n                    \n                \n            \n            \n                \nupdateDates()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Before('update')\n                \n            \n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateRemove\n                        \n                        \n                    \n                \n            \n            \n                \nupdateRemove()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Before('remove')\n                \n            \n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:57\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { generateHashedPassword } from '@graphqlcqrs/common/utils';\nimport {AuthResponseDto} from '../dtos/response';\nimport {BaseEntity} from './base-entity';\nimport {UserEntity} from './user.entity';\nimport { LocalAuth } from './embeded/social';\nimport { Before } from '@juicycleff/nest-multi-tenant';\nimport { Entity } from '@juicycleff/nest-multi-tenant/database/mongo/decorators/entity.decorator';\n\n@Entity()\nexport class AuthEntity extends BaseEntity {\n\n  // @Column( type => LocalAuth, {})\n  local: LocalAuth;\n\n  // @Column(type => UserEntity)\n  // user?: UserEntity;\n\n  toDtoClass: new(entity: BaseEntity, options?: any) => AuthResponseDto;\n\n  @Before('save')\n  @Before('update')\n  enrichName() {\n    this.local.hashedPassword = generateHashedPassword(this.local.hashedPassword);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthExistHandler.html":{"url":"classes/AuthExistHandler.html","title":"class - AuthExistHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthExistHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/cqrs/queries/handlers/auth/auth-exist.handler.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authRepository: AuthRepository)\n                    \n                \n                        \n                            \n                                Defined in libs/core/src/cqrs/queries/handlers/auth/auth-exist.handler.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authRepository\n                                                  \n                                                        \n                                                                        AuthRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            execute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: AuthExistQuery)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/cqrs/queries/handlers/auth/auth-exist.handler.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                AuthExistQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Logger} from '@nestjs/common';\nimport {IQueryHandler, QueryHandler} from '@nestjs/cqrs';\nimport { AuthRepository } from '@graphqlcqrs/repository';\nimport { AuthExistQuery } from '../../';\n\n@QueryHandler(AuthExistQuery)\nexport class AuthExistHandler implements IQueryHandler {\n  constructor(\n    private readonly authRepository: AuthRepository,\n  ) {}\n\n  async execute(query: AuthExistQuery): Promise {\n    Logger.log(query, 'AuthExistQuery');\n    const { localAuth } = query;\n    if (!localAuth) { throw Error('Missing get inputs'); }\n    return null; // this.authRepository.exist(localAuth);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthExistQuery.html":{"url":"classes/AuthExistQuery.html","title":"class - AuthExistQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthExistQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/cqrs/queries/impl/auth/auth-exist.query.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        IQuery\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                localAuth\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localAuth: LocalAuth)\n                    \n                \n                        \n                            \n                                Defined in libs/core/src/cqrs/queries/impl/auth/auth-exist.query.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localAuth\n                                                  \n                                                        \n                                                                        LocalAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            localAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LocalAuth\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/cqrs/queries/impl/auth/auth-exist.query.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {IQuery} from '@nestjs/cqrs';\nimport { LocalAuth } from '@graphqlcqrs/repository/entities';\n\nexport class AuthExistQuery implements IQuery {\n  constructor(\n    public readonly localAuth: LocalAuth) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                libs/common/src/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/guards/auth.guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nRepositoryModule\n\nRepositoryModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nRepositoryModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nCookieSerializer\n\nCookieSerializer\n\nAuthModule -->\n\nCookieSerializer->AuthModule\n\n\n\n\n\nFacebookStrategy\n\nFacebookStrategy\n\nAuthModule -->\n\nFacebookStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/service-auth/src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            CookieSerializer\n                        \n                        \n                            FacebookStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RepositoryModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthResolver } from './auth.resolver';\nimport { FacebookStrategy, LocalStrategy } from './strategy';\nimport { AuthController } from './auth.controller';\nimport { CookieSerializer } from '@graphqlcqrs/common';\nimport { MongoModule } from '@juicycleff/nest-multi-tenant/database';\nimport { RepositoryModule } from '@graphqlcqrs/repository/repository.module';\n\n@Module({\n  imports: [\n    RepositoryModule,\n  ],\n  providers: [AuthService, AuthResolver, LocalStrategy, CookieSerializer, FacebookStrategy],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthRepository.html":{"url":"injectables/AuthRepository.html","title":"injectable - AuthRepository","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/repository/src/repositories/auth.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collection\n                            \n                            \n                                    Public\n                                dbSource\n                            \n                            \n                                    Readonly\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteMany\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                deleteOneById\n                            \n                            \n                                    Private\n                                exec\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                findById\n                            \n                            \n                                    Async\n                                findManyById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneAndUpdate\n                            \n                            \n                                    Async\n                                findOneByIdAndUpdate\n                            \n                            \n                                    Private\n                                getCollection\n                            \n                            \n                                    Private\n                                    Async\n                                invokeEvents\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Protected\n                                toggleId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dbc: MongoClient, db: Db)\n                    \n                \n                        \n                            \n                                Defined in libs/repository/src/repositories/auth.repository.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dbc\n                                                  \n                                                        \n                                                                    MongoClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    Db\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: DTO)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:126\n\n                \n            \n\n\n            \n                \n                    Create a document of type T\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            DTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteMany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMany(conditions: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:246\n\n                \n            \n\n\n            \n                \n                    Delete multiple records\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(conditions: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:229\n\n                \n            \n\n\n            \n                \n                    Delete a record\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:218\n\n                \n            \n\n\n            \n                \n                    Delete a record by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            exec\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    exec()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:358\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(req: FindRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:85\n\n                \n            \n\n\n            \n                \n                    Find records by a list of conditions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                FindRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        { conditions: {} }\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:36\n\n                \n            \n\n\n            \n                \n                    Finds a record by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyById(ids: string[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:47\n\n                \n            \n\n\n            \n                \n                    Find multiple documents by a list of ids\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(conditions: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:67\n\n                \n            \n\n\n            \n                \n                    Finds a record by a list of conditions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneAndUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneAndUpdate(req: UpdateRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:196\n\n                \n            \n\n\n            \n                \n                    Find a record and update with new values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                UpdateRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByIdAndUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdAndUpdate(id: string, req: UpdateByIdRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:181\n\n                \n            \n\n\n            \n                \n                    Find a record by ID and update with new values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                UpdateByIdRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getCollection\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCollection()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:286\n\n                \n            \n\n\n            \n                \n                    Return a collection\nIf the collection doesn't exist, it will create it with the given options\n\n\n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            invokeEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    invokeEvents(type: string, fns: string[], document: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:344\n\n                \n            \n\n\n            \n                \n                    Apply functions to a record based on the type of event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        any of the valid types, PRE_KEY POST_KEY\n\n                                    \n                                \n                                \n                                    fns\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        any of the valid functions: update, updateOne, save, create, find, findOne, findMany\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to apply functions to\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(document: Document)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:146\n\n                \n            \n\n\n            \n                \n                    Save any changes to your document\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                                Document\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            toggleId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleId(document: any, replace: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:265\n\n                \n            \n\n\n            \n                \n                    Strip off Mongo's ObjectID and replace with string representation or in reverse\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    replace\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DOC\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise>\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseRepository\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseRepository:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dbSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DBSource\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseRepository\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseRepository:21\n\n                            \n                        \n\n                \n                    \n                        Your MongoDB connection\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CollectionProps\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseRepository\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseRepository:10\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {AuthEntity} from '../entities';\nimport { BaseRepository, EntityRepository, InjectDb, InjectClient } from '@juicycleff/nest-multi-tenant';\nimport { Db, MongoClient } from 'mongodb';\n\n@Injectable()\n@EntityRepository({ name: 'authentication' })\nexport class AuthRepository extends BaseRepository {\n  constructor(\n    @InjectClient() private readonly dbc: MongoClient,\n    @InjectDb() private readonly db: Db,\n  ) {\n    super({\n      client: dbc,\n      db,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver.html":{"url":"classes/AuthResolver.html","title":"class - AuthResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/service-auth/src/auth/auth.resolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in apps/service-auth/src/auth/auth.resolver.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(undefined: any, context: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('login')\n                \n            \n\n            \n                \n                    Defined in apps/service-auth/src/auth/auth.resolver.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(context: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(GqlAuthGuard)@Mutation('logout')\n                \n            \n\n            \n                \n                    Defined in apps/service-auth/src/auth/auth.resolver.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Context, Mutation, Resolver } from '@nestjs/graphql';\nimport { UseGuards } from '@nestjs/common';\nimport { GqlAuthGuard } from '@graphqlcqrs/common/guards';\nimport { AuthService } from './auth.service';\n\n@Resolver('AuthPayload')\nexport class AuthResolver {\n  constructor(\n    private readonly authService: AuthService,\n  ) {}\n\n  @Mutation('login')\n  async login(@Args('input') {identifier, password}: any, @Context() context: any) {\n    console.log('************************');\n    console.log(context.req.session);\n    const gt = await this.authService.create({\n      name: 'catty',\n      sound: 'meow',\n    });\n    // console.log(gt);\n    console.log('************************');\n    const { user } = await context.authenticate('graphql-local', { email: identifier, password });\n    context.login(user);\n    return {\n      token: 'fgggfg',\n      user,\n    };\n  }\n\n  @UseGuards(GqlAuthGuard)\n  @Mutation('logout')\n  async logout(@Context() context: any) {\n    try {\n      // await context.logout();\n      return {\n        success: true,\n      };\n    } catch (e) {\n      return {\n        success: false,\n      };\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResponseDto.html":{"url":"classes/AuthResponseDto.html","title":"class - AuthResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/repository/src/dtos/response/auth.response.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/dtos/response/auth.response.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | ObjectID\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {BaseDto} from '../base.dto';\n\nexport class AuthResponseDto extends BaseDto {\n  // @IsNotEmpty()\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/service-auth/src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authRepository: AuthRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/service-auth/src/auth/auth.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authRepository\n                                                  \n                                                        \n                                                                        AuthRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(cat: any)\n                \n            \n\n\n            \n                \n                    Defined in apps/service-auth/src/auth/auth.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cat\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/service-auth/src/auth/auth.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthRepository } from '@graphqlcqrs/repository/repositories/auth.repository';\n\n@Injectable()\nexport class AuthService {\n  constructor(private authRepository: AuthRepository) {}\n\n  async create(cat: any) {\n    // @ts-ignore\n    return await this.authRepository.create({\n      local: {\n        email: 'juicycleff@gmail.com',\n        hashedPassword: 'green',\n      },\n    }); // save(cat);\n  }\n\n  async validateUser(email: string, pass: string): Promise {\n    const user = {\n      password: 'pass',\n      email: 'ghghg@gghh.com',\n    };\n    if (user && user.password) {\n      const { password, ...result } = user;\n      return result;\n    }\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthUpdatedEvent.html":{"url":"classes/AuthUpdatedEvent.html","title":"class - AuthUpdatedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthUpdatedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/cqrs/events/impl/auth/auth-updated.event.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        IEvent\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                auth\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthEntity)\n                    \n                \n                        \n                            \n                                Defined in libs/core/src/cqrs/events/impl/auth/auth-updated.event.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthEntity\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/cqrs/events/impl/auth/auth-updated.event.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IEvent } from '@nestjs/cqrs';\nimport {AuthEntity} from '../../../../data/entities';\n\nexport class AuthUpdatedEvent implements IEvent {\n  constructor(\n    public readonly auth: AuthEntity) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthUpdatedHandler.html":{"url":"classes/AuthUpdatedHandler.html","title":"class - AuthUpdatedHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthUpdatedHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/cqrs/events/handlers/auth/auth-updated.handler.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handle\n                        \n                        \n                    \n                \n            \n            \n                \nhandle(event: AuthUpdatedEvent)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/cqrs/events/handlers/auth/auth-updated.handler.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                AuthUpdatedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Logger} from '@nestjs/common';\nimport {EventsHandler, IEventHandler} from '@nestjs/cqrs';\nimport {AuthUpdatedEvent} from '../../impl/auth';\n\n@EventsHandler(AuthUpdatedEvent)\nexport class AuthUpdatedHandler implements IEventHandler {\n  handle(event: AuthUpdatedEvent): any {\n    Logger.log(event, 'AuthUpdatedEvent'); // write here\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AwsS3Service.html":{"url":"injectables/AwsS3Service.html","title":"injectable - AwsS3Service","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AwsS3Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/services/aws-s3.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _s3\n                            \n                            \n                                    Public\n                                configService\n                            \n                            \n                                    Public\n                                generatorService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                uploadImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, generatorService: GeneratorService)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/services/aws-s3.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        generatorService\n                                                  \n                                                        \n                                                                        GeneratorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            uploadImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadImage(file: IFile)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/services/aws-s3.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                IFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _s3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AWS.S3\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/common/src/services/aws-s3.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            configService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigService\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/common/src/services/aws-s3.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            generatorService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GeneratorService\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/common/src/services/aws-s3.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as AWS from 'aws-sdk';\nimport * as mime from 'mime-types';\nimport {IFile} from '../interfaces';\nimport {ConfigService} from './config.service';\nimport { GeneratorService } from './generator.service';\n\n@Injectable()\nexport class AwsS3Service {\n  // tslint:disable-next-line:variable-name\n  private readonly _s3: AWS.S3;\n\n  constructor(\n    public configService: ConfigService,\n    public generatorService: GeneratorService,\n  ) {\n    const options: AWS.S3.Types.ClientConfiguration = {\n      apiVersion: '2010-12-01',\n      region: 'eu-central-1',\n    };\n\n    const awsS3Config = configService.awsS3Config;\n    if (\n      awsS3Config.accessKeyId &&\n      awsS3Config.secretAccessKey\n    ) {\n      options.credentials = awsS3Config;\n    }\n\n    this._s3 = new AWS.S3(options);\n\n  }\n\n  async uploadImage(file: IFile) {\n    const fileName = this.generatorService.fileName(mime.extension(file.mimetype) as string);\n    const key = 'images/' + fileName;\n    await this._s3.putObject({\n      Bucket: this.configService.awsS3Config.bucketName,\n      Body: file.buffer,\n      ACL: 'public-read',\n      Key: key,\n    }).promise();\n\n    return key;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseDto.html":{"url":"classes/BaseDto.html","title":"class - BaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/repository/src/dtos/base.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entity: BaseEntity)\n                    \n                \n                        \n                            \n                                Defined in libs/repository/src/dtos/base.dto.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                        BaseEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/dtos/base.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | ObjectID\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/dtos/base.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/dtos/base.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {BaseEntity} from '../entities';\nimport { ObjectID } from 'mongodb';\n\nexport class BaseDto {\n  id: string | ObjectID;\n  createdAt: Date | string;\n  updatedAt: Date | string;\n\n  constructor(entity: BaseEntity) {\n    this.id = entity.id;\n    this.createdAt = entity.createdAt;\n    this.updatedAt = entity.updatedAt;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/repository/src/entities/base-entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    AggregateRoot\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                deleted\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                    Abstract\n                                    Optional\n                                toDtoClass\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                beforeInsert\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                toDto\n                            \n                            \n                                updateDates\n                            \n                            \n                                updateRemove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/entities/base-entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/entities/base-entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/entities/base-entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectID\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ObjectIdColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/entities/base-entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Optional\n                            toDtoClass\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in libs/repository/src/entities/base-entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/entities/base-entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/entities/base-entity.ts:31\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            beforeInsert\n                        \n                        \n                    \n                \n            \n            \n                \nbeforeInsert()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Before('update')\n                \n            \n\n            \n                \n                    Defined in libs/repository/src/entities/base-entity.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n\n            \n                \n                    Defined in libs/repository/src/entities/base-entity.ts:42\n                \n            \n\n\n            \n                \n                    Soft delete\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toDto\n                        \n                        \n                    \n                \n            \n            \n                \ntoDto(options?: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/repository/src/entities/base-entity.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateDates\n                        \n                        \n                    \n                \n            \n            \n                \nupdateDates()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Before('update')\n                \n            \n\n            \n                \n                    Defined in libs/repository/src/entities/base-entity.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateRemove\n                        \n                        \n                    \n                \n            \n            \n                \nupdateRemove()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Before('remove')\n                \n            \n\n            \n                \n                    Defined in libs/repository/src/entities/base-entity.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AggregateRoot} from '@nestjs/cqrs';\n// import {IsNotEmpty, IsDateString} from 'class-validator';\nimport { ObjectID } from 'mongodb';\nimport { DtoMapperUtils } from '@graphqlcqrs/common';\nimport {BaseDto} from '../dtos';\nimport { Before, ObjectIdColumn } from '@juicycleff/nest-multi-tenant';\n\nexport abstract class BaseEntity extends AggregateRoot {\n\n  // @IsNotEmpty()\n  @ObjectIdColumn()\n  id: ObjectID;\n\n  // @IsDateString()\n  // @Column({ nullable: false })\n  createdAt?: Date | string;\n\n  // @IsDateString()\n  // @Column({ nullable: true })\n  updatedAt?: Date | string;\n\n  // @IsDateString()\n  // @Column()\n  deletedAt?: Date | string;\n\n  // @IsDateString()\n  // @Column({ default: false })\n  deleted?: boolean;\n\n  // @VersionColumn()\n  version?: number;\n\n  abstract toDtoClass?: new (entity: BaseEntity, options?: any) => T;\n\n  toDto(options?: any) {\n    return DtoMapperUtils.toDto(this.toDtoClass, this, options);\n  }\n\n  /**\n   * Soft delete\n   */\n  public remove(): void {\n    this.deletedAt = new Date();\n  }\n\n  @Before('update')\n  beforeInsert() {\n    this.createdAt = new Date();\n  }\n\n  @Before('update')\n  updateDates() {\n    this.updatedAt = new Date();\n  }\n\n  @Before('remove')\n  updateRemove() {\n    this.deleted = true;\n    this.deletedAt = new Date();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseRepository.html":{"url":"classes/BaseRepository.html","title":"class - BaseRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nest-multi-tenant/src/database/mongo/repository/base.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collection\n                            \n                            \n                                    Public\n                                dbSource\n                            \n                            \n                                    Readonly\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteMany\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                deleteOneById\n                            \n                            \n                                    Private\n                                exec\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                findById\n                            \n                            \n                                    Async\n                                findManyById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneAndUpdate\n                            \n                            \n                                    Async\n                                findOneByIdAndUpdate\n                            \n                            \n                                    Private\n                                getCollection\n                            \n                            \n                                    Private\n                                    Async\n                                invokeEvents\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Protected\n                                toggleId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dbSource: DBSource, opts?: CollectionProps)\n                    \n                \n                        \n                            \n                                Defined in libs/nest-multi-tenant/src/database/mongo/repository/base.repository.ts:10\n                            \n                        \n\n                \n                    \n                            Creates an instance of BaseRepository.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dbSource\n                                                  \n                                                        \n                                                                        DBSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Your MongoDB connection\n\n                                                        \n                                                \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                        CollectionProps\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise>\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/nest-multi-tenant/src/database/mongo/repository/base.repository.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dbSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DBSource\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/nest-multi-tenant/src/database/mongo/repository/base.repository.ts:21\n                            \n                        \n\n                \n                    \n                        Your MongoDB connection\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CollectionProps\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/nest-multi-tenant/src/database/mongo/repository/base.repository.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: DTO)\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/database/mongo/repository/base.repository.ts:126\n                \n            \n\n\n            \n                \n                    Create a document of type T\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            DTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteMany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMany(conditions: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/database/mongo/repository/base.repository.ts:246\n                \n            \n\n\n            \n                \n                    Delete multiple records\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(conditions: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/database/mongo/repository/base.repository.ts:229\n                \n            \n\n\n            \n                \n                    Delete a record\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/database/mongo/repository/base.repository.ts:218\n                \n            \n\n\n            \n                \n                    Delete a record by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            exec\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    exec()\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/database/mongo/repository/base.repository.ts:358\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(req: FindRequest)\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/database/mongo/repository/base.repository.ts:85\n                \n            \n\n\n            \n                \n                    Find records by a list of conditions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                FindRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        { conditions: {} }\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/database/mongo/repository/base.repository.ts:36\n                \n            \n\n\n            \n                \n                    Finds a record by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyById(ids: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/database/mongo/repository/base.repository.ts:47\n                \n            \n\n\n            \n                \n                    Find multiple documents by a list of ids\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(conditions: object)\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/database/mongo/repository/base.repository.ts:67\n                \n            \n\n\n            \n                \n                    Finds a record by a list of conditions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneAndUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneAndUpdate(req: UpdateRequest)\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/database/mongo/repository/base.repository.ts:196\n                \n            \n\n\n            \n                \n                    Find a record and update with new values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                UpdateRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByIdAndUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdAndUpdate(id: string, req: UpdateByIdRequest)\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/database/mongo/repository/base.repository.ts:181\n                \n            \n\n\n            \n                \n                    Find a record by ID and update with new values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                UpdateByIdRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getCollection\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCollection()\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/database/mongo/repository/base.repository.ts:286\n                \n            \n\n\n            \n                \n                    Return a collection\nIf the collection doesn't exist, it will create it with the given options\n\n\n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            invokeEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    invokeEvents(type: string, fns: string[], document: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/database/mongo/repository/base.repository.ts:344\n                \n            \n\n\n            \n                \n                    Apply functions to a record based on the type of event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        any of the valid types, PRE_KEY POST_KEY\n\n                                    \n                                \n                                \n                                    fns\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        any of the valid functions: update, updateOne, save, create, find, findOne, findMany\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to apply functions to\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(document: Document)\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/database/mongo/repository/base.repository.ts:146\n                \n            \n\n\n            \n                \n                    Save any changes to your document\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                                Document\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            toggleId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleId(document: any, replace: boolean)\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/database/mongo/repository/base.repository.ts:265\n                \n            \n\n\n            \n                \n                    Strip off Mongo's ObjectID and replace with string representation or in reverse\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    replace\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DOC\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, ObjectID, DeleteWriteOpResultObject } from 'mongodb';\nimport {\n  COLLECTION_KEY, CollectionProps, DBSource, FindRequest,\n  POST_KEY, PRE_KEY, UpdateByIdRequest, UpdateRequest,\n} from '../interfaces';\n\n// that class only can be extended\nexport class BaseRepository  {\n  collection: Promise>;\n  readonly options: CollectionProps;\n\n  // get options(): CollectionProps {\n  //   return Reflect.getMetadata(COLLECTION_KEY, this);\n  // }\n\n  /**\n   * Creates an instance of BaseRepository.\n   * @param {DBSource} dbSource Your MongoDB connection\n   * @memberof BaseRepository\n   */\n  constructor(public dbSource: DBSource, opts?: CollectionProps) {\n    this.options = Object.assign({}, opts, Reflect.getMetadata(COLLECTION_KEY, this));\n    if (!this.options.name) {\n      throw new Error('No name was provided for this collection');\n    }\n    this.collection = this.getCollection();\n  }\n\n  /**\n   * Finds a record by id\n   *\n   * @param {string} id\n   * @returns {Promise}\n   * @memberof BaseRepository\n   */\n  findById(id: string): Promise {\n    return this.findOne({ _id: new ObjectID(id) });\n  }\n\n  /**\n   * Find multiple documents by a list of ids\n   *\n   * @param {string[]} ids\n   * @returns {Promise}\n   * @memberof BaseRepository\n   */\n  async findManyById(ids: string[]): Promise {\n    const collection = await this.collection;\n    const query = { _id: { $in: ids.map(id => new ObjectID(id)) } };\n    const found = await collection.find(query as object).toArray();\n\n    const results: DOC[] = [];\n    for (const result of found) {\n      results.push(await this.invokeEvents(POST_KEY, ['find', 'findMany'], this.toggleId(result, false)));\n    }\n\n    return results;\n  }\n\n  /**\n   * Finds a record by a list of conditions\n   *\n   * @param {object} conditions\n   * @returns {Promise}\n   * @memberof BaseRepository\n   */\n  async findOne(conditions: object): Promise {\n    const collection = await this.collection;\n\n    let document = await collection.findOne(conditions);\n    if (document) {\n      document = this.toggleId(document, false);\n      document = await this.invokeEvents(POST_KEY, ['find', 'findOne'], document);\n      return document;\n    }\n  }\n\n  /**\n   * Find records by a list of conditions\n   *\n   * @param {FindRequest} [req={ conditions: {} }]\n   * @returns {Promise}\n   * @memberof BaseRepository\n   */\n  async find(req: FindRequest = { conditions: {} }): Promise {\n    const collection = await this.collection;\n\n    const conditions = this.toggleId(req.conditions, true);\n    let cursor = collection.find(conditions);\n\n    if (req.projection) {\n      cursor = cursor.project(req.projection);\n    }\n\n    if (req.sort) {\n      cursor = cursor.sort(req.sort);\n    }\n\n    if (req.skip) {\n      cursor = cursor.skip(req.skip);\n    }\n\n    if (req.limit) {\n      cursor = cursor.limit(req.limit);\n    }\n\n    const newDocuments = await cursor.toArray();\n    const results = [];\n\n    for (let document of newDocuments) {\n      document = this.toggleId(document, false);\n      document = await this.invokeEvents(POST_KEY, ['find', 'findMany'], document);\n      results.push(document);\n    }\n\n    return results;\n  }\n\n  /**\n   * Create a document of type T\n   *\n   * @param {DTO} document\n   * @returns {Promise}\n   * @memberof BaseRepository\n   */\n  async create(document: DTO): Promise {\n    const collection = await this.collection;\n    const eventResult: unknown = await this.invokeEvents(PRE_KEY, ['save', 'create'], document);\n    const res = await collection.insertOne(eventResult as DOC);\n\n    let newDocument = res.ops[0];\n    // @ts-ignore\n    newDocument = this.toggleId(newDocument, false);\n    newDocument = await this.invokeEvents(POST_KEY, ['save', 'create'], newDocument);\n    // @ts-ignore\n    return newDocument;\n  }\n\n  /**\n   * Save any changes to your document\n   *\n   * @param {Document} document\n   * @returns {Promise}\n   * @memberof BaseRepository\n   */\n  async save(document: Document): Promise {\n    const collection = await this.collection;\n\n    // @ts-ignore\n    const id = new ObjectID(document.id);  // flip/flop ids\n\n    const updates = await this.invokeEvents(PRE_KEY, ['save'], document);\n    delete updates.id;\n    delete updates._id;\n    const query = { _id: id };\n    const res = await collection.updateOne(query as object, { $set: updates }, { upsert: true });\n    let newDocument = await collection.findOne(query as object);\n\n    // project new items\n    if (newDocument) {\n      Object.assign(document, newDocument);\n    }\n\n    // @ts-ignore\n    newDocument.id = id.toString(); // flip flop ids back\n    // @ts-ignore\n    delete newDocument._id;\n\n    newDocument = await this.invokeEvents(POST_KEY, ['save'], newDocument);\n    return newDocument;\n  }\n\n  /**\n   * Find a record by ID and update with new values\n   *\n   * @param {string} id\n   * @param {UpdateByIdRequest} req\n   * @returns {Promise}\n   * @memberof BaseRepository\n   */\n  async findOneByIdAndUpdate(id: string, req: UpdateByIdRequest): Promise {\n    return this.findOneAndUpdate({\n      conditions: { _id: new ObjectID(id) },\n      updates: req.updates,\n      upsert: req.upsert,\n    });\n  }\n\n  /**\n   * Find a record and update with new values\n   *\n   * @param {UpdateRequest} req\n   * @returns {Promise}\n   * @memberof BaseRepository\n   */\n  async findOneAndUpdate(req: UpdateRequest): Promise {\n    const collection = await this.collection;\n    const updates = await this.invokeEvents(PRE_KEY, ['update', 'updateOne'], req.updates);\n\n    const res = await collection.findOneAndUpdate(req.conditions, updates, {\n      upsert: req.upsert,\n      returnOriginal: false,\n    });\n\n    let document = res.value;\n    document = this.toggleId(document, false);\n    document = await this.invokeEvents(POST_KEY, ['update', 'updateOne'], document);\n    return document;\n  }\n\n  /**\n   * Delete a record by ID\n   *\n   * @param {string} id\n   * @returns {Promise}\n   * @memberof BaseRepository\n   */\n  async deleteOneById(id: string): Promise {\n    return this.deleteOne({ _id: new ObjectID(id) });\n  }\n\n  /**\n   * Delete a record\n   *\n   * @param {*} conditions\n   * @returns {Promise}\n   * @memberof BaseRepository\n   */\n  async deleteOne(conditions: any): Promise {\n    const collection = await this.collection;\n\n    await this.invokeEvents(PRE_KEY, ['delete', 'deleteOne'], conditions);\n    const deleteResult = collection.deleteOne(conditions);\n    await this.invokeEvents(POST_KEY, ['delete', 'deleteOne'], deleteResult);\n\n    return deleteResult;\n  }\n\n  /**\n   * Delete multiple records\n   *\n   * @param {*} conditions\n   * @returns {Promise}\n   * @memberof BaseRepository\n   */\n  async deleteMany(conditions: any): Promise {\n    const collection = await this.collection;\n\n    await this.invokeEvents(PRE_KEY, ['delete', 'deleteMany'], conditions);\n    const deleteResult = collection.deleteMany(conditions);\n    await this.invokeEvents(POST_KEY, ['delete', 'deleteMany'], deleteResult);\n\n    return deleteResult;\n  }\n\n  /**\n   * Strip off Mongo's ObjectID and replace with string representation or in reverse\n   *\n   * @private\n   * @param {*} document\n   * @param {boolean} replace\n   * @returns {T}\n   * @memberof BaseRepository\n   */\n  protected toggleId(document: any, replace: boolean): DOC {\n    if (document && (document.id || document._id)) {\n      if (replace) {\n        document._id = new ObjectID(document.id);\n        delete document.id;\n      } else {\n        document.id = document._id.toString();\n        delete document._id;\n      }\n    }\n    return document;\n  }\n\n  /**\n   * Return a collection\n   * If the collection doesn't exist, it will create it with the given options\n   *\n   * @private\n   * @returns {Promise>}\n   * @memberof BaseRepository\n   */\n  private getCollection(): Promise> {\n    return new Promise>(async (resolve, reject) => {\n      const db = await this.dbSource.db;\n      db.collection(this.options.name, { strict: true }, async (err, collection) => {\n        let ourCollection = collection;\n        if (err) {\n          try {\n            ourCollection = await db.createCollection(this.options.name, {\n              size: this.options.size,\n              capped: this.options.capped,\n              max: this.options.max,\n            });\n          } catch (createErr) {\n            reject(createErr);\n          }\n        }\n\n        // assert indexes\n        if (this.options.indexes) {\n          for (const indexDefinition of this.options.indexes) {\n            try {\n              await ourCollection.createIndex(indexDefinition.fields, indexDefinition.options);\n            } catch (indexErr) {\n              if (\n                indexDefinition.overwrite &&\n                indexDefinition.options.name &&\n                indexErr.name === 'MongoError' &&\n                (indexErr.codeName === 'IndexKeySpecsConflict' || indexErr.codeName === 'IndexOptionsConflict')\n              ) {\n                // drop index and recreate\n                try {\n                  await ourCollection.dropIndex(indexDefinition.options.name);\n                  await ourCollection.createIndex(indexDefinition.fields, indexDefinition.options);\n                } catch (recreateErr) {\n                  reject(recreateErr);\n                }\n              } else {\n                reject(indexErr);\n              }\n            }\n          }\n        }\n\n        resolve(ourCollection);\n      });\n    });\n  }\n\n  /**\n   * Apply functions to a record based on the type of event\n   *\n   * @private\n   * @param {string} type any of the valid types, PRE_KEY POST_KEY\n   * @param {string[]} fns any of the valid functions: update, updateOne, save, create, find, findOne, findMany\n   * @param {*} document The document to apply functions to\n   * @returns {Promise}\n   * @memberof BaseRepository\n   */\n  private async invokeEvents(type: string, fns: string[], document: any): Promise {\n    for (const fn of fns) {\n      const events = Reflect.getMetadata(`${type}_${fn}`, this) || [];\n      for (const event of events) {\n        document = event.bind(this)(document);\n        if (typeof document.then === 'function') {\n          document = await document;\n        }\n      }\n    }\n\n    return document;\n  }\n\n  private exec() {\n    // good\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseSearchDto.html":{"url":"classes/BaseSearchDto.html","title":"class - BaseSearchDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseSearchDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/repository/src/dtos/base-search.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                page\n                            \n                            \n                                q\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    skip\n                                \n                                \n                                    take\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/dtos/base-search.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            q\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/dtos/base-search.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        skip\n                    \n                \n\n                \n                    \n                        getskip()\n                    \n                \n                            \n                                \n                                    Defined in libs/repository/src/dtos/base-search.dto.ts:17\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        take\n                    \n                \n\n                \n                    \n                        gettake()\n                    \n                \n                            \n                                \n                                    Defined in libs/repository/src/dtos/base-search.dto.ts:21\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ApiModelProperty } from '@nestjs/swagger';\n// import { Transform } from 'class-transformer';\n// import { IsString, IsNotEmpty, IsNumber } from 'class-validator';\n\nexport abstract class BaseSearchDto {\n  @ApiModelProperty()\n  // @IsString()\n  // @IsNotEmpty()\n  q: string;\n\n  @ApiModelProperty()\n  // @IsNumber()\n  // @IsNotEmpty()\n  // @Transform(Number)\n  page: number;\n\n  get skip() {\n    return (this.page - 1) * this.take;\n  }\n\n  get take() {\n    return 10;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CollectionProps.html":{"url":"interfaces/CollectionProps.html","title":"interface - CollectionProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CollectionProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nest-multi-tenant/src/database/mongo/interfaces/types.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        capped\n                                \n                                \n                                            Optional\n                                        indexes\n                                \n                                \n                                            Optional\n                                        max\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        size\n                                \n                                \n                                            Optional\n                                        supportTenant\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        capped\n                                    \n                                \n                                \n                                    \n                                        capped:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        indexes\n                                    \n                                \n                                \n                                    \n                                        indexes:         IndexDefinition[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IndexDefinition[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                    \n                                \n                                \n                                    \n                                        max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        supportTenant\n                                    \n                                \n                                \n                                    \n                                        supportTenant:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Db, ObjectID, MongoClient, IndexOptions } from 'mongodb';\n\nexport const COLLECTION_KEY = 'collection';\nexport const ENTITY_KEY = 'entity';\nexport const COLUMN_KEY = 'column';\nexport const PRE_KEY = 'pre';\nexport const POST_KEY = 'post';\n\nexport interface UpdateByIdRequest {\n  updates: any;\n  upsert?: boolean;\n}\n\nexport interface UpdateRequest extends UpdateByIdRequest {\n  conditions: any;\n}\n\nexport interface FindRequest {\n  conditions: any;\n  limit?: number;\n  projection?: any;\n  sort?: any;\n  skip?: number;\n}\n\nexport interface CollectionProps {\n  name: string;\n  capped?: boolean;\n  size?: number;\n  max?: number;\n  supportTenant?: boolean;\n  indexes?: IndexDefinition[];\n}\n\nexport interface IndexDefinition {\n  // The fields to index on\n  fields: { [fieldName: string]: string | any };\n\n  // index options\n  options?: IndexOptions;\n\n  // overwrite the index if it exists and isn't the same\n  overwrite?: boolean;\n}\n\nexport interface Document {\n  id?: string | ObjectID;\n  [key: string]: any;\n}\n\nexport interface DBSource {\n  client: Promise | MongoClient;\n  db: Promise | Db;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColumnCommonOptions.html":{"url":"interfaces/ColumnCommonOptions.html","title":"interface - ColumnCommonOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColumnCommonOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nest-multi-tenant/src/database/mongo/interfaces/column-options.ts\n        \n\n            \n                Description\n            \n            \n                Column options specific to all column types.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        default\n                                \n                                \n                                            Optional\n                                        generated\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        nullable\n                                \n                                \n                                            Optional\n                                        primary\n                                \n                                \n                                            Optional\n                                        select\n                                \n                                \n                                            Optional\n                                        unique\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                    \n                                \n                                \n                                    \n                                        default:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Default database value.\nNote that default value is not supported when column type is 'json' of mysql.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        generated\n                                    \n                                \n                                \n                                    \n                                        generated:     boolean | \"increment\" | \"uuid\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | \"increment\" | \"uuid\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Specifies if this column will use auto increment (sequence, generated identity).\nNote that in some databases only one column in entity can be marked as generated, and it must be a primary column.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Column name in the database.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nullable\n                                    \n                                \n                                \n                                    \n                                        nullable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Indicates if column's value can be set to NULL.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primary\n                                    \n                                \n                                \n                                    \n                                        primary:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Indicates if this column is a primary key.\nSame can be achieved when @PrimaryColumn decorator is used.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        select\n                                    \n                                \n                                \n                                    \n                                        select:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Indicates if column is always selected by QueryBuilder and find operations.\nDefault value is \"true\".\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unique\n                                    \n                                \n                                \n                                    \n                                        unique:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Specifies if column's value must be unique or not.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ColumnOptions extends ColumnCommonOptions {\n\n  /**\n   * Column type. Must be one of the value from the ColumnTypes class.\n   */\n  type?: any;\n\n  /**\n   * Column name in the database.\n   */\n  name?: string;\n\n  /**\n   * Column type's length. Used only on some column types.\n   * For example type = \"string\" and length = \"100\" means that ORM will create a column with type varchar(100).\n   */\n  length?: string|number;\n\n  /**\n   * Indicates if column's value can be set to NULL.\n   */\n  nullable?: boolean;\n\n  /**\n   * Default database value.\n   */\n  default?: any;\n\n  /**\n   * Specifies if column's value must be unique or not.\n   */\n  unique?: boolean;\n\n  /**\n   * Array of possible enumerated values.\n   */\n  // tslint:disable-next-line:ban-types\n  enum?: Array|Object;\n\n  /**\n   * Indicates if this column is an array.\n   * Can be simply set to true or array length can be specified.\n   * Supported only by postgres.\n   */\n  array?: boolean;\n\n  /**\n   * Spatial Feature Type (Geometry, Point, Polygon, etc.)\n   */\n  spatialFeatureType?: string;\n}\n\n/**\n * Column options specific to all column types.\n */\nexport interface ColumnCommonOptions {\n\n  /**\n   * Indicates if column is always selected by QueryBuilder and find operations.\n   * Default value is \"true\".\n   */\n  select?: boolean;\n\n  /**\n   * Column name in the database.\n   */\n  name?: string;\n\n  /**\n   * Indicates if this column is a primary key.\n   * Same can be achieved when @PrimaryColumn decorator is used.\n   */\n  primary?: boolean;\n\n  /**\n   * Specifies if this column will use auto increment (sequence, generated identity).\n   * Note that in some databases only one column in entity can be marked as generated, and it must be a primary column.\n   */\n  generated?: boolean|'increment'|'uuid';\n\n  /**\n   * Specifies if column's value must be unique or not.\n   */\n  unique?: boolean;\n\n  /**\n   * Indicates if column's value can be set to NULL.\n   */\n  nullable?: boolean;\n\n  /**\n   * Default database value.\n   * Note that default value is not supported when column type is 'json' of mysql.\n   */\n  default?: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColumnOptions.html":{"url":"interfaces/ColumnOptions.html","title":"interface - ColumnOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColumnOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nest-multi-tenant/src/database/mongo/interfaces/column-options.ts\n        \n\n            \n                Description\n            \n            \n                Describes all column's options.\n\n            \n\n            \n                Extends\n            \n            \n                        ColumnCommonOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        array\n                                \n                                \n                                            Optional\n                                        default\n                                \n                                \n                                            Optional\n                                        enum\n                                \n                                \n                                            Optional\n                                        length\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        nullable\n                                \n                                \n                                            Optional\n                                        spatialFeatureType\n                                \n                                \n                                            Optional\n                                        type\n                                \n                                \n                                            Optional\n                                        unique\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        array\n                                    \n                                \n                                \n                                    \n                                        array:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Indicates if this column is an array.\nCan be simply set to true or array length can be specified.\nSupported only by postgres.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                    \n                                \n                                \n                                    \n                                        default:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Default database value.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enum\n                                    \n                                \n                                \n                                    \n                                        enum:     Array | Object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array | Object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of possible enumerated values.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        length\n                                    \n                                \n                                \n                                    \n                                        length:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Column type's length. Used only on some column types.\nFor example type = \"string\" and length = \"100\" means that ORM will create a column with type varchar(100).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Column name in the database.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nullable\n                                    \n                                \n                                \n                                    \n                                        nullable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Indicates if column's value can be set to NULL.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spatialFeatureType\n                                    \n                                \n                                \n                                    \n                                        spatialFeatureType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Spatial Feature Type (Geometry, Point, Polygon, etc.)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Column type. Must be one of the value from the ColumnTypes class.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unique\n                                    \n                                \n                                \n                                    \n                                        unique:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Specifies if column's value must be unique or not.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ColumnOptions extends ColumnCommonOptions {\n\n  /**\n   * Column type. Must be one of the value from the ColumnTypes class.\n   */\n  type?: any;\n\n  /**\n   * Column name in the database.\n   */\n  name?: string;\n\n  /**\n   * Column type's length. Used only on some column types.\n   * For example type = \"string\" and length = \"100\" means that ORM will create a column with type varchar(100).\n   */\n  length?: string|number;\n\n  /**\n   * Indicates if column's value can be set to NULL.\n   */\n  nullable?: boolean;\n\n  /**\n   * Default database value.\n   */\n  default?: any;\n\n  /**\n   * Specifies if column's value must be unique or not.\n   */\n  unique?: boolean;\n\n  /**\n   * Array of possible enumerated values.\n   */\n  // tslint:disable-next-line:ban-types\n  enum?: Array|Object;\n\n  /**\n   * Indicates if this column is an array.\n   * Can be simply set to true or array length can be specified.\n   * Supported only by postgres.\n   */\n  array?: boolean;\n\n  /**\n   * Spatial Feature Type (Geometry, Point, Polygon, etc.)\n   */\n  spatialFeatureType?: string;\n}\n\n/**\n * Column options specific to all column types.\n */\nexport interface ColumnCommonOptions {\n\n  /**\n   * Indicates if column is always selected by QueryBuilder and find operations.\n   * Default value is \"true\".\n   */\n  select?: boolean;\n\n  /**\n   * Column name in the database.\n   */\n  name?: string;\n\n  /**\n   * Indicates if this column is a primary key.\n   * Same can be achieved when @PrimaryColumn decorator is used.\n   */\n  primary?: boolean;\n\n  /**\n   * Specifies if this column will use auto increment (sequence, generated identity).\n   * Note that in some databases only one column in entity can be marked as generated, and it must be a primary column.\n   */\n  generated?: boolean|'increment'|'uuid';\n\n  /**\n   * Specifies if column's value must be unique or not.\n   */\n  unique?: boolean;\n\n  /**\n   * Indicates if column's value can be set to NULL.\n   */\n  nullable?: boolean;\n\n  /**\n   * Default database value.\n   * Note that default value is not supported when column type is 'json' of mysql.\n   */\n  default?: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\n\nAwsS3Service \n\nAwsS3Service \n\n\n\nCommonService \n\nCommonService \n\n\n\nConfigService \n\nConfigService \n\n\n\nGeneratorService \n\nGeneratorService \n\n\n\nValidatorService \n\nValidatorService \n\n\n\nCommonModule\n\nCommonModule\n\nAwsS3Service  -->\n\nCommonModule->AwsS3Service \n\n\n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\nConfigService  -->\n\nCommonModule->ConfigService \n\n\n\nGeneratorService  -->\n\nCommonModule->GeneratorService \n\n\n\nValidatorService  -->\n\nCommonModule->ValidatorService \n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/common.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CommonService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AwsS3Service\n                        \n                        \n                            CommonService\n                        \n                        \n                            ConfigService\n                        \n                        \n                            GeneratorService\n                        \n                        \n                            ValidatorService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonService } from './common.service';\nimport { Module, Global, HttpModule } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\n\nimport { AwsS3Service } from './services/aws-s3.service';\nimport { ConfigService } from './services/config.service';\nimport { GeneratorService } from './services/generator.service';\nimport { ValidatorService } from './services/validator.service';\n\nconst providers = [ConfigService, ValidatorService, AwsS3Service, GeneratorService];\n\n@Global()\n\n@Module({\n  imports: [\n    HttpModule,\n    JwtModule.registerAsync({\n      imports: [\n        CommonModule,\n      ],\n      useFactory: (configService: ConfigService) => {\n        return {\n          secretOrPrivateKey: configService.get('JWT_SECRET_KEY'),\n        };\n      },\n      inject: [\n        ConfigService,\n      ],\n    }),\n  ],\n  providers: [CommonService],\n  exports: [...providers, HttpModule, CommonService],\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonService.html":{"url":"injectables/CommonService.html","title":"injectable - CommonService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CommonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/common.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CommonService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigService.html":{"url":"classes/ConfigService.html","title":"class - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/services/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getNumber\n                            \n                            \n                                isEnv\n                            \n                            \n                                typeOrmConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    nodeEnv\n                                \n                                \n                                    awsS3Config\n                                \n                                \n                                    eventSourceConfig\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/services/config.service.ts:7\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/services/config.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getNumber\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNumber(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/services/config.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEnv\n                        \n                        \n                    \n                \n            \n            \n                \nisEnv(env: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/services/config.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    env\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeOrmConfig\n                        \n                        \n                    \n                \n            \n            \n                \ntypeOrmConfig(entities: any[])\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/services/config.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TypeOrmModuleOptions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        nodeEnv\n                    \n                \n\n                \n                    \n                        getnodeEnv()\n                    \n                \n                            \n                                \n                                    Defined in libs/common/src/services/config.service.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        awsS3Config\n                    \n                \n\n                \n                    \n                        getawsS3Config()\n                    \n                \n                            \n                                \n                                    Defined in libs/common/src/services/config.service.ts:68\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        eventSourceConfig\n                    \n                \n\n                \n                    \n                        geteventSourceConfig()\n                    \n                \n                            \n                                \n                                    Defined in libs/common/src/services/config.service.ts:76\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {TypeOrmModuleOptions} from '@nestjs/typeorm';\nimport * as dotenv from 'dotenv';\nimport {join} from 'path';\nimport {IAwsConfigInterface, IEventSourceConfig} from '../interfaces';\nimport {SnakeNamingStrategy} from '../strategies/snake-naming.strategy';\n\nexport class ConfigService {\n\n  constructor() {\n    const nodeEnv = this.nodeEnv;\n    dotenv.config({\n      path: `${nodeEnv}.env`,\n    });\n\n    // Replace \\\\n with \\n to support multiline strings in AWS\n    for (const envName of Object.keys(process.env)) {\n      process.env[envName] = process.env[envName].replace(/\\\\n/g, '\\n');\n    }\n  }\n\n  public get(key: string): string {\n    return process.env[key];\n  }\n\n  public getNumber(key: string): number {\n    return Number(this.get(key));\n  }\n\n  get nodeEnv(): string {\n    return this.get('NODE_ENV') || 'development';\n  }\n\n  isEnv(env: string) {\n    return this.get('NODE_ENV') === env;\n  }\n\n  typeOrmConfig(entities: any[]): TypeOrmModuleOptions {\n    // let migrations = [__dirname + '/../../migrations/*{.ts,.js}'];\n\n    return {\n      entities,\n      keepConnectionAlive: true,\n      // @ts-ignore\n      type: this.get('DATABASE_TYPE') || 'cockroachdb',\n      host: this.get('COCK_HOST'),\n      port: this.getNumber('COCK_PORT'),\n      username: this.get('COCK_USERNAME'),\n      password: this.get('COCK_PASSWORD'),\n      database: this.get('COCK_DATABASE'),\n      synchronize: this.nodeEnv === 'development',\n      migrations: [join(__dirname, '/migrations/**{.ts,.js}')],\n      subscribers: [join(__dirname, '/subscribers/**{.ts,.js}')],\n      migrationsRun: true,\n      // @ts-ignore\n      dropSchema: this.get('DROP_DB') || (this.nodeEnv === 'development'),\n      logging: this.nodeEnv === 'development',\n      namingStrategy: new SnakeNamingStrategy(),\n      cache: {\n        type: 'ioredis',\n        options: {\n          host: this.get('REDIS_HOST'),\n          port: this.getNumber('REDIS_PORT'),\n        },\n      },\n    };\n  }\n\n  get awsS3Config(): IAwsConfigInterface {\n    return {\n      accessKeyId: this.get('AWS_S3_ACCESS_KEY_ID'),\n      secretAccessKey: this.get('AWS_S3_SECRET_ACCESS_KEY'),\n      bucketName: this.get('S3_BUCKET_NAME'),\n    };\n  }\n\n  get eventSourceConfig(): IEventSourceConfig {\n    return {\n      hostname: this.get('ES_HOSTNAME'),\n      port: this.getNumber('ES_PORT'),\n      protocol: this.get('ES_PROTOCOL'),\n      credentials: {\n        password: this.get('ES_PASSWORD'),\n        username: this.get('ES_USERNAME'),\n      },\n      poolOptions: {\n        max: this.getNumber('ES_POOL_MAX'),\n        min: this.getNumber('ES_POOL_MIN'),\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContextProvider.html":{"url":"classes/ContextProvider.html","title":"class - ContextProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContextProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/providers/context.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                _nameSpace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                _getKeyWithNamespace\n                            \n                            \n                                    Static\n                                get\n                            \n                            \n                                    Static\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            _nameSpace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'request'\n                        \n                    \n                        \n                            \n                                    Defined in libs/common/src/providers/context.provider.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            _getKeyWithNamespace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getKeyWithNamespace(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/providers/context.provider.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/providers/context.provider.ts:6\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            set\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    set(key: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/providers/context.provider.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as requestContext from 'request-context';\n\nexport class ContextProvider {\n\n  static get(key: string): T {\n    return requestContext.get(ContextProvider._getKeyWithNamespace(key));\n  }\n\n  static set(key: string, value: any): void {\n    requestContext.set(ContextProvider._getKeyWithNamespace(key), value);\n  }\n\n  // tslint:disable-next-line:variable-name\n  private static readonly _nameSpace = 'request';\n\n  private static _getKeyWithNamespace(key: string): string {\n    return `${ContextProvider._nameSpace}.${key}`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CookieSerializer.html":{"url":"injectables/CookieSerializer.html","title":"injectable - CookieSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CookieSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/providers/cookie.serializer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PassportSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserializeUser\n                            \n                            \n                                serializeUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserializeUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeserializeUser(payload: any, done: (a: any,b: any) => void)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/providers/cookie.serializer.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serializeUser\n                        \n                        \n                    \n                \n            \n            \n                \nserializeUser(user: any, done: (a: any,b: any) => void)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/providers/cookie.serializer.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@nestjs/common';\nimport {PassportSerializer} from '@nestjs/passport';\n\n@Injectable()\nexport class CookieSerializer extends PassportSerializer {\n  serializeUser(user: any, done: (a: any, b: any) => void): any {\n    done(null, user);\n  }\n\n  deserializeUser(payload: any, done: (a: any, b: any) => void): any {\n    done(null, payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nCoreService \n\nCoreService \n\n\n\nCoreModule\n\nCoreModule\n\nCoreService  -->\n\nCoreModule->CoreService \n\n\n\n\n\nCoreService\n\nCoreService\n\nCoreModule -->\n\nCoreService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/core/src/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CoreService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CoreService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CoreService } from './core.service';\n\n@Module({\n  providers: [CoreService],\n  exports: [CoreService],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CoreService.html":{"url":"injectables/CoreService.html","title":"injectable - CoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/core.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CoreService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAuthCommand.html":{"url":"classes/CreateAuthCommand.html","title":"class - CreateAuthCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAuthCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/cqrs/commands/impl/auth/create-auth.command.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ICommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                auth\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthEntity)\n                    \n                \n                        \n                            \n                                Defined in libs/core/src/cqrs/commands/impl/auth/create-auth.command.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthEntity\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/cqrs/commands/impl/auth/create-auth.command.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ICommand } from '@nestjs/cqrs';\nimport { AuthEntity } from '@graphqlcqrs/repository';\n\nexport class CreateAuthCommand implements ICommand {\n  constructor(\n    public readonly auth: AuthEntity,\n    // tslint:disable-next-line:no-empty\n  ) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAuthHandler.html":{"url":"classes/CreateAuthHandler.html","title":"class - CreateAuthHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAuthHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/cqrs/commands/handlers/auth/create-auth.handler.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authRepository: AuthRepository, publisher: EventPublisher)\n                    \n                \n                        \n                            \n                                Defined in libs/core/src/cqrs/commands/handlers/auth/create-auth.handler.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authRepository\n                                                  \n                                                        \n                                                                        AuthRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                    EventPublisher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            execute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreateAuthCommand)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/cqrs/commands/handlers/auth/create-auth.handler.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreateAuthCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Logger} from '@nestjs/common';\nimport {CommandHandler, ICommandHandler, EventPublisher} from '@nestjs/cqrs';\nimport { AuthRepository, AuthEntity } from '@graphqlcqrs/repository';\nimport { CreateAuthCommand } from '../../impl';\n\n@CommandHandler(CreateAuthCommand)\nexport class CreateAuthHandler implements ICommandHandler {\n  constructor(\n    private readonly authRepository: AuthRepository,\n    private readonly publisher: EventPublisher,\n  ) {}\n\n  async execute(command: CreateAuthCommand): Promise {\n    Logger.log('Async CreateAuthHandler...', 'CreateAuthCommand');\n    const { auth } = command;\n\n    try {\n      /* const temp = await this.authRepository.create(classToPlain(auth));\n      const saved = await this.authRepository.store(temp);\n      const result = plainToClass(AuthEntity, saved);\n      const pub = this.publisher.mergeObjectContext(result);\n\n      pub.notify(result);\n      pub.commit();\n      return result; */\n      return null;\n    } catch (error) {\n      Logger.log(error, 'CreateAuthHandler');\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DBSource.html":{"url":"interfaces/DBSource.html","title":"interface - DBSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DBSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nest-multi-tenant/src/database/mongo/interfaces/types.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        client\n                                \n                                \n                                        db\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        client\n                                    \n                                \n                                \n                                    \n                                        client:     Promise | MongoClient\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Promise | MongoClient\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        db\n                                    \n                                \n                                \n                                    \n                                        db:     Promise | Db\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Promise | Db\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Db, ObjectID, MongoClient, IndexOptions } from 'mongodb';\n\nexport const COLLECTION_KEY = 'collection';\nexport const ENTITY_KEY = 'entity';\nexport const COLUMN_KEY = 'column';\nexport const PRE_KEY = 'pre';\nexport const POST_KEY = 'post';\n\nexport interface UpdateByIdRequest {\n  updates: any;\n  upsert?: boolean;\n}\n\nexport interface UpdateRequest extends UpdateByIdRequest {\n  conditions: any;\n}\n\nexport interface FindRequest {\n  conditions: any;\n  limit?: number;\n  projection?: any;\n  sort?: any;\n  skip?: number;\n}\n\nexport interface CollectionProps {\n  name: string;\n  capped?: boolean;\n  size?: number;\n  max?: number;\n  supportTenant?: boolean;\n  indexes?: IndexDefinition[];\n}\n\nexport interface IndexDefinition {\n  // The fields to index on\n  fields: { [fieldName: string]: string | any };\n\n  // index options\n  options?: IndexOptions;\n\n  // overwrite the index if it exists and isn't the same\n  overwrite?: boolean;\n}\n\nexport interface Document {\n  id?: string | ObjectID;\n  [key: string]: any;\n}\n\nexport interface DBSource {\n  client: Promise | MongoClient;\n  db: Promise | Db;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseClient.html":{"url":"classes/DatabaseClient.html","title":"class - DatabaseClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nest-multi-tenant/src/database/mongo/mongo.client.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EventEmitter\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                client\n                            \n                            \n                                db\n                            \n                            \n                                    Private\n                                deferredClient\n                            \n                            \n                                    Private\n                                deferredDb\n                            \n                            \n                                    Private\n                                uri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                close\n                            \n                            \n                                    Async\n                                connect\n                            \n                            \n                                    Private\n                                createClient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/nest-multi-tenant/src/database/mongo/mongo.client.ts:13\n                            \n                        \n\n                \n                    \n                            Creates an instance of DatabaseClient.\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/nest-multi-tenant/src/database/mongo/mongo.client.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            db\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/nest-multi-tenant/src/database/mongo/mongo.client.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deferredClient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Deferred\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/nest-multi-tenant/src/database/mongo/mongo.client.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deferredDb\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Deferred\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/nest-multi-tenant/src/database/mongo/mongo.client.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            uri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/nest-multi-tenant/src/database/mongo/mongo.client.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/database/mongo/mongo.client.ts:53\n                \n            \n\n\n            \n                \n                    Close the connection\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    connect(uri: string, userOpts?: MongoClientOptions, client?: MongoClient | Promise)\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/database/mongo/mongo.client.ts:36\n                \n            \n\n\n            \n                \n                    Connect to the mongodb\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    uri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The uri of the MongoDB instance\n\n                                    \n                                \n                                \n                                    userOpts\n                                    \n                                            MongoClientOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional options for your MongoDb connection\n\n                                    \n                                \n                                \n                                    client\n                                    \n                                            MongoClient | Promise\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional instantiated MongoDB connection\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createClient(uri: string, userOpts?: MongoClientOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/database/mongo/mongo.client.ts:67\n                \n            \n\n\n            \n                \n                    Create a connection to the MongoDB instance\nWill retry if connection fails initially\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userOpts\n                                    \n                                            MongoClientOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventEmitter } from 'events';\nimport { Db, MongoClient, MongoClientOptions } from 'mongodb';\nimport * as retry from 'retry';\n\nimport { Deferred } from '../../utils';\n\nexport class DatabaseClient extends EventEmitter {\n  client: Promise;\n  db: Promise;\n\n  private uri: string;\n  private deferredClient: Deferred;\n  private deferredDb: Deferred;\n\n  /**\n   * Creates an instance of DatabaseClient.\n   * @memberof DatabaseClient\n   */\n  constructor() {\n    super();\n    this.deferredClient = new Deferred();\n    this.client = this.deferredClient.promise;\n\n    this.deferredDb = new Deferred();\n    this.db = this.deferredDb.promise;\n  }\n\n  /**\n   * Connect to the mongodb\n   *\n   * @param uri The uri of the MongoDB instance\n   * @param [userOpts] Optional options for your MongoDb connection\n   * @param [client] Optional instantiated MongoDB connection\n   * @memberof DatabaseClient\n   */\n  async connect(uri: string, userOpts?: MongoClientOptions, client?: MongoClient | Promise): Promise {\n    this.uri = uri;\n\n    if (client !== undefined) {\n      this.deferredClient.resolve(client);\n    } else {\n      this.deferredClient.resolve(this.createClient(this.uri, userOpts));\n    }\n\n    this.deferredDb.resolve((await this.client).db());\n    return this.db;\n  }\n\n  /**\n   * Close the connection\n   * @memberof DatabaseClient\n   */\n  async close(): Promise {\n    const client = await this.client;\n    return client.close();\n  }\n\n  /**\n   * Create a connection to the MongoDB instance\n   * Will retry if connection fails initially\n   *\n   * @private\n   * @param uri\n   * @param userOpts\n   * @memberof DatabaseClient\n   */\n  private createClient(uri: string, userOpts?: MongoClientOptions): Promise {\n    return new Promise((resolve, reject) => {\n      const operation = retry.operation();\n      const opts = Object.assign({}, { useNewUrlParser: true }, userOpts);\n      operation.attempt(async attempt => {\n        try {\n          const client = await MongoClient.connect(uri, opts);\n          this.emit('connected', client);\n          resolve(client);\n        } catch (e) {\n          if (operation.retry(e)) { return; }\n          this.emit('error', e);\n          reject(e);\n        }\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Deferred.html":{"url":"classes/Deferred.html","title":"class - Deferred","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Deferred\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nest-multi-tenant/src/utils/deferred.ts\n        \n\n            \n                Description\n            \n            \n                Deferred object based on MDN spec\nhttps://developer.mozilla.org/en-US/docs/Mozilla/JavaScript_code_modules/Promise.jsm/Deferred\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                promise\n                            \n                            \n                                reject\n                            \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/nest-multi-tenant/src/utils/deferred.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/nest-multi-tenant/src/utils/deferred.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reject\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in libs/nest-multi-tenant/src/utils/deferred.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in libs/nest-multi-tenant/src/utils/deferred.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Deferred {\n  resolve;\n  reject;\n  promise: Promise;\n\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n    Object.freeze(this);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Document.html":{"url":"interfaces/Document.html","title":"interface - Document","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Document\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nest-multi-tenant/src/database/mongo/interfaces/types.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in libs/nest-multi-tenant/src/database/mongo/interfaces/types.interface.ts:47\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string | ObjectID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | ObjectID\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Db, ObjectID, MongoClient, IndexOptions } from 'mongodb';\n\nexport const COLLECTION_KEY = 'collection';\nexport const ENTITY_KEY = 'entity';\nexport const COLUMN_KEY = 'column';\nexport const PRE_KEY = 'pre';\nexport const POST_KEY = 'post';\n\nexport interface UpdateByIdRequest {\n  updates: any;\n  upsert?: boolean;\n}\n\nexport interface UpdateRequest extends UpdateByIdRequest {\n  conditions: any;\n}\n\nexport interface FindRequest {\n  conditions: any;\n  limit?: number;\n  projection?: any;\n  sort?: any;\n  skip?: number;\n}\n\nexport interface CollectionProps {\n  name: string;\n  capped?: boolean;\n  size?: number;\n  max?: number;\n  supportTenant?: boolean;\n  indexes?: IndexDefinition[];\n}\n\nexport interface IndexDefinition {\n  // The fields to index on\n  fields: { [fieldName: string]: string | any };\n\n  // index options\n  options?: IndexOptions;\n\n  // overwrite the index if it exists and isn't the same\n  overwrite?: boolean;\n}\n\nexport interface Document {\n  id?: string | ObjectID;\n  [key: string]: any;\n}\n\nexport interface DBSource {\n  client: Promise | MongoClient;\n  db: Promise | Db;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DtoMapperUtils.html":{"url":"classes/DtoMapperUtils.html","title":"class - DtoMapperUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DtoMapperUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/dto-mapper.utils.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                generateRandomString\n                            \n                            \n                                    Static\n                                get\n                            \n                            \n                                    Static\n                                toDto\n                            \n                            \n                                    Static\n                                toDto\n                            \n                            \n                                    Static\n                                toDto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            generateRandomString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateRandomString(length: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/utils/dto-mapper.utils.ts:28\n                \n            \n\n\n            \n                \n                    generate random string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(func: () => void, defaultValue?: C)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/utils/dto-mapper.utils.ts:32\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        B\n                        C\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    func\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    defaultValue\n                                    \n                                            C\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     B | C | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            toDto\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toDto(model, entity: E, options?: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/utils/dto-mapper.utils.ts:12\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        E\n                    \n                \n            \n\n            \n                \n                    convert entity to dto class instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entity\n                                    \n                                            E\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            toDto\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toDto(model, entity: E[], options?: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/utils/dto-mapper.utils.ts:13\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        E\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entity\n                                    \n                                            E[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            toDto\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toDto(model, entity: E | E[], options?: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/utils/dto-mapper.utils.ts:14\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        E\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entity\n                                    \n                                            E | E[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | []\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as _ from 'lodash';\n\nexport class DtoMapperUtils {\n\n  /**\n   * convert entity to dto class instance\n   * @param {{new(entity: E, options: any): T}} model\n   * @param {E[] | E} entity\n   * @param options\n   * @returns {T[] | T}\n   */\n  public static toDto(model: new (entity: E, options?: any) => T, entity: E, options?: any): T;\n  public static toDto(model: new (entity: E, options?: any) => T, entity: E[], options?: any): T[];\n  public static toDto(model: new (entity: E, options?: any) => T, entity: E | E[], options?: any): T | T[] {\n    if (_.isArray(entity)) {\n      // @ts-ignore\n      return entity.map((u) => new model(u, options));\n    }\n\n    // @ts-ignore\n    return new model(entity, options);\n  }\n\n  /**\n   * generate random string\n   * @param length\n   */\n  static generateRandomString(length: number) {\n    return Math.random().toString(36).replace(/[^a-zA-Z0-9]+/g, '').substr(0, length);\n  }\n\n  static get(func: () => B, defaultValue?: C): B | C | undefined {\n    try {\n      const value = func();\n\n      if (_.isUndefined(value)) {\n        return defaultValue;\n      }\n      return value;\n    } catch {\n      return defaultValue;\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntityOptions.html":{"url":"interfaces/EntityOptions.html","title":"interface - EntityOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EntityOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nest-multi-tenant/src/database/mongo/interfaces/entity-option.interface.ts\n        \n\n            \n                Description\n            \n            \n                Describes all entity's options.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        database\n                                \n                                \n                                            Optional\n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                    \n                                \n                                \n                                    \n                                        database:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Database name. Default root db for multi tenancy.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Collection name.\nIf not specified then naming strategy will generate collection name from entity name.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface EntityOptions {\n\n  /**\n   * Collection name.\n   * If not specified then naming strategy will generate collection name from entity name.\n   */\n  name?: string;\n\n  /**\n   * Database name. Default root db for multi tenancy.\n   */\n  database?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorsInterceptor.html":{"url":"injectables/ErrorsInterceptor.html","title":"injectable - ErrorsInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorsInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/interceptors/errors.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/interceptors/errors.interceptor.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {CallHandler, ExecutionContext, HttpException, Injectable, NestInterceptor} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorsInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next.handle().pipe(catchError((error) => {\n      if (error instanceof HttpException) {\n        return Promise.resolve({\n          code: error.getStatus(),\n          message: error.getResponse(),\n        });\n      }\n      if (error.code && error.details) {\n        return Promise.resolve({\n          code: error.code,\n          message: error.details,\n        });\n      }\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventStore.html":{"url":"injectables/EventStore.html","title":"injectable - EventStore","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EventStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nestjs-event-store/src/event-store.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                category\n                            \n                            \n                                    Private\n                                eventHandlers\n                            \n                            \n                                    Private\n                                eventStore\n                            \n                            \n                                    Private\n                                    Readonly\n                                eventStoreHostUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                resolveLinkTos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                bridgeEventsTo\n                            \n                            \n                                    Async\n                                publish\n                            \n                            \n                                setEventHandlers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventStore: any, configService: IEventStoreConnectConfig, esStreamConfig: EventStoreOptionConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/nestjs-event-store/src/event-store.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventStore\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        IEventStoreConnectConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        esStreamConfig\n                                                  \n                                                        \n                                                                        EventStoreOptionConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            bridgeEventsTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bridgeEventsTo(subject: Subject)\n                \n            \n\n\n            \n                \n                    Defined in libs/nestjs-event-store/src/event-store.ts:60\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subject\n                                    \n                                            Subject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            publish\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    publish(event: T)\n                \n            \n\n\n            \n                \n                    Defined in libs/nestjs-event-store/src/event-store.ts:37\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setEventHandlers\n                        \n                        \n                    \n                \n            \n            \n                \nsetEventHandlers(eventHandlers)\n                \n            \n\n\n            \n                \n                    Defined in libs/nestjs-event-store/src/event-store.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventHandlers\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/nestjs-event-store/src/event-store.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            eventHandlers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/nestjs-event-store/src/event-store.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            eventStore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/nestjs-event-store/src/event-store.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            eventStoreHostUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/nestjs-event-store/src/event-store.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            resolveLinkTos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/nestjs-event-store/src/event-store.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { IEvent, IEventPublisher, IMessageSource } from '@nestjs/cqrs';\nimport axios from 'axios';\nimport { Subject } from 'rxjs';\nimport { EventStoreOptionConfig } from './event-store-option.config';\nimport { ProvidersConstants } from './nestjs-event-store.constant';\nimport { IEventStoreConnectConfig } from './contract/event-store-connect-config.interface';\n\n/**\n * @class EventStore\n * @description The EventStore.org bridge. By design, the domain category\n * (i.e. user) events are being subscribed to. Upon events being received,\n * internal event handlers are responsible for the handling of events.\n */\n@Injectable()\nexport class EventStore implements IEventPublisher, IMessageSource {\n  private eventStore: any;\n  private eventHandlers: object;\n  private readonly category: string | string [];\n  private readonly eventStoreHostUrl: string;\n  private readonly resolveLinkTos: boolean;\n\n  constructor(\n    @Inject(ProvidersConstants.EVENT_STORE_PROVIDER) eventStore: any,\n    @Inject(ProvidersConstants.EVENT_STORE_CONNECTION_CONFIG_PROVIDER) configService: IEventStoreConnectConfig,\n    @Inject(ProvidersConstants.EVENT_STORE_STREAM_CONFIG_PROVIDER) esStreamConfig: EventStoreOptionConfig,\n  ) {\n    this.category = esStreamConfig.name;\n    this.resolveLinkTos = esStreamConfig.resolveLinkTos;\n    this.eventStore = eventStore;\n    this.eventStore.connect(configService.tcp);\n\n    this.eventStoreHostUrl = configService.http.protocol +\n      `://${configService.tcp.hostname}:${configService.http.port}/streams/`;\n  }\n\n  async publish(event: T) {\n\n    if (event === undefined) { return; }\n    if (event === null) { return; }\n\n    // @ts-ignore\n    const category = Object.keys(event)[0];\n\n    const categoryId = event[category].id;\n    const streamName = `${category}-${categoryId}`;\n    const type = event.constructor.name;\n    try {\n      await this.eventStore.client.writeEvent(streamName, type, event);\n    } catch (err) {\n      // tslint:disable-next-line:no-console\n      console.trace(err);\n    }\n  }\n\n  /**\n   * @description Event Store bridge subscribes to domain category stream\n   * @param subject\n   */\n  async bridgeEventsTo(subject: Subject) {\n\n    if (Array.isArray(this.category)) {\n      return;\n    }\n\n    const streamName = `$ce-${this.category}`;\n    const onEvent = async (event) => {\n      if (event.isJson && typeof event.data !== 'string') {\n        const eventType = event.eventType;\n        const data = event.data;\n        event = this.eventHandlers[eventType](...Object.values(data));\n        subject.next(event);\n      } else {\n        const eventUrl =  `${this.eventStoreHostUrl}${event.metadata.$o}/${event.data.split('@')[0]}?embed=body`;\n        return axios.get(eventUrl, {\n          responseType: 'stream',\n          headers: {Accept: 'application/vnd.eventstore.atom+json'},\n        }).then((response) => {\n          const stream = response.data;\n          let rawData = '';\n          stream.on('data', (chunk) => { rawData += chunk; });\n          stream.on('end', () => {\n            const temp = JSON.parse(rawData);\n            const data = temp.content.data;\n            const eventType = temp.content.eventType;\n            event = this.eventHandlers[eventType](...Object.values(data));\n            subject.next(event);\n          });\n        });\n      }\n    };\n\n    const onDropped = (subscription, reason, error) => {\n      // tslint:disable-next-line:no-console\n      console.trace(subscription, reason, error);\n    };\n\n    try {\n      if (!Array.isArray(this.category)) {\n        await this.eventStore.client.subscribeToStream(streamName, onEvent, onDropped, this.resolveLinkTos);\n      }\n    } catch (err) {\n      // tslint:disable-next-line:no-console\n      console.trace(err);\n    }\n  }\n\n  setEventHandlers(eventHandlers) {\n    this.eventHandlers = eventHandlers;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventStoreOptionConfig.html":{"url":"interfaces/EventStoreOptionConfig.html","title":"interface - EventStoreOptionConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventStoreOptionConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nestjs-event-store/src/event-store-option.config.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        resolveLinkTos\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolveLinkTos\n                                    \n                                \n                                \n                                    \n                                        resolveLinkTos:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EventStoreOptionConfig {\n  name: string | string[];\n  resolveLinkTos?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExitInterceptor.html":{"url":"injectables/ExitInterceptor.html","title":"injectable - ExitInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExitInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/interceptors/app-exit.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    intercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/interceptors/app-exit.interceptor.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {NestInterceptor, ExecutionContext, HttpException, Injectable, CallHandler} from '@nestjs/common';\nimport { Observable, throwError } from 'rxjs';\nimport { ApolloError } from 'apollo-server-express';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ExitInterceptor implements NestInterceptor {\n  public intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next.handle()\n      .pipe(\n        catchError((e) => {\n          if (e instanceof  HttpException) {\n            return throwError(e);\n          } else {\n            return throwError(new ApolloError('Internal Error', 'INTERNAL_ERROR'));\n          }\n        }),\n      )\n      .pipe(\n        map((data) => {\n          return {data};\n        }),\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FacebookAuth.html":{"url":"classes/FacebookAuth.html","title":"class - FacebookAuth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FacebookAuth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/repository/src/entities/embeded/social.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/entities/embeded/social.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/entities/embeded/social.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/entities/embeded/social.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/entities/embeded/social.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FacebookAuth {\n\n  // @Column({ nullable: true })\n  id: string;\n\n  // @Column({ nullable: true })\n  accessToken: string;\n\n  // @Column({ nullable: true })\n  name: string;\n\n  // @Column({ nullable: true })\n  email: string;\n}\n\nexport class GoogleAuth {\n\n  // @Column({ nullable: true })\n  id: string;\n\n  // @Column({ nullable: true })\n  accessToken: string;\n\n  // @Column({ nullable: true })\n  name: string;\n\n  // @Column({ nullable: true })\n  email: string;\n}\n\nexport class LocalAuth {\n  // @IsLowercase()\n  // @Column({ nullable: true, type: 'varchar' })\n  email: string;\n\n  // @Column({ nullable: true, type: 'varchar' })\n  hashedPassword: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FacebookStrategy.html":{"url":"injectables/FacebookStrategy.html","title":"injectable - FacebookStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FacebookStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/service-auth/src/auth/strategy/facebook.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in apps/service-auth/src/auth/strategy/facebook.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/service-auth/src/auth/strategy/facebook.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { Strategy } from 'passport-facebook';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class FacebookStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly authService: AuthService) {\n    super({\n      clientID: 'FACEBOOK_APP_ID',\n      clientSecret: 'FACEBOOK_APP_SECRET',\n      callbackURL: 'http://localhost:9900/auth/facebook/callback',\n    });\n  }\n\n  async validate(email: string, password: string): Promise {\n    const user = await this.authService.validateUser(email, password);\n    console.log('user');\n\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindRequest.html":{"url":"interfaces/FindRequest.html","title":"interface - FindRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FindRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nest-multi-tenant/src/database/mongo/interfaces/types.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        conditions\n                                \n                                \n                                            Optional\n                                        limit\n                                \n                                \n                                            Optional\n                                        projection\n                                \n                                \n                                            Optional\n                                        skip\n                                \n                                \n                                            Optional\n                                        sort\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        conditions\n                                    \n                                \n                                \n                                    \n                                        conditions:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projection\n                                    \n                                \n                                \n                                    \n                                        projection:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                    \n                                \n                                \n                                    \n                                        sort:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Db, ObjectID, MongoClient, IndexOptions } from 'mongodb';\n\nexport const COLLECTION_KEY = 'collection';\nexport const ENTITY_KEY = 'entity';\nexport const COLUMN_KEY = 'column';\nexport const PRE_KEY = 'pre';\nexport const POST_KEY = 'post';\n\nexport interface UpdateByIdRequest {\n  updates: any;\n  upsert?: boolean;\n}\n\nexport interface UpdateRequest extends UpdateByIdRequest {\n  conditions: any;\n}\n\nexport interface FindRequest {\n  conditions: any;\n  limit?: number;\n  projection?: any;\n  sort?: any;\n  skip?: number;\n}\n\nexport interface CollectionProps {\n  name: string;\n  capped?: boolean;\n  size?: number;\n  max?: number;\n  supportTenant?: boolean;\n  indexes?: IndexDefinition[];\n}\n\nexport interface IndexDefinition {\n  // The fields to index on\n  fields: { [fieldName: string]: string | any };\n\n  // index options\n  options?: IndexOptions;\n\n  // overwrite the index if it exists and isn't the same\n  overwrite?: boolean;\n}\n\nexport interface Document {\n  id?: string | ObjectID;\n  [key: string]: any;\n}\n\nexport interface DBSource {\n  client: Promise | MongoClient;\n  db: Promise | Db;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeneratorService.html":{"url":"injectables/GeneratorService.html","title":"injectable - GeneratorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeneratorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/services/generator.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fileName\n                            \n                            \n                                    Public\n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fileName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fileName(ext: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/services/generator.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ext\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            uuid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uuid()\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/services/generator.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as uuid from 'uuid/v1';\n\n@Injectable()\nexport class GeneratorService {\n  public uuid(): string {\n    return uuid();\n  }\n  public fileName(ext: string) {\n    return this.uuid() + '.' + ext;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAuthHandler.html":{"url":"classes/GetAuthHandler.html","title":"class - GetAuthHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAuthHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/cqrs/queries/handlers/auth/get-auth.handler.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authRepository: AuthRepository)\n                    \n                \n                        \n                            \n                                Defined in libs/core/src/cqrs/queries/handlers/auth/get-auth.handler.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authRepository\n                                                  \n                                                        \n                                                                        AuthRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            execute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetAuthQuery)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/cqrs/queries/handlers/auth/get-auth.handler.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetAuthQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Logger} from '@nestjs/common';\nimport {IQueryHandler, QueryHandler} from '@nestjs/cqrs';\nimport { AuthRepository, AuthEntity } from '@graphqlcqrs/repository';\nimport { GetAuthQuery } from '../../';\n\n@QueryHandler(GetAuthQuery)\nexport class GetAuthHandler implements IQueryHandler {\n  constructor(\n    private readonly authRepository: AuthRepository,\n  ) {}\n\n  async execute(query: GetAuthQuery): Promise {\n    Logger.log(query, 'GetAuthQuery');\n    const { where } = query;\n    if (!where) { throw Error('Missing get inputs'); }\n    return await this.authRepository.findOne({\n      where,\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAuthQuery.html":{"url":"classes/GetAuthQuery.html","title":"class - GetAuthQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAuthQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/cqrs/queries/impl/auth/get-auth.query.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        IQuery\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                where\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(where: FindConditions)\n                    \n                \n                        \n                            \n                                Defined in libs/core/src/cqrs/queries/impl/auth/get-auth.query.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        where\n                                                  \n                                                        \n                                                                        FindConditions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            where\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FindConditions\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/cqrs/queries/impl/auth/get-auth.query.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {IQuery} from '@nestjs/cqrs';\nimport {FindConditions} from 'typeorm';\nimport { AuthEntity } from '@graphqlcqrs/repository';\n\nexport class GetAuthQuery implements IQuery {\n  constructor(\n    public readonly where: FindConditions,\n  ) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoogleAuth.html":{"url":"classes/GoogleAuth.html","title":"class - GoogleAuth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleAuth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/repository/src/entities/embeded/social.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/entities/embeded/social.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/entities/embeded/social.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/entities/embeded/social.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/entities/embeded/social.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FacebookAuth {\n\n  // @Column({ nullable: true })\n  id: string;\n\n  // @Column({ nullable: true })\n  accessToken: string;\n\n  // @Column({ nullable: true })\n  name: string;\n\n  // @Column({ nullable: true })\n  email: string;\n}\n\nexport class GoogleAuth {\n\n  // @Column({ nullable: true })\n  id: string;\n\n  // @Column({ nullable: true })\n  accessToken: string;\n\n  // @Column({ nullable: true })\n  name: string;\n\n  // @Column({ nullable: true })\n  email: string;\n}\n\nexport class LocalAuth {\n  // @IsLowercase()\n  // @Column({ nullable: true, type: 'varchar' })\n  email: string;\n\n  // @Column({ nullable: true, type: 'varchar' })\n  hashedPassword: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/GqlAuthGuard.html":{"url":"guards/GqlAuthGuard.html","title":"guard - GqlAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    GqlAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                libs/common/src/guards/gql-auth.guard.ts\n            \n\n\n\n                \n                Implements\n                \n                \n                                CanActivate\n                \n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/guards/gql-auth.guard.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext } from '@nestjs/common';\nimport { GqlExecutionContext } from '@nestjs/graphql';\n\nexport class GqlAuthGuard  implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const ctx = GqlExecutionContext.create(context).getContext();\n\n    console.log(ctx.isAuthenticated());\n    return ctx.isAuthenticated();\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GraphQLTypesLoader.html":{"url":"injectables/GraphQLTypesLoader.html","title":"injectable - GraphQLTypesLoader","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GraphQLTypesLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/graphql-gateway/src/graphql-types.loader.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getTypesFromPaths\n                            \n                            \n                                    Public\n                                    Async\n                                mergeTypesByPaths\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getTypesFromPaths\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTypesFromPaths(paths: string | string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/graphql-gateway/src/graphql-types.loader.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paths\n                                    \n                                            string | string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            mergeTypesByPaths\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mergeTypesByPaths(paths: string | string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/graphql-gateway/src/graphql-types.loader.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paths\n                                    \n                                            string | string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as glob from 'fast-glob';\nimport * as fs from 'fs';\nimport {DocumentNode} from 'graphql';\nimport { flatten } from 'lodash';\nimport { mergeTypes } from 'merge-graphql-schemas';\nimport * as util from 'util';\n\nconst readFile = util.promisify(fs.readFile);\n\n@Injectable()\nexport class GraphQLTypesLoader {\n  public async mergeTypesByPaths(paths: string | string[]): Promise {\n    if (!paths || paths.length === 0) {\n      return null;\n    }\n\n    const types = await this.getTypesFromPaths(paths);\n    const flatTypes = flatten(types);\n    // Temporary workaround: https://github.com/okgrow/merge-graphql-schemas/issues/155\n    const tempType = 'type Query { temp__: Boolean }';\n    return mergeTypes([...flatTypes, tempType], { all: true });\n  }\n\n  public async getTypesFromPaths(paths: string | string[]): Promise {\n    const filePaths = await glob.sync(paths, {\n      ignore: ['node_modules'],\n    });\n    const fileContentsPromises = filePaths.map((filePath) => {\n      return readFile(filePath.toString(), 'utf8');\n    });\n\n    return Promise.all(fileContentsPromises);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GraphqlDistributedFactory.html":{"url":"injectables/GraphqlDistributedFactory.html","title":"injectable - GraphqlDistributedFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GraphqlDistributedFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/graphql-gateway/src/graphql-distributed.factory.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                extendResolvers\n                            \n                            \n                                    Public\n                                    Async\n                                mergeOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resolversExplorerService: ResolversExplorerService, delegatesExplorerService: DelegatesExplorerService, scalarsExplorerService: ScalarsExplorerService, referencesExplorerService: ReferencesExplorerService, graphqlAstExplorer: GraphQLAstExplorer, gqlSchemaBuilder: GraphQLSchemaBuilder)\n                    \n                \n                        \n                            \n                                Defined in libs/graphql-gateway/src/graphql-distributed.factory.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resolversExplorerService\n                                                  \n                                                        \n                                                                    ResolversExplorerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        delegatesExplorerService\n                                                  \n                                                        \n                                                                    DelegatesExplorerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scalarsExplorerService\n                                                  \n                                                        \n                                                                    ScalarsExplorerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        referencesExplorerService\n                                                  \n                                                        \n                                                                        ReferencesExplorerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graphqlAstExplorer\n                                                  \n                                                        \n                                                                    GraphQLAstExplorer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gqlSchemaBuilder\n                                                  \n                                                        \n                                                                    GraphQLSchemaBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extendResolvers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extendResolvers(resolvers: any[])\n                \n            \n\n\n            \n                \n                    Defined in libs/graphql-gateway/src/graphql-distributed.factory.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resolvers\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            mergeOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mergeOptions(options: GqlModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/graphql-gateway/src/graphql-distributed.factory.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            GqlModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { buildFederatedSchema } from '@apollo/federation';\nimport { Injectable } from '@nestjs/common';\nimport { GqlModuleOptions, GraphQLAstExplorer } from '@nestjs/graphql';\nimport { GraphQLSchemaBuilder } from '@nestjs/graphql/dist/graphql-schema-builder';\nimport { DelegatesExplorerService } from '@nestjs/graphql/dist/services/delegates-explorer.service';\nimport { ResolversExplorerService } from '@nestjs/graphql/dist/services/resolvers-explorer.service';\nimport { ScalarsExplorerService } from '@nestjs/graphql/dist/services/scalars-explorer.service';\nimport { extend } from '@nestjs/graphql/dist/utils/extend.util';\nimport { removeTempField } from '@nestjs/graphql/dist/utils/remove-temp.util';\nimport { gql } from 'apollo-server-express';\nimport { ReferencesExplorerService } from './services';\n\n@Injectable()\nexport class GraphqlDistributedFactory {\n  constructor(\n    private readonly resolversExplorerService: ResolversExplorerService,\n    private readonly delegatesExplorerService: DelegatesExplorerService,\n    private readonly scalarsExplorerService: ScalarsExplorerService,\n    private readonly referencesExplorerService: ReferencesExplorerService,\n    private readonly graphqlAstExplorer: GraphQLAstExplorer,\n    private readonly gqlSchemaBuilder: GraphQLSchemaBuilder,\n  ) {}\n\n  // @ts-ignore\n  public async mergeOptions(options: GqlModuleOptions = {}): Promise {\n    const resolvers = this.extendResolvers([\n      this.resolversExplorerService.explore(),\n      this.scalarsExplorerService.explore(),\n      this.referencesExplorerService.explore(),\n    ]);\n\n    const federatedSchema = buildFederatedSchema([\n      {\n        typeDefs: gql`${options.typeDefs}`,\n        resolvers,\n      },\n    ]);\n\n    removeTempField(federatedSchema);\n    return {\n      ...options,\n      typeDefs: undefined,\n      schema: federatedSchema,\n    };\n  }\n\n  private extendResolvers(resolvers: any[]) {\n    // @ts-ignore\n    return resolvers.reduce((prev, curr) => extend(prev, curr), {});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphqlDistributedGatewayModule.html":{"url":"modules/GraphqlDistributedGatewayModule.html","title":"module - GraphqlDistributedGatewayModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphqlDistributedGatewayModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/graphql-gateway/src/graphql-distributed-gateway.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: IDistributedGatewayOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/graphql-gateway/src/graphql-distributed-gateway.module.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                IDistributedGatewayOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/graphql-gateway/src/graphql-distributed-gateway.module.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ApolloGateway } from '@apollo/gateway';\nimport { DynamicModule, Inject, Module, OnModuleInit, Optional } from '@nestjs/common';\nimport { HttpAdapterHost } from '@nestjs/core';\nimport { ApolloServer } from 'apollo-server-express';\n\nimport { IDistributedGatewayOptions } from './interfaces';\nimport { DISTRIBUTED_GATEWAY_OPTIONS } from './tokens';\n\n@Module({})\nexport class GraphqlDistributedGatewayModule implements OnModuleInit {\n\n  public static forRoot(options: IDistributedGatewayOptions): DynamicModule {\n    return {\n      module: GraphqlDistributedGatewayModule,\n      providers: [\n        {\n          provide: DISTRIBUTED_GATEWAY_OPTIONS,\n          useValue: options,\n        },\n      ],\n    };\n  }\n  private apolloServer: ApolloServer | undefined;\n\n  constructor(\n    @Optional()\n    private readonly httpAdapterHost: HttpAdapterHost,\n    @Inject(DISTRIBUTED_GATEWAY_OPTIONS)\n    private readonly options: IDistributedGatewayOptions,\n  ) {}\n\n  public async onModuleInit() {\n    if (!this.httpAdapterHost) { return; }\n    const { httpAdapter } = this.httpAdapterHost;\n\n    if (!httpAdapter) { return; }\n\n    const app = httpAdapter.getInstance();\n    const {\n      options: {\n        __exposeQueryPlanExperimental,\n        debug,\n        // @ts-ignore\n        serviceList,\n        path,\n        disableHealthCheck,\n        onHealthCheck,\n        cors,\n        bodyParserConfig,\n        installSubscriptionHandlers,\n        buildService,\n        ...rest\n      },\n    } = this;\n\n    const gateway = new ApolloGateway({\n      __exposeQueryPlanExperimental,\n      debug,\n      serviceList,\n      buildService,\n    });\n\n    this.apolloServer = new ApolloServer({\n      gateway,\n      ...rest,\n    });\n\n    this.apolloServer.applyMiddleware({\n      app,\n      path,\n      disableHealthCheck,\n      onHealthCheck,\n      cors,\n      bodyParserConfig,\n    });\n\n    if (installSubscriptionHandlers) {\n      this.apolloServer.installSubscriptionHandlers(\n        httpAdapter.getHttpServer(),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphqlDistributedModule.html":{"url":"modules/GraphqlDistributedModule.html","title":"module - GraphqlDistributedModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphqlDistributedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GraphqlDistributedModule\n\n\n\ncluster_GraphqlDistributedModule_exports\n\n\n\ncluster_GraphqlDistributedModule_providers\n\n\n\n\nGraphQLAstExplorer \n\nGraphQLAstExplorer \n\n\n\nGraphQLTypesLoader \n\nGraphQLTypesLoader \n\n\n\nGraphqlDistributedModule\n\nGraphqlDistributedModule\n\nGraphQLAstExplorer  -->\n\nGraphqlDistributedModule->GraphQLAstExplorer \n\n\n\nGraphQLTypesLoader  -->\n\nGraphqlDistributedModule->GraphQLTypesLoader \n\n\n\n\n\nGraphQLTypesLoader\n\nGraphQLTypesLoader\n\nGraphqlDistributedModule -->\n\nGraphQLTypesLoader->GraphqlDistributedModule\n\n\n\n\n\nGraphqlDistributedFactory\n\nGraphqlDistributedFactory\n\nGraphqlDistributedModule -->\n\nGraphqlDistributedFactory->GraphqlDistributedModule\n\n\n\n\n\nReferencesExplorerService\n\nReferencesExplorerService\n\nGraphqlDistributedModule -->\n\nReferencesExplorerService->GraphqlDistributedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/graphql-gateway/src/graphql-distributed.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GraphQLTypesLoader\n                        \n                        \n                            GraphqlDistributedFactory\n                        \n                        \n                            ReferencesExplorerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GraphQLAstExplorer\n                        \n                        \n                            GraphQLTypesLoader\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncOptionsProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncOptionsProvider(options: GqlModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/graphql-gateway/src/graphql-distributed.module.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            GqlModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncProviders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncProviders(options: GqlModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/graphql-gateway/src/graphql-distributed.module.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            GqlModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Provider[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: GqlModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/graphql-gateway/src/graphql-distributed.module.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            GqlModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRootAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRootAsync(options: GqlModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/graphql-gateway/src/graphql-distributed.module.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            GqlModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/graphql-gateway/src/graphql-distributed.module.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { printSchema } from '@apollo/federation';\nimport { DynamicModule, Inject, Module, OnModuleInit, Optional, Provider } from '@nestjs/common';\nimport { HttpAdapterHost } from '@nestjs/core';\nimport { MetadataScanner } from '@nestjs/core/metadata-scanner';\nimport {\n  GqlModuleAsyncOptions,\n  GqlModuleOptions,\n  GqlOptionsFactory,\n  GraphQLAstExplorer,\n  GraphQLFactory,\n} from '@nestjs/graphql';\nimport { GraphQLSchemaBuilder } from '@nestjs/graphql/dist/graphql-schema-builder';\nimport { GRAPHQL_MODULE_ID, GRAPHQL_MODULE_OPTIONS } from '@nestjs/graphql/dist/graphql.constants';\nimport { DelegatesExplorerService } from '@nestjs/graphql/dist/services/delegates-explorer.service';\nimport { ResolversExplorerService } from '@nestjs/graphql/dist/services/resolvers-explorer.service';\nimport { ScalarsExplorerService } from '@nestjs/graphql/dist/services/scalars-explorer.service';\nimport { extend } from '@nestjs/graphql/dist/utils/extend.util';\nimport { generateString } from '@nestjs/graphql/dist/utils/generate-token.util';\nimport { mergeDefaults } from '@nestjs/graphql/dist/utils/merge-defaults.util';\nimport { ApolloServer } from 'apollo-server-express';\n\nimport { GraphqlDistributedFactory } from './graphql-distributed.factory';\nimport { GraphQLTypesLoader } from './graphql-types.loader';\nimport { ReferencesExplorerService } from './services';\n\n@Module({\n  providers: [\n    GraphqlDistributedFactory,\n    GraphQLFactory,\n    MetadataScanner,\n    ResolversExplorerService,\n    DelegatesExplorerService,\n    ScalarsExplorerService,\n    ReferencesExplorerService,\n    GraphQLAstExplorer,\n    GraphQLTypesLoader,\n    GraphQLSchemaBuilder,\n  ],\n  exports: [GraphQLTypesLoader, GraphQLAstExplorer],\n})\nexport class GraphqlDistributedModule implements OnModuleInit {\n  public static forRoot(options: GqlModuleOptions = {}): DynamicModule {\n    options = mergeDefaults(options);\n    return {\n      module: GraphqlDistributedModule,\n      providers: [\n        {\n          provide: GRAPHQL_MODULE_OPTIONS,\n          useValue: options,\n        },\n      ],\n    };\n  }\n\n  public static forRootAsync(options: GqlModuleAsyncOptions): DynamicModule {\n    return {\n      module: GraphqlDistributedModule,\n      imports: options.imports,\n      providers: [\n        ...this.createAsyncProviders(options),\n        {\n          provide: GRAPHQL_MODULE_ID,\n          useValue: generateString(),\n        },\n      ],\n    };\n  }\n\n  private static createAsyncProviders(\n    options: GqlModuleAsyncOptions,\n  ): Provider[] {\n    if (options.useExisting || options.useFactory) {\n      return [this.createAsyncOptionsProvider(options)];\n    }\n\n    return [\n      this.createAsyncOptionsProvider(options),\n      // @ts-ignore\n      {\n        provide: options.useClass,\n        useClass: options.useClass,\n      },\n    ];\n  }\n\n  private static createAsyncOptionsProvider(\n    options: GqlModuleAsyncOptions,\n  ): Provider {\n    if (options.useFactory) {\n      return {\n        provide: GRAPHQL_MODULE_OPTIONS,\n        useFactory: options.useFactory,\n        inject: options.inject || [],\n      };\n    }\n\n    // @ts-ignore\n    return {\n      provide: GRAPHQL_MODULE_OPTIONS,\n      useFactory: (optionsFactory: GqlOptionsFactory) => optionsFactory.createGqlOptions(),\n      inject: [options.useExisting || options.useClass],\n    };\n  }\n\n  private apolloServer: ApolloServer | undefined;\n\n  constructor(\n    @Optional()\n    private readonly httpAdapterHost: HttpAdapterHost,\n    @Inject(GRAPHQL_MODULE_OPTIONS)\n    private readonly options: GqlModuleOptions,\n    private readonly graphqlFactory: GraphQLFactory,\n    private readonly graphqlDistributedFactory: GraphqlDistributedFactory,\n    private readonly graphqlTypesLoader: GraphQLTypesLoader,\n  ) {}\n\n  public async onModuleInit() {\n    if (!this.httpAdapterHost) {\n      return;\n    }\n    const {httpAdapter} = this.httpAdapterHost;\n\n    if (!httpAdapter) {\n      return;\n    }\n\n    const {\n      path,\n      disableHealthCheck,\n      onHealthCheck,\n      cors,\n      bodyParserConfig,\n      typePaths,\n    } = this.options;\n    const app = httpAdapter.getInstance();\n\n    // @ts-ignore\n    const typeDefs = await this.graphqlTypesLoader.getTypesFromPaths(typePaths);\n\n    const mergedTypeDefs = extend(typeDefs, this.options.typeDefs);\n    const apolloOptions = await this.graphqlDistributedFactory.mergeOptions({\n      ...this.options,\n      typeDefs: mergedTypeDefs,\n    });\n\n    if (this.options.definitions && this.options.definitions.path) {\n      await this.graphqlFactory.generateDefinitions(\n        // @ts-ignore\n        printSchema(apolloOptions.schema),\n        this.options,\n      );\n    }\n\n    this.apolloServer = new ApolloServer(apolloOptions as any);\n    this.apolloServer.applyMiddleware({\n      app,\n      path,\n      disableHealthCheck,\n      onHealthCheck,\n      cors,\n      bodyParserConfig,\n    });\n\n    if (this.options.installSubscriptionHandlers) {\n      // TL;DR \n      throw new Error('No support for subscriptions yet');\n      /*this.apolloServer.installSubscriptionHandlers(\n        httpAdapter.getHttpServer(),\n      );*/\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphqlErrors.html":{"url":"classes/GraphqlErrors.html","title":"class - GraphqlErrors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphqlErrors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/errors/index.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                notFoundError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            notFoundError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    notFoundError(prefix: string, message: string, code?: string, properties?: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/errors/index.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prefix\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    properties\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {ApolloError} from 'apollo-server-express';\n\nexport class GraphqlErrors {\n\n  static notFoundError(prefix: string, message: string, code?: string, properties?: any) {\n    const msg = `${prefix} with value ${message} not found`;\n    return new ApolloError(msg, code || 'NOT_FOUND_ERROR', properties);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HeadersDatasource.html":{"url":"classes/HeadersDatasource.html","title":"class - HeadersDatasource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HeadersDatasource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gateway-admin/src/headers.datasource.ts\n        \n\n\n            \n                Extends\n            \n            \n                    RemoteGraphQLDataSource\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                didReceiveResponse\n                            \n                            \n                                willSendRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            didReceiveResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    didReceiveResponse(response, request, context)\n                \n            \n\n\n            \n                \n                    Defined in apps/gateway-admin/src/headers.datasource.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            willSendRequest\n                        \n                        \n                    \n                \n            \n            \n                \nwillSendRequest(undefined)\n                \n            \n\n\n            \n                \n                    Defined in apps/gateway-admin/src/headers.datasource.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RemoteGraphQLDataSource } from '@apollo/gateway';\nimport * as setCookie from 'set-cookie-parser';\n\nexport class HeadersDatasource extends RemoteGraphQLDataSource {\n  willSendRequest({ request, context }) {\n\n    if (context.req) {\n      if (context.req && context.req.headers) {\n        const ctxHeaders = context.req.headers;\n\n        for (const key in ctxHeaders) {\n          if (ctxHeaders.hasOwnProperty(key)) {\n            request.http.headers.set(key, ctxHeaders[key]);\n          }\n        }\n      }\n      if (context.req && context.req.cookies) {\n        // tslint:disable-next-line:no-console\n        console.log('cookies', context.req.cookies);\n      }\n    }\n  }\n\n  async didReceiveResponse(response, request, context) {\n    const body = await super.didReceiveResponse(response, request, context);\n\n    if (context.res) {\n      const cookies = setCookie.parse(response.headers.get('Set-Cookie'), {\n        decodeValues: false,\n        map: true,\n      });\n      context.res.cookie('session.app', cookies['session.app']);\n    }\n    return body;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/filters/bad-request.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reflector\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _validationFilter\n                            \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/filters/bad-request.filter.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reflector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Reflector\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/common/src/filters/bad-request.filter.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _validationFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _validationFilter(validationErrors: ValidationError[])\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/filters/bad-request.filter.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validationErrors\n                                    \n                                                ValidationError[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: BadRequestException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/filters/bad-request.filter.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            BadRequestException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost, BadRequestException, HttpStatus } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { ValidationError } from 'class-validator';\nimport { Response } from 'express';\nimport * as _ from 'lodash';\n\n@Catch(BadRequestException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n\n  constructor(public reflector: Reflector) {}\n\n  catch(exception: BadRequestException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    let statusCode = exception.getStatus();\n    const r = exception.getResponse() as any;\n\n    if (_.isArray(r.message) && r.message[0] instanceof ValidationError) {\n      statusCode = HttpStatus.UNPROCESSABLE_ENTITY;\n      const validationErrors = r.message as ValidationError[];\n      this._validationFilter(validationErrors);\n    }\n\n    r.statusCode = statusCode;\n\n    response\n      .status(statusCode)\n      .json(r);\n  }\n\n  private _validationFilter(validationErrors: ValidationError[]) {\n    for (const validationError of validationErrors) {\n      for (const [constraintKey, constraint] of Object.entries(validationError.constraints)) {\n        // convert default messages\n        if (!constraint) {\n          // convert error message to error.fields.{key} syntax for i18n translation\n          validationError.constraints[constraintKey] = 'error.fields.' + _.snakeCase(constraintKey);\n        }\n      }\n      if (!_.isEmpty(validationError.children)) {\n        this._validationFilter(validationError.children);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthRepo.html":{"url":"interfaces/IAuthRepo.html","title":"interface - IAuthRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAuthRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/repository/src/repositories/contracts/auth-repo.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getByLocal\n                                \n                                \n                                    store\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByLocal\n                        \n                        \n                    \n                \n            \n            \n                \ngetByLocal(local: LocalAuth)\n                \n            \n\n\n            \n                \n                    Defined in libs/repository/src/repositories/contracts/auth-repo.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    local\n                                    \n                                                LocalAuth\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            store\n                        \n                        \n                    \n                \n            \n            \n                \nstore(authEntity: AuthEntity)\n                \n            \n\n\n            \n                \n                    Defined in libs/repository/src/repositories/contracts/auth-repo.interface.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authEntity\n                                    \n                                                AuthEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {AuthEntity, LocalAuth} from '../../entities';\n\nexport interface IAuthRepo {\n\n  /**\n   * @returns {Promise}\n   * @param local\n   */\n  getByLocal(local: LocalAuth): Promise;\n\n  /**\n   * @returns {Promise}\n   * @param authEntity\n   */\n  store(authEntity: AuthEntity): Promise;\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAwsConfigInterface.html":{"url":"interfaces/IAwsConfigInterface.html","title":"interface - IAwsConfigInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAwsConfigInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/interfaces/aws-config.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accessKeyId\n                                \n                                \n                                        bucketName\n                                \n                                \n                                        secretAccessKey\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessKeyId\n                                    \n                                \n                                \n                                    \n                                        accessKeyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bucketName\n                                    \n                                \n                                \n                                    \n                                        bucketName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secretAccessKey\n                                    \n                                \n                                \n                                    \n                                        secretAccessKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAwsConfigInterface {\n  accessKeyId: string;\n  secretAccessKey: string;\n  bucketName: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IConstraintErrors.html":{"url":"interfaces/IConstraintErrors.html","title":"interface - IConstraintErrors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IConstraintErrors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/filters/constraint-errors.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [constraintKey: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/filters/constraint-errors.ts:1\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        interface IConstraintErrors {\n  [constraintKey: string]: string;\n}\n\nexport const ConstraintErrors: IConstraintErrors = {\n  UQ_97672ac88f789774dd47f7c8be3: 'error.unique.email',\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDistributedGatewayOptions.html":{"url":"interfaces/IDistributedGatewayOptions.html","title":"interface - IDistributedGatewayOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDistributedGatewayOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/graphql-gateway/src/interfaces/distributed-gateway-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n\n\n\n    \n\n\n    \n        import { GatewayConfig } from '@apollo/gateway';\nimport { GqlModuleOptions } from '@nestjs/graphql';\nimport { Omit } from '@nestjs/graphql/dist/interfaces/gql-module-options.interface';\n\n// tslint:disable-next-line\nexport interface IDistributedGatewayOptions extends Pick, Omit, IServiceList {}\n\ninterface IServiceList {\n  serviceList: ServiceListItem[];\n}\n\ninterface ServiceListItem {\n name: string;\n url: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IEventSourceConfig.html":{"url":"interfaces/IEventSourceConfig.html","title":"interface - IEventSourceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IEventSourceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/interfaces/event-source-config.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        credentials\n                                \n                                \n                                            Optional\n                                        gossipSeeds\n                                \n                                \n                                        hostname\n                                \n                                \n                                            Optional\n                                        poolOptions\n                                \n                                \n                                        port\n                                \n                                \n                                            Optional\n                                        protocol\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        credentials\n                                    \n                                \n                                \n                                    \n                                        credentials:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gossipSeeds\n                                    \n                                \n                                \n                                    \n                                        gossipSeeds:     IGosipConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IGosipConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hostname\n                                    \n                                \n                                \n                                    \n                                        hostname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        poolOptions\n                                    \n                                \n                                \n                                    \n                                        poolOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        protocol\n                                    \n                                \n                                \n                                    \n                                        protocol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IEventSourceConfig {\n  hostname: string;\n  port: number;\n  protocol?: string;\n  gossipSeeds?: IGosipConfig[];\n  credentials?: {\n    username?: string,\n    password?: string,\n  };\n  poolOptions?: {\n    min?: number;\n    max?: number;\n  };\n}\n\ninterface IGosipConfig {\n  hostname: string;\n  port: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IEventStoreConnectConfig.html":{"url":"interfaces/IEventStoreConnectConfig.html","title":"interface - IEventStoreConnectConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IEventStoreConnectConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nestjs-event-store/src/contract/event-store-connect-config.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        http\n                                \n                                \n                                        tcp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        http\n                                    \n                                \n                                \n                                    \n                                        http:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tcp\n                                    \n                                \n                                \n                                    \n                                        tcp:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IEventStoreConnectConfig {\n  tcp: {\n    hostname: string;\n    port: number;\n    protocol?: string;\n    gossipSeeds?: IGosipConfig[];\n    credentials?: {\n      username?: string,\n      password?: string,\n    };\n    poolOptions?: {\n      min?: number;\n      max?: number;\n    };\n  };\n  http: {\n    protocol?: string;\n    port?: string;\n  };\n}\n\ninterface IGosipConfig {\n  hostname: string;\n  port: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IEventStoreMessage.html":{"url":"interfaces/IEventStoreMessage.html","title":"interface - IEventStoreMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IEventStoreMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nestjs-event-store/src/contract/nestjs-event-store.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        created\n                                \n                                \n                                        data\n                                \n                                \n                                        eventId\n                                \n                                \n                                        eventNumber\n                                \n                                \n                                        eventType\n                                \n                                \n                                        isJson\n                                \n                                \n                                        metadata\n                                \n                                \n                                        streamId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created\n                                    \n                                \n                                \n                                    \n                                        created:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eventId\n                                    \n                                \n                                \n                                    \n                                        eventId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eventNumber\n                                    \n                                \n                                \n                                    \n                                        eventNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eventType\n                                    \n                                \n                                \n                                    \n                                        eventType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isJson\n                                    \n                                \n                                \n                                    \n                                        isJson:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                    \n                                \n                                \n                                    \n                                        metadata:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        streamId\n                                    \n                                \n                                \n                                    \n                                        streamId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IEventStoreMessage {\n  streamId: string;\n  eventId: string;\n  eventNumber: number;\n  eventType: string;\n  created: Date;\n  metadata: object;\n  isJson: boolean;\n  data: object;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFile.html":{"url":"interfaces/IFile.html","title":"interface - IFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/interfaces/file.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        buffer\n                                \n                                \n                                        encoding\n                                \n                                \n                                        fieldname\n                                \n                                \n                                        mimetype\n                                \n                                \n                                        originalname\n                                \n                                \n                                        size\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buffer\n                                    \n                                \n                                \n                                    \n                                        buffer:     Buffer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Buffer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        encoding\n                                    \n                                \n                                \n                                    \n                                        encoding:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldname\n                                    \n                                \n                                \n                                    \n                                        fieldname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimetype\n                                    \n                                \n                                \n                                    \n                                        mimetype:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalname\n                                    \n                                \n                                \n                                    \n                                        originalname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IFile {\n  encoding: string;\n  buffer: Buffer;\n  fieldname: string;\n  mimetype: string;\n  originalname: string;\n  size: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGosipConfig.html":{"url":"interfaces/IGosipConfig.html","title":"interface - IGosipConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IGosipConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/interfaces/event-source-config.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hostname\n                                \n                                \n                                        port\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hostname\n                                    \n                                \n                                \n                                    \n                                        hostname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IEventSourceConfig {\n  hostname: string;\n  port: number;\n  protocol?: string;\n  gossipSeeds?: IGosipConfig[];\n  credentials?: {\n    username?: string,\n    password?: string,\n  };\n  poolOptions?: {\n    min?: number;\n    max?: number;\n  };\n}\n\ninterface IGosipConfig {\n  hostname: string;\n  port: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGosipConfig-1.html":{"url":"interfaces/IGosipConfig-1.html","title":"interface - IGosipConfig-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IGosipConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nestjs-event-store/src/contract/event-store-connect-config.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hostname\n                                \n                                \n                                        port\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hostname\n                                    \n                                \n                                \n                                    \n                                        hostname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IEventStoreConnectConfig {\n  tcp: {\n    hostname: string;\n    port: number;\n    protocol?: string;\n    gossipSeeds?: IGosipConfig[];\n    credentials?: {\n      username?: string,\n      password?: string,\n    };\n    poolOptions?: {\n      min?: number;\n      max?: number;\n    };\n  };\n  http: {\n    protocol?: string;\n    port?: string;\n  };\n}\n\ninterface IGosipConfig {\n  hostname: string;\n  port: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPageMetaDtoParameters.html":{"url":"interfaces/IPageMetaDtoParameters.html","title":"interface - IPageMetaDtoParameters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPageMetaDtoParameters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/repository/src/dtos/page-meta.dto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        itemCount\n                                \n                                \n                                        pageOptionsDto\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        itemCount\n                                    \n                                \n                                \n                                    \n                                        itemCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageOptionsDto\n                                    \n                                \n                                \n                                    \n                                        pageOptionsDto:         PageOptionsDto\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PageOptionsDto\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiModelProperty } from '@nestjs/swagger';\nimport { PageOptionsDto } from './page-options.dto';\n\ninterface IPageMetaDtoParameters {\n  pageOptionsDto: PageOptionsDto;\n  itemCount: number;\n}\n\nexport class PageMetaDto {\n  @ApiModelProperty()\n  readonly page: number;\n\n  @ApiModelProperty()\n  readonly take: number;\n\n  @ApiModelProperty()\n  readonly itemCount: number;\n\n  @ApiModelProperty()\n  readonly pageCount: number;\n\n  constructor({ pageOptionsDto, itemCount }: IPageMetaDtoParameters) {\n    this.page = pageOptionsDto.page;\n    this.take = pageOptionsDto.take;\n    this.itemCount = itemCount;\n    this.pageCount = Math.ceil(itemCount / this.take);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IServiceList.html":{"url":"interfaces/IServiceList.html","title":"interface - IServiceList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IServiceList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/graphql-gateway/src/interfaces/distributed-gateway-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        serviceList\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        serviceList\n                                    \n                                \n                                \n                                    \n                                        serviceList:         ServiceListItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ServiceListItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GatewayConfig } from '@apollo/gateway';\nimport { GqlModuleOptions } from '@nestjs/graphql';\nimport { Omit } from '@nestjs/graphql/dist/interfaces/gql-module-options.interface';\n\n// tslint:disable-next-line\nexport interface IDistributedGatewayOptions extends Pick, Omit, IServiceList {}\n\ninterface IServiceList {\n  serviceList: ServiceListItem[];\n}\n\ninterface ServiceListItem {\n name: string;\n url: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITenantRepo.html":{"url":"interfaces/ITenantRepo.html","title":"interface - ITenantRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITenantRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/repository/src/repositories/contracts/project-repo.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getAll\n                                \n                                \n                                    getById\n                                \n                                \n                                    getByPath\n                                \n                                \n                                    store\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll(input: Paginate)\n                \n            \n\n\n            \n                \n                    Defined in libs/repository/src/repositories/contracts/project-repo.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                Paginate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getById\n                        \n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/repository/src/repositories/contracts/project-repo.interface.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetByPath(path: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/repository/src/repositories/contracts/project-repo.interface.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            store\n                        \n                        \n                    \n                \n            \n            \n                \nstore(tenant: ProjectEntity)\n                \n            \n\n\n            \n                \n                    Defined in libs/repository/src/repositories/contracts/project-repo.interface.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tenant\n                                    \n                                                ProjectEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Paginate } from '../../dtos/paginate.dto';\nimport {ProjectEntity} from '../../entities';\n\nexport interface ITenantRepo {\n  /**\n   * @returns {Promise}\n   * @param input {Paginate}\n   */\n  getAll(input: Paginate): Promise;\n\n  /**\n   * @returns {Promise}\n   * @param id {string}\n   */\n  getById(id: string): Promise;\n\n  /**\n   * @returns {Promise}\n   * @param path {string}\n   */\n  getByPath(path: string): Promise;\n\n  /**\n   * @returns {Promise}\n   * @param tenant {ProjectEntity}\n   */\n  store(tenant: ProjectEntity): Promise;\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserRepo.html":{"url":"interfaces/IUserRepo.html","title":"interface - IUserRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUserRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/repository/src/repositories/contracts/user-repo.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getAll\n                                \n                                \n                                    getByEmail\n                                \n                                \n                                    getById\n                                \n                                \n                                    store\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll(input: Paginate)\n                \n            \n\n\n            \n                \n                    Defined in libs/repository/src/repositories/contracts/user-repo.interface.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                Paginate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByEmail\n                        \n                        \n                    \n                \n            \n            \n                \ngetByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/repository/src/repositories/contracts/user-repo.interface.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getById\n                        \n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/repository/src/repositories/contracts/user-repo.interface.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            store\n                        \n                        \n                    \n                \n            \n            \n                \nstore(userEntity: UserEntity)\n                \n            \n\n\n            \n                \n                    Defined in libs/repository/src/repositories/contracts/user-repo.interface.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userEntity\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Paginate } from '../../dtos/paginate.dto';\nimport {UserEntity, ProjectEntity} from '../../entities';\n\nexport interface IUserRepo {\n\n  /**\n   * @returns {Promise}\n   * @param id {string}\n   */\n  getById(id: string): Promise;\n\n  /**\n   * @returns {Promise}\n   * @param email\n   */\n  getByEmail(email: string): Promise;\n\n  /**\n   * @returns {Promise}\n   * @param input {Paginate}\n   */\n  getAll(input: Paginate): Promise;\n\n  /**\n   * @returns {Promise}\n   * @param userEntity\n   */\n  store(userEntity: UserEntity): Promise;\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IndexDefinition.html":{"url":"interfaces/IndexDefinition.html","title":"interface - IndexDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IndexDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nest-multi-tenant/src/database/mongo/interfaces/types.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fields\n                                \n                                \n                                            Optional\n                                        options\n                                \n                                \n                                            Optional\n                                        overwrite\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     IndexOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IndexOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overwrite\n                                    \n                                \n                                \n                                    \n                                        overwrite:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Db, ObjectID, MongoClient, IndexOptions } from 'mongodb';\n\nexport const COLLECTION_KEY = 'collection';\nexport const ENTITY_KEY = 'entity';\nexport const COLUMN_KEY = 'column';\nexport const PRE_KEY = 'pre';\nexport const POST_KEY = 'post';\n\nexport interface UpdateByIdRequest {\n  updates: any;\n  upsert?: boolean;\n}\n\nexport interface UpdateRequest extends UpdateByIdRequest {\n  conditions: any;\n}\n\nexport interface FindRequest {\n  conditions: any;\n  limit?: number;\n  projection?: any;\n  sort?: any;\n  skip?: number;\n}\n\nexport interface CollectionProps {\n  name: string;\n  capped?: boolean;\n  size?: number;\n  max?: number;\n  supportTenant?: boolean;\n  indexes?: IndexDefinition[];\n}\n\nexport interface IndexDefinition {\n  // The fields to index on\n  fields: { [fieldName: string]: string | any };\n\n  // index options\n  options?: IndexOptions;\n\n  // overwrite the index if it exists and isn't the same\n  overwrite?: boolean;\n}\n\nexport interface Document {\n  id?: string | ObjectID;\n  [key: string]: any;\n}\n\nexport interface DBSource {\n  client: Promise | MongoClient;\n  db: Promise | Db;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocalAuth.html":{"url":"classes/LocalAuth.html","title":"class - LocalAuth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocalAuth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/repository/src/entities/embeded/social.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                hashedPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/entities/embeded/social.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hashedPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/entities/embeded/social.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FacebookAuth {\n\n  // @Column({ nullable: true })\n  id: string;\n\n  // @Column({ nullable: true })\n  accessToken: string;\n\n  // @Column({ nullable: true })\n  name: string;\n\n  // @Column({ nullable: true })\n  email: string;\n}\n\nexport class GoogleAuth {\n\n  // @Column({ nullable: true })\n  id: string;\n\n  // @Column({ nullable: true })\n  accessToken: string;\n\n  // @Column({ nullable: true })\n  name: string;\n\n  // @Column({ nullable: true })\n  email: string;\n}\n\nexport class LocalAuth {\n  // @IsLowercase()\n  // @Column({ nullable: true, type: 'varchar' })\n  email: string;\n\n  // @Column({ nullable: true, type: 'varchar' })\n  hashedPassword: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/service-auth/src/auth/strategy/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in apps/service-auth/src/auth/strategy/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/service-auth/src/auth/strategy/local.strategy.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { GraphQLLocalStrategy } from 'graphql-passport';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(GraphQLLocalStrategy) {\n  constructor(private readonly authService: AuthService) {\n    super();\n  }\n\n  async validate(email: string, password: string): Promise {\n    console.log('ggggfgf')\n    if (email && password) {\n      const user = await this.authService.validateUser(email, password);\n      if (!user) {\n        throw new UnauthorizedException();\n      }\n      return user;\n    }\n    throw new UnauthorizedException();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoCoreModule.html":{"url":"modules/MongoCoreModule.html","title":"module - MongoCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoCoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MongoCoreModule\n\n\n\ncluster_MongoCoreModule_imports\n\n\n\n\nNestMultiTenantModule\n\nNestMultiTenantModule\n\n\n\nMongoCoreModule\n\nMongoCoreModule\n\nMongoCoreModule -->\n\nNestMultiTenantModule->MongoCoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/nest-multi-tenant/src/database/mongo/mongo-core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            NestMultiTenantModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncOptionsProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncOptionsProvider(options: MongoModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/database/mongo/mongo-core.module.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MongoModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            createAsyncProviders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncProviders(options: MongoModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/database/mongo/mongo-core.module.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MongoModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Provider[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(uri: string, dbName: string, clientOptions: MongoClientOptions, containerName: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/database/mongo/mongo-core.module.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    uri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    dbName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    clientOptions\n                                    \n                                            MongoClientOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_MONGO_CLIENT_OPTIONS\n                                    \n\n                                \n                                \n                                    containerName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_MONGO_CONTAINER_NAME\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRootAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRootAsync(options: MongoModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/database/mongo/mongo-core.module.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MongoModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/database/mongo/mongo-core.module.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { DynamicModule, Global, Inject, Module, OnModuleDestroy, Provider } from '@nestjs/common';\nimport { MongoClient, MongoClientOptions } from 'mongodb';\nimport * as hash from 'object-hash';\n\nimport { getClientToken, getContainerToken, getDbToken } from './mongo.util';\nimport { DEFAULT_MONGO_CLIENT_OPTIONS, DEFAULT_MONGO_CONTAINER_NAME, MONGO_CONTAINER_NAME, MONGO_MODULE_OPTIONS } from './mongo.constants';\nimport { MongoModuleAsyncOptions, MongoModuleOptions, MongoOptionsFactory } from './interfaces/mongo-options.interface';\nimport { NestMultiTenantModule } from '@juicycleff/nest-multi-tenant/nest-multi-tenant.module';\nimport { NestMultiTenantService } from '@juicycleff/nest-multi-tenant/nest-multi-tenant.service';\n\n@Global()\n@Module({\n  imports: [NestMultiTenantModule],\n})\nexport class MongoCoreModule implements OnModuleDestroy {\n  constructor(\n    @Inject(MONGO_CONTAINER_NAME) private readonly containerName: string,\n    private readonly moduleRef: ModuleRef,\n  ) {}\n\n  static forRoot(\n    uri: string,\n    dbName: string,\n    clientOptions: MongoClientOptions = DEFAULT_MONGO_CLIENT_OPTIONS,\n    containerName: string = DEFAULT_MONGO_CONTAINER_NAME,\n  ): DynamicModule {\n\n    const containerNameProvider = {\n      provide: MONGO_CONTAINER_NAME,\n      useValue: containerName,\n    };\n\n    const connectionContainerProvider = {\n      provide: getContainerToken(containerName),\n      useFactory: () => new Map(),\n    };\n\n    const clientProvider = {\n      provide: getClientToken(containerName),\n      useFactory: async (connections: Map) => {\n        const key = hash.sha1({\n          uri,\n          clientOptions,\n        });\n        if (connections.has(key)) {\n          return connections.get(key);\n        }\n        const client = new MongoClient(uri, clientOptions);\n        connections.set(key, client);\n        return await client.connect();\n      },\n      inject: [getContainerToken(containerName)],\n    };\n\n    const dbProvider = {\n      provide: getDbToken(containerName),\n      useFactory: (client: MongoClient) => client.db(dbName),\n      inject: [getClientToken(containerName)],\n    };\n\n    return {\n      module: MongoCoreModule,\n      providers: [\n        containerNameProvider,\n        connectionContainerProvider,\n        clientProvider,\n        dbProvider,\n      ],\n      exports: [clientProvider, dbProvider],\n    };\n  }\n\n  static forRootAsync(options: MongoModuleAsyncOptions): DynamicModule {\n    const mongoContainerName =\n      options.containerName || DEFAULT_MONGO_CONTAINER_NAME;\n\n    const containerNameProvider = {\n      provide: MONGO_CONTAINER_NAME,\n      useValue: mongoContainerName,\n    };\n\n    const connectionContainerProvider = {\n      provide: getContainerToken(mongoContainerName),\n      useFactory: () => new Map(),\n    };\n\n    const clientProvider = {\n      provide: getClientToken(mongoContainerName),\n      useFactory: async (\n        connections: Map,\n        mongoModuleOptions: MongoModuleOptions,\n      ) => {\n        const { uri, clientOptions } = mongoModuleOptions;\n        const key = hash.sha1({\n          uri,\n          clientOptions,\n        });\n        if (connections.has(key)) {\n          return connections.get(key);\n        }\n        const client = new MongoClient(\n          uri,\n          clientOptions || DEFAULT_MONGO_CLIENT_OPTIONS,\n        );\n        connections.set(key, client);\n        return await client.connect();\n      },\n      inject: [getContainerToken(mongoContainerName), MONGO_MODULE_OPTIONS],\n    };\n\n    const dbProvider = {\n      provide: getDbToken(mongoContainerName),\n      useFactory: (\n        mongoModuleOptions: MongoModuleOptions,\n        client: MongoClient,\n      ) => client.db(mongoModuleOptions.dbName),\n      inject: [MONGO_MODULE_OPTIONS, getClientToken(mongoContainerName)],\n    };\n\n    const asyncProviders = this.createAsyncProviders(options);\n\n    return {\n      module: MongoCoreModule,\n      imports: options.imports,\n      providers: [\n        ...asyncProviders,\n        clientProvider,\n        dbProvider,\n        containerNameProvider,\n        connectionContainerProvider,\n      ],\n      exports: [clientProvider, dbProvider],\n    };\n  }\n\n  async onModuleDestroy() {\n    const clientsMap: Map = this.moduleRef.get\n      >(getContainerToken(this.containerName));\n\n    if (clientsMap) {\n      await Promise.all(\n        [...clientsMap.values()].map(connection => connection.close()),\n      );\n    }\n  }\n\n  private static createAsyncProviders(\n    options: MongoModuleAsyncOptions,\n  ): Provider[] {\n    if (options.useExisting || options.useFactory) {\n      return [this.createAsyncOptionsProvider(options)];\n    } else if (options.useClass) {\n      return [\n        this.createAsyncOptionsProvider(options),\n        {\n          provide: options.useClass,\n          useClass: options.useClass,\n        },\n      ];\n    } else {\n      return [];\n    }\n  }\n\n  private static createAsyncOptionsProvider(\n    options: MongoModuleAsyncOptions,\n  ): Provider {\n    if (options.useFactory) {\n      return {\n        provide: MONGO_MODULE_OPTIONS,\n        useFactory: options.useFactory,\n        inject: options.inject || [],\n      };\n    } else if (options.useExisting) {\n      return {\n        provide: MONGO_MODULE_OPTIONS,\n        useFactory: async (optionsFactory: MongoOptionsFactory) =>\n          await optionsFactory.createMongoOptions(),\n        inject: [options.useExisting],\n      };\n    } else if (options.useClass) {\n      return {\n        provide: MONGO_MODULE_OPTIONS,\n        useFactory: async (optionsFactory: MongoOptionsFactory) =>\n          await optionsFactory.createMongoOptions(),\n        inject: [options.useClass],\n      };\n    } else {\n      throw new Error('Invalid MongoModule options');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoModule.html":{"url":"modules/MongoModule.html","title":"module - MongoModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/nest-multi-tenant/src/database/mongo/mongo.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Module for the MongoDB driver\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forFeature\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forFeature(collections: string[], connectionName?: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/database/mongo/mongo.module.ts:52\n                \n            \n\n\n            \n                \n                    Inject collections.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    collections\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                    \n                                        An array of the names of the collections to be injected.\n\n                                    \n                                \n                                \n                                    connectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        A unique name for the connection. If not specified, a default name\nwill be used.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(uri: string, dbName: string, options?: MongoClientOptions, connectionName?: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/database/mongo/mongo.module.ts:20\n                \n            \n\n\n            \n                \n                    Inject the MongoDB driver synchronously.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    uri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The database URI\n\n                                    \n                                \n                                \n                                    dbName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The database name\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                            MongoClientOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Options for the MongoClient that will be created\n\n                                    \n                                \n                                \n                                    connectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        A unique name for the connection.  If not specified, a default name\nwill be used.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRootAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRootAsync(options: MongoModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/database/mongo/mongo.module.ts:39\n                \n            \n\n\n            \n                \n                    Inject the MongoDB driver asynchronously, allowing any dependencies such as a configuration\nservice to be injected first.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MongoModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options for asynchrous injection\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { MongoCoreModule } from './mongo-core.module';\nimport { MongoClientOptions } from 'mongodb';\nimport { createMongoProviders } from './mongo.provider';\nimport { MongoModuleAsyncOptions } from './interfaces';\n\n/**\n * Module for the MongoDB driver\n */\n@Module({})\nexport class MongoModule {\n  /**\n   * Inject the MongoDB driver synchronously.\n   * @param uri The database URI\n   * @param dbName The database name\n   * @param options Options for the MongoClient that will be created\n   * @param connectionName A unique name for the connection.  If not specified, a default name\n   * will be used.\n   */\n  static forRoot(\n    uri: string,\n    dbName: string,\n    options?: MongoClientOptions,\n    connectionName?: string,\n  ): DynamicModule {\n    return {\n      module: MongoModule,\n      imports: [\n        MongoCoreModule.forRoot(uri, dbName, options, connectionName),\n      ],\n    };\n  }\n\n  /**\n   * Inject the MongoDB driver asynchronously, allowing any dependencies such as a configuration\n   * service to be injected first.\n   * @param options Options for asynchrous injection\n   */\n  static forRootAsync(options: MongoModuleAsyncOptions): DynamicModule {\n    return {\n      module: MongoModule,\n      imports: [MongoCoreModule.forRootAsync(options)],\n    };\n  }\n\n  /**\n   * Inject collections.\n   * @param collections An array of the names of the collections to be injected.\n   * @param connectionName A unique name for the connection. If not specified, a default name\n   * will be used.\n   */\n  static forFeature(\n    collections: string[] = [],\n    connectionName?: string,\n  ): DynamicModule {\n    const providers = createMongoProviders(connectionName, collections);\n    return {\n      module: MongoModule,\n      providers,\n      exports: providers,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MongoModuleAsyncOptions.html":{"url":"interfaces/MongoModuleAsyncOptions.html","title":"interface - MongoModuleAsyncOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MongoModuleAsyncOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nest-multi-tenant/src/database/mongo/interfaces/mongo-options.interface.ts\n        \n\n            \n                Description\n            \n            \n                Options available when creating the module asynchrously.  You should use only one of the\nuseExisting, useClass, or useFactory options for creation.\n\n            \n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        containerName\n                                \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                            Optional\n                                        useClass\n                                \n                                \n                                            Optional\n                                        useExisting\n                                \n                                \n                                            Optional\n                                        useFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        containerName\n                                    \n                                \n                                \n                                    \n                                        containerName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A unique name for the container.  If not specified, a default one will be used. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Inject any dependencies required by the Mongo module, such as a configuration service\nthat supplies the URI and database name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useClass\n                                    \n                                \n                                \n                                    \n                                        useClass:         Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Use an injectable factory class to populate the module options, such as URI and database name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useExisting\n                                    \n                                \n                                \n                                    \n                                        useExisting:         Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Reuse an injectable factory class created in another module. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A factory function that will populate the module options, such as URI and database name.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata, Type } from '@nestjs/common/interfaces';\n\n/**\n * Options that ultimately need to be provided to create a MongoDB connection\n */\nexport interface MongoModuleOptions {\n  connectionName?: string;\n  uri: string;\n  dbName: string;\n  clientOptions?: any;\n}\n\nexport interface MongoOptionsFactory {\n  createMongoOptions(): Promise | MongoModuleOptions;\n}\n\n/**\n * Options available when creating the module asynchrously.  You should use only one of the\n * useExisting, useClass, or useFactory options for creation.\n */\nexport interface MongoModuleAsyncOptions extends Pick {\n  /** A unique name for the container.  If not specified, a default one will be used. */\n  containerName?: string;\n\n  /** Reuse an injectable factory class created in another module. */\n  useExisting?: Type;\n\n  /**\n   * Use an injectable factory class to populate the module options, such as URI and database name.\n   */\n  useClass?: Type;\n\n  /**\n   * A factory function that will populate the module options, such as URI and database name.\n   */\n  useFactory?: (...args: any[]) => Promise | MongoModuleOptions;\n\n  /**\n   * Inject any dependencies required by the Mongo module, such as a configuration service\n   * that supplies the URI and database name\n   */\n  inject?: any[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MongoModuleOptions.html":{"url":"interfaces/MongoModuleOptions.html","title":"interface - MongoModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MongoModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nest-multi-tenant/src/database/mongo/interfaces/mongo-options.interface.ts\n        \n\n            \n                Description\n            \n            \n                Options that ultimately need to be provided to create a MongoDB connection\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        clientOptions\n                                \n                                \n                                            Optional\n                                        connectionName\n                                \n                                \n                                        dbName\n                                \n                                \n                                        uri\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clientOptions\n                                    \n                                \n                                \n                                    \n                                        clientOptions:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        connectionName\n                                    \n                                \n                                \n                                    \n                                        connectionName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dbName\n                                    \n                                \n                                \n                                    \n                                        dbName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata, Type } from '@nestjs/common/interfaces';\n\n/**\n * Options that ultimately need to be provided to create a MongoDB connection\n */\nexport interface MongoModuleOptions {\n  connectionName?: string;\n  uri: string;\n  dbName: string;\n  clientOptions?: any;\n}\n\nexport interface MongoOptionsFactory {\n  createMongoOptions(): Promise | MongoModuleOptions;\n}\n\n/**\n * Options available when creating the module asynchrously.  You should use only one of the\n * useExisting, useClass, or useFactory options for creation.\n */\nexport interface MongoModuleAsyncOptions extends Pick {\n  /** A unique name for the container.  If not specified, a default one will be used. */\n  containerName?: string;\n\n  /** Reuse an injectable factory class created in another module. */\n  useExisting?: Type;\n\n  /**\n   * Use an injectable factory class to populate the module options, such as URI and database name.\n   */\n  useClass?: Type;\n\n  /**\n   * A factory function that will populate the module options, such as URI and database name.\n   */\n  useFactory?: (...args: any[]) => Promise | MongoModuleOptions;\n\n  /**\n   * Inject any dependencies required by the Mongo module, such as a configuration service\n   * that supplies the URI and database name\n   */\n  inject?: any[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MongoOptionsFactory.html":{"url":"interfaces/MongoOptionsFactory.html","title":"interface - MongoOptionsFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MongoOptionsFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nest-multi-tenant/src/database/mongo/interfaces/mongo-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createMongoOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMongoOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMongoOptions()\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/database/mongo/interfaces/mongo-options.interface.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise | MongoModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ModuleMetadata, Type } from '@nestjs/common/interfaces';\n\n/**\n * Options that ultimately need to be provided to create a MongoDB connection\n */\nexport interface MongoModuleOptions {\n  connectionName?: string;\n  uri: string;\n  dbName: string;\n  clientOptions?: any;\n}\n\nexport interface MongoOptionsFactory {\n  createMongoOptions(): Promise | MongoModuleOptions;\n}\n\n/**\n * Options available when creating the module asynchrously.  You should use only one of the\n * useExisting, useClass, or useFactory options for creation.\n */\nexport interface MongoModuleAsyncOptions extends Pick {\n  /** A unique name for the container.  If not specified, a default one will be used. */\n  containerName?: string;\n\n  /** Reuse an injectable factory class created in another module. */\n  useExisting?: Type;\n\n  /**\n   * Use an injectable factory class to populate the module options, such as URI and database name.\n   */\n  useClass?: Type;\n\n  /**\n   * A factory function that will populate the module options, such as URI and database name.\n   */\n  useFactory?: (...args: any[]) => Promise | MongoModuleOptions;\n\n  /**\n   * Inject any dependencies required by the Mongo module, such as a configuration service\n   * that supplies the URI and database name\n   */\n  inject?: any[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MultiTenancyConfig.html":{"url":"interfaces/MultiTenancyConfig.html","title":"interface - MultiTenancyConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MultiTenancyConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nest-multi-tenant/src/interfaces/tenant-config.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        databaseStrategy\n                                \n                                \n                                            Optional\n                                        enabled\n                                \n                                \n                                            Optional\n                                        resolverType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        databaseStrategy\n                                    \n                                \n                                \n                                    \n                                        databaseStrategy:         TenantDatabaseStrategy\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TenantDatabaseStrategy\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolverType\n                                    \n                                \n                                \n                                    \n                                        resolverType:         TenantResolverType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TenantResolverType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TenantDatabaseStrategy, TenantResolverType } from '../tenant.enum';\n\nexport interface MultiTenancyConfig {\n  enabled?: boolean;\n  resolverType?: TenantResolverType;\n  databaseStrategy?: TenantDatabaseStrategy;\n}\n\nexport interface TenantInfo {\n  config?: MultiTenancyConfig;\n  tenant?: string;\n  connectionString?: string;\n  accessToken?: {\n    key: string;\n    secret: string;\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MultiTenantModuleOptions.html":{"url":"interfaces/MultiTenantModuleOptions.html","title":"interface - MultiTenantModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MultiTenantModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nest-multi-tenant/src/interfaces/multi-tenant-module.options.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         MultiTenancyConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MultiTenancyConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MultiTenancyConfig } from './tenant-config.interface';\n\nexport interface MultiTenantModuleOptions {\n  config: MultiTenancyConfig;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NestCasbinModule.html":{"url":"modules/NestCasbinModule.html","title":"module - NestCasbinModule","body":"\n                   \n\n\n\n\n    Modules\n    NestCasbinModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NestCasbinModule\n\n\n\ncluster_NestCasbinModule_exports\n\n\n\ncluster_NestCasbinModule_providers\n\n\n\n\nNestCasbinService \n\nNestCasbinService \n\n\n\nNestCasbinModule\n\nNestCasbinModule\n\nNestCasbinService  -->\n\nNestCasbinModule->NestCasbinService \n\n\n\n\n\nNestCasbinService\n\nNestCasbinService\n\nNestCasbinModule -->\n\nNestCasbinService->NestCasbinModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/nest-casbin/src/nest-casbin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NestCasbinService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NestCasbinService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRootAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRootAsync(dbConnectionOptions: ConnectionOptions, casbinModelPath: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-casbin/src/nest-casbin.module.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dbConnectionOptions\n                                    \n                                            ConnectionOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    casbinModelPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module, Provider } from '@nestjs/common';\nimport { Adapter, Enforcer } from 'casbin';\nimport { ConnectionOptions } from 'typeorm';\nimport TypeORMAdapter from 'typeorm-adapter';\nimport { NestCasbinService } from './nest-casbin.service';\nimport { CASBIN_ENFORCER } from './nest-casbin.constants';\n\n@Module({\n  providers: [NestCasbinService],\n  exports: [NestCasbinService],\n})\nexport class NestCasbinModule {\n  public static forRootAsync(\n    dbConnectionOptions: ConnectionOptions,\n    casbinModelPath: string,\n  ): DynamicModule {\n    const casbinEnforcerProvider: Provider = {\n      provide: CASBIN_ENFORCER,\n      useFactory: async () => {\n        const adapter = await TypeORMAdapter.newAdapter(dbConnectionOptions);\n        const enforcer = await new Enforcer();\n        await enforcer.initWithAdapter(casbinModelPath, (adapter as any) as Adapter);\n        await enforcer.loadPolicy();\n        return enforcer;\n      },\n    };\n    return {\n      exports: [casbinEnforcerProvider, NestCasbinService],\n      module: NestCasbinModule,\n      providers: [casbinEnforcerProvider, NestCasbinService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NestCasbinService.html":{"url":"injectables/NestCasbinService.html","title":"injectable - NestCasbinService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NestCasbinService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nest-casbin/src/nest-casbin.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                addPolicy\n                            \n                            \n                                    Public\n                                    Async\n                                checkPermission\n                            \n                            \n                                    Public\n                                    Async\n                                reloadPolicy\n                            \n                            \n                                    Public\n                                    Async\n                                removePolicy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(enforcer: Enforcer)\n                    \n                \n                        \n                            \n                                Defined in libs/nest-casbin/src/nest-casbin.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        enforcer\n                                                  \n                                                        \n                                                                    Enforcer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            addPolicy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addPolicy(...params: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-casbin/src/nest-casbin.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            checkPermission\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkPermission(...params: any[])\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-casbin/src/nest-casbin.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            reloadPolicy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reloadPolicy()\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-casbin/src/nest-casbin.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            removePolicy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removePolicy(...params: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-casbin/src/nest-casbin.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { Enforcer } from 'casbin';\nimport { CASBIN_ENFORCER } from './nest-casbin.constants';\n\n@Injectable()\nexport class NestCasbinService {\n  constructor(@Inject(CASBIN_ENFORCER) private readonly enforcer: Enforcer) {}\n\n  public async reloadPolicy() {\n    await this.enforcer.loadPolicy();\n  }\n\n  public async addPolicy(...params: string[]) {\n    const added = await this.enforcer.addPolicy(...params);\n    if (added) {\n      await this.enforcer.savePolicy();\n    }\n  }\n\n  public async removePolicy(...params: string[]) {\n    const removed = await this.enforcer.removePolicy(...params);\n    if (removed) {\n      await this.enforcer.savePolicy();\n    }\n  }\n\n  // TODO: edit this in adapter to make it query from database\n  // the operation will look like `await this.enforcer.getAdapter().enforce()`\n  public async checkPermission(...params: any[]) {\n    return this.enforcer.enforce(params);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NestMultiTenantModule.html":{"url":"modules/NestMultiTenantModule.html","title":"module - NestMultiTenantModule","body":"\n                   \n\n\n\n\n    Modules\n    NestMultiTenantModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NestMultiTenantModule\n\n\n\ncluster_NestMultiTenantModule_exports\n\n\n\ncluster_NestMultiTenantModule_providers\n\n\n\n\nNestMultiTenantService \n\nNestMultiTenantService \n\n\n\nNestMultiTenantModule\n\nNestMultiTenantModule\n\nNestMultiTenantService  -->\n\nNestMultiTenantModule->NestMultiTenantService \n\n\n\n\n\nNestMultiTenantService\n\nNestMultiTenantService\n\nNestMultiTenantModule -->\n\nNestMultiTenantService->NestMultiTenantModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/nest-multi-tenant/src/nest-multi-tenant.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NestMultiTenantService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NestMultiTenantService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRootAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRootAsync(options: MultiTenantModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/nest-multi-tenant.module.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MultiTenantModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  DynamicModule,\n  Module,\n} from '@nestjs/common';\nimport { NestMultiTenantService } from './nest-multi-tenant.service';\nimport { MultiTenantModuleOptions } from '@juicycleff/nest-multi-tenant/interfaces/multi-tenant-module.options';\n\n@Module({\n  providers: [NestMultiTenantService],\n  exports: [NestMultiTenantService],\n})\nexport class NestMultiTenantModule {\n  public static forRootAsync(options: MultiTenantModuleOptions): DynamicModule {\n    const { config } = options;\n\n    return {\n      exports: [...exports],\n      module: NestMultiTenantModule,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NestMultiTenantService.html":{"url":"injectables/NestMultiTenantService.html","title":"injectable - NestMultiTenantService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NestMultiTenantService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nest-multi-tenant/src/nest-multi-tenant.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createMongoOptions\n                            \n                            \n                                    Private\n                                generateMongoConnectionString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request, context)\n                    \n                \n                        \n                            \n                                Defined in libs/nest-multi-tenant/src/nest-multi-tenant.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        context\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createMongoOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createMongoOptions()\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/nest-multi-tenant.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            generateMongoConnectionString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateMongoConnectionString(uri: string, databaseName: string, replicaName: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/nest-multi-tenant.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    uri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    databaseName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    replicaName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Scope } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { CONTEXT } from '@nestjs/graphql';\nimport { TenantInfo, TenantDatabaseStrategy, MongoModuleOptions } from './';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class NestMultiTenantService {\n  constructor(\n    @Inject(REQUEST) private readonly request: Request,\n    @Inject(CONTEXT) private readonly context,\n  ) {}\n\n  async createMongoOptions(): Promise {\n    let req = null;\n\n    if (this.context) {\n      req = this.context.req;\n    } else {\n      req = this.request;\n    }\n\n    // @ts-ignore\n    const tenantInfo = req.tenantInfo as TenantInfo;\n    let uri = process.env.DATABASE_URI || 'mongodb://localhost/test';\n\n    if (tenantInfo === null || tenantInfo === undefined) {\n      return {\n        uri: process.env.DATABASE_URI || 'mongodb://localhost/test',\n        dbName: process.env.DATABASE_NAME || 'test',\n        clientOptions: {\n          useNewUrlParser: true,\n          useUnifiedTopology: true,\n        },\n      };\n    }\n\n    if (!tenantInfo.config.enabled) {\n      return {\n        uri: process.env.DATABASE_URI || 'mongodb://localhost/test',\n        dbName: process.env.DATABASE_NAME || 'test',\n        clientOptions: {\n          useNewUrlParser: true,\n          useUnifiedTopology: true,\n        },\n      };\n    }\n\n    const appConString = this.generateMongoConnectionString(\n      process.env.DATABASE_URI, tenantInfo.tenant, process.env.DATABASE_REPLICA_NAME);\n\n    if (tenantInfo.config.databaseStrategy === TenantDatabaseStrategy.DatabaseIsolation) {\n      if (tenantInfo.connectionString) {\n        uri = tenantInfo.connectionString || appConString || 'mongodb://localhost/test';\n      } else {\n        uri = appConString || 'mongodb://localhost/' + tenantInfo.tenant;\n      }\n    }\n\n    if (tenantInfo.config.databaseStrategy === TenantDatabaseStrategy.Both) {\n      if (tenantInfo.connectionString) {\n        uri = tenantInfo.connectionString || appConString || 'mongodb://localhost/test';\n      }\n    }\n\n    return {\n      uri,\n      dbName: tenantInfo.tenant || 'ultimate-backend',\n      clientOptions: {\n        useNewUrlParser: true,\n        useUnifiedTopology: true,\n      },\n    };\n  }\n\n  private generateMongoConnectionString(uri: string, databaseName: string, replicaName: string = null) {\n    return `mongodb://${uri}/${databaseName}${replicaName ? '?replicaSet=' + replicaName : ''}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NestStoreConfigProvider.html":{"url":"classes/NestStoreConfigProvider.html","title":"class - NestStoreConfigProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NestStoreConfigProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nestjs-event-store/src/nestjs-store-config.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                esConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    eventSourceConfig\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(option: IEventStoreConnectConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/nestjs-event-store/src/nestjs-store-config.provider.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        option\n                                                  \n                                                        \n                                                                        IEventStoreConnectConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            esConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IEventStoreConnectConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/nestjs-event-store/src/nestjs-store-config.provider.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        eventSourceConfig\n                    \n                \n\n                \n                    \n                        geteventSourceConfig()\n                    \n                \n                            \n                                \n                                    Defined in libs/nestjs-event-store/src/nestjs-store-config.provider.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { IEventStoreConnectConfig } from './contract/event-store-connect-config.interface';\n\nexport class NestStoreConfigProvider {\n  private readonly esConfig: IEventStoreConnectConfig;\n  constructor(option: IEventStoreConnectConfig) {\n    this.esConfig = option;\n  }\n\n  get eventSourceConfig(): IEventStoreConnectConfig {\n    return this.esConfig;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NestjsEventStore.html":{"url":"classes/NestjsEventStore.html","title":"class - NestjsEventStore","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NestjsEventStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nestjs-event-store/src/nestjs-event-store.class.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                connect\n                            \n                            \n                                getClient\n                            \n                            \n                                newEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/nestjs-event-store/src/nestjs-event-store.class.ts:7\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in libs/nestjs-event-store/src/nestjs-event-store.class.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     this\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect(config)\n                \n            \n\n\n            \n                \n                    Defined in libs/nestjs-event-store/src/nestjs-event-store.class.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getClient\n                        \n                        \n                    \n                \n            \n            \n                \ngetClient()\n                \n            \n\n\n            \n                \n                    Defined in libs/nestjs-event-store/src/nestjs-event-store.class.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newEvent\n                        \n                        \n                    \n                \n            \n            \n                \nnewEvent(name, payload)\n                \n            \n\n\n            \n                \n                    Defined in libs/nestjs-event-store/src/nestjs-event-store.class.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    Indexable\n        \n            \n                \n                    \n                        [x: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in libs/nestjs-event-store/src/nestjs-event-store.class.ts:6\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        import { TCPClient, EventFactory} from 'geteventstore-promise2';\n\n/**\n * @description Event store setup from eventstore.com\n */\nexport class NestjsEventStore {\n  [x: string]: any;\n\n  constructor() {\n    // @ts-ignore\n    this.type = 'event-store';\n    // @ts-ignore\n    this.eventFactory = new EventFactory();\n  }\n\n  connect(config) {\n    // @ts-ignore\n    this.client = new TCPClient(config);\n    return this;\n  }\n\n  getClient() {\n    return this.client;\n  }\n\n  newEvent(name, payload) {\n    return this.eventFactory.newEvent(name, payload);\n  }\n\n  close() {\n    this.client.close();\n    return this;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NestjsEventStoreModule.html":{"url":"modules/NestjsEventStoreModule.html","title":"module - NestjsEventStoreModule","body":"\n                   \n\n\n\n\n    Modules\n    NestjsEventStoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NestjsEventStoreModule\n\n\n\ncluster_NestjsEventStoreModule_exports\n\n\n\ncluster_NestjsEventStoreModule_providers\n\n\n\n\nNestjsEventStoreService \n\nNestjsEventStoreService \n\n\n\nNestjsEventStoreModule\n\nNestjsEventStoreModule\n\nNestjsEventStoreService  -->\n\nNestjsEventStoreModule->NestjsEventStoreService \n\n\n\n\n\nNestjsEventStoreService\n\nNestjsEventStoreService\n\nNestjsEventStoreModule -->\n\nNestjsEventStoreService->NestjsEventStoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/nestjs-event-store/src/nestjs-event-store.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NestjsEventStoreService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NestjsEventStoreService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forFeature\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forFeature(config: EventStoreOptionConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/nestjs-event-store/src/nestjs-event-store.module.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                EventStoreOptionConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(option: IEventStoreConnectConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/nestjs-event-store/src/nestjs-event-store.module.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                IEventStoreConnectConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Global, Module } from '@nestjs/common';\nimport { NestjsEventStoreService } from './nestjs-event-store.service';\nimport { EventStoreOptionConfig } from './event-store-option.config';\nimport { ProvidersConstants } from './nestjs-event-store.constant';\nimport { EventStore } from './event-store';\nimport { IEventStoreConnectConfig } from './contract/event-store-connect-config.interface';\n\n@Global()\n@Module({\n  providers: [NestjsEventStoreService],\n  exports: [NestjsEventStoreService],\n})\nexport class NestjsEventStoreModule {\n  static forRoot(option: IEventStoreConnectConfig): DynamicModule {\n    return {\n      module: NestjsEventStoreModule,\n      providers: [\n        {\n          provide: ProvidersConstants.EVENT_STORE_CONNECTION_CONFIG_PROVIDER,\n          useValue: {\n            ...option,\n          },\n        },\n      ],\n    };\n  }\n\n  static forFeature(config: EventStoreOptionConfig): DynamicModule {\n\n    if (config === undefined || config === null) {\n      config = {\n        name: 'DefaultStream',\n      };\n    }\n\n    return {\n      module: NestjsEventStoreModule,\n      providers: [\n        {\n          provide: ProvidersConstants.EVENT_STORE_STREAM_CONFIG_PROVIDER,\n          useValue: {\n            ...config,\n          },\n        },\n        EventStore,\n      ],\n      exports: [\n        EventStore,\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NestjsEventStoreService.html":{"url":"injectables/NestjsEventStoreService.html","title":"injectable - NestjsEventStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NestjsEventStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nestjs-event-store/src/nestjs-event-store.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/nestjs-event-store/src/nestjs-event-store.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { NestjsEventStore } from './nestjs-event-store.class';\nimport { ProvidersConstants } from './nestjs-event-store.constant';\n\n@Injectable()\nexport class NestjsEventStoreService {\n  constructor() {\n    return {\n      provide: ProvidersConstants.EVENT_STORE_PROVIDER,\n      useFactory: (\n        eventStoreConfig?: any,\n      ): any => {\n        if (eventStoreConfig === 'EVENT_STORE_CONFIG_USE_ENV') {\n          return new NestjsEventStore();\n        }\n      },\n      inject: ['EVENT_STORE_CONFIG'],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFoundError.html":{"url":"classes/NotFoundError.html","title":"class - NotFoundError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFoundError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/errors/not-found.error.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ApolloError\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, properties?: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/errors/not-found.error.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApolloError} from 'apollo-server-express';\n\nexport class NotFoundError extends ApolloError {\n  constructor(message: string, properties?: { [key: string]: any }) {\n    super(message, 'NOT_FOUND_ERROR', properties);\n    Object.defineProperty(this, 'name', {value: 'NotFoundError'});\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageMetaDto.html":{"url":"classes/PageMetaDto.html","title":"class - PageMetaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageMetaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/repository/src/dtos/page-meta.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                itemCount\n                            \n                            \n                                    Readonly\n                                page\n                            \n                            \n                                    Readonly\n                                pageCount\n                            \n                            \n                                    Readonly\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: IPageMetaDtoParameters)\n                    \n                \n                        \n                            \n                                Defined in libs/repository/src/dtos/page-meta.dto.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        IPageMetaDtoParameters\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            itemCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/dtos/page-meta.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/dtos/page-meta.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            pageCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/dtos/page-meta.dto.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            take\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/dtos/page-meta.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from '@nestjs/swagger';\nimport { PageOptionsDto } from './page-options.dto';\n\ninterface IPageMetaDtoParameters {\n  pageOptionsDto: PageOptionsDto;\n  itemCount: number;\n}\n\nexport class PageMetaDto {\n  @ApiModelProperty()\n  readonly page: number;\n\n  @ApiModelProperty()\n  readonly take: number;\n\n  @ApiModelProperty()\n  readonly itemCount: number;\n\n  @ApiModelProperty()\n  readonly pageCount: number;\n\n  constructor({ pageOptionsDto, itemCount }: IPageMetaDtoParameters) {\n    this.page = pageOptionsDto.page;\n    this.take = pageOptionsDto.take;\n    this.itemCount = itemCount;\n    this.pageCount = Math.ceil(itemCount / this.take);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageOptionsDto.html":{"url":"classes/PageOptionsDto.html","title":"class - PageOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/repository/src/dtos/page-options.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                order\n                            \n                            \n                                    Readonly\n                                page\n                            \n                            \n                                    Readonly\n                                    Optional\n                                q\n                            \n                            \n                                    Readonly\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    skip\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            order\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Order\n\n                        \n                    \n                    \n                        \n                            Default value : Order.ASC\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelPropertyOptional({enum: Order, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/dtos/page-options.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelPropertyOptional({minimum: 1, default: 1})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/dtos/page-options.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            q\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/dtos/page-options.dto.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            take\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelPropertyOptional({minimum: 1, maximum: 50, default: 10})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/dtos/page-options.dto.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        skip\n                    \n                \n\n                \n                    \n                        getskip()\n                    \n                \n                            \n                                \n                                    Defined in libs/repository/src/dtos/page-options.dto.ts:38\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ApiModelPropertyOptional } from '@nestjs/swagger';\n// import { Type } from 'class-transformer';\n// import { IsEnum, IsInt, Min, IsOptional, Max, IsString, IsNotEmpty } from 'class-validator';\n\nimport { Order } from '../enums';\n\nexport class PageOptionsDto {\n  @ApiModelPropertyOptional({\n    enum: Order,\n    default: Order.ASC,\n  })\n  // @IsEnum(Order)\n  // @IsOptional()\n  readonly order: Order = Order.ASC;\n\n  @ApiModelPropertyOptional({\n    minimum: 1,\n    default: 1,\n  })\n  // @Type(() => Number)\n  // @IsInt()\n  // @Min(1)\n  // @IsOptional()\n  readonly page: number = 1;\n\n  @ApiModelPropertyOptional({\n    minimum: 1,\n    maximum: 50,\n    default: 10,\n  })\n  // @Type(() => Number)\n  // @IsInt()\n  // @Min(10)\n  // @Max(50)\n  // @IsOptional()\n  readonly take: number = 10;\n\n  get skip(): number {\n    return (this.page - 1) * this.take;\n  }\n\n  @ApiModelPropertyOptional()\n  // @IsString()\n  // @IsNotEmpty()\n  // @IsOptional()\n  readonly q?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Paginate.html":{"url":"classes/Paginate.html","title":"class - Paginate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Paginate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/repository/src/dtos/paginate.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                first\n                            \n                            \n                                    Optional\n                                offset\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            first\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/dtos/paginate.dto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            offset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/dtos/paginate.dto.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Paginate {\n  first?: number;\n  offset?: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProjectEntity.html":{"url":"classes/ProjectEntity.html","title":"class - ProjectEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProjectEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/repository/src/entities/project.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                name\n                            \n                            \n                                owner\n                            \n                            \n                                    Optional\n                                toDtoClass\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                deleted\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                    Abstract\n                                    Optional\n                                toDtoClass\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                beforeInsert\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                toDto\n                            \n                            \n                                updateDates\n                            \n                            \n                                updateRemove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/entities/project.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/entities/project.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/entities/project.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            toDtoClass\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in libs/repository/src/entities/project.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectID\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ObjectIdColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Optional\n                            toDtoClass\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:31\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            beforeInsert\n                        \n                        \n                    \n                \n            \n            \n                \nbeforeInsert()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Before('update')\n                \n            \n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:42\n\n                \n            \n\n\n            \n                \n                    Soft delete\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toDto\n                        \n                        \n                    \n                \n            \n            \n                \ntoDto(options?: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateDates\n                        \n                        \n                    \n                \n            \n            \n                \nupdateDates()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Before('update')\n                \n            \n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateRemove\n                        \n                        \n                    \n                \n            \n            \n                \nupdateRemove()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Before('remove')\n                \n            \n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:57\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {ProjectResponseDto} from '../dtos/response';\nimport {BaseEntity} from './base-entity';\nimport { UserEntity } from './user.entity';\nimport { Entity } from '@juicycleff/nest-multi-tenant/database/mongo/decorators/entity.decorator';\nimport { Column } from 'typeorm';\n\n@Entity({ name: 'project' })\nexport class ProjectEntity extends BaseEntity {\n\n  // @IsNotEmpty()\n  @Column()\n  name: string;\n\n  @Column()\n  description?: string;\n\n  @Column(type => UserEntity)\n  owner: UserEntity;\n\n  toDtoClass?: new(entity: BaseEntity, options?: any) => ProjectResponseDto;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProjectModule.html":{"url":"modules/ProjectModule.html","title":"module - ProjectModule","body":"\n                   \n\n\n\n\n    Modules\n    ProjectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProjectModule\n\n\n\ncluster_ProjectModule_providers\n\n\n\n\nProjectService\n\nProjectService\n\n\n\nProjectModule\n\nProjectModule\n\nProjectModule -->\n\nProjectService->ProjectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/service-project/src/project/project.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProjectService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProjectService } from './project.service';\nimport { ProjectResolver } from './project.resolver';\n\n@Module({\n  providers: [ProjectService, ProjectResolver]\n})\nexport class ProjectModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectRepository.html":{"url":"injectables/ProjectRepository.html","title":"injectable - ProjectRepository","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProjectRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/repository/src/repositories/project.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collection\n                            \n                            \n                                    Public\n                                dbSource\n                            \n                            \n                                    Readonly\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteMany\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                deleteOneById\n                            \n                            \n                                    Private\n                                exec\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                findById\n                            \n                            \n                                    Async\n                                findManyById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneAndUpdate\n                            \n                            \n                                    Async\n                                findOneByIdAndUpdate\n                            \n                            \n                                    Private\n                                getCollection\n                            \n                            \n                                    Private\n                                    Async\n                                invokeEvents\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Protected\n                                toggleId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: MongoClient, db: Db)\n                    \n                \n                        \n                            \n                                Defined in libs/repository/src/repositories/project.repository.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    MongoClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    Db\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: DTO)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:126\n\n                \n            \n\n\n            \n                \n                    Create a document of type T\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            DTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteMany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMany(conditions: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:246\n\n                \n            \n\n\n            \n                \n                    Delete multiple records\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(conditions: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:229\n\n                \n            \n\n\n            \n                \n                    Delete a record\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:218\n\n                \n            \n\n\n            \n                \n                    Delete a record by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            exec\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    exec()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:358\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(req: FindRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:85\n\n                \n            \n\n\n            \n                \n                    Find records by a list of conditions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                FindRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        { conditions: {} }\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:36\n\n                \n            \n\n\n            \n                \n                    Finds a record by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyById(ids: string[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:47\n\n                \n            \n\n\n            \n                \n                    Find multiple documents by a list of ids\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(conditions: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:67\n\n                \n            \n\n\n            \n                \n                    Finds a record by a list of conditions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneAndUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneAndUpdate(req: UpdateRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:196\n\n                \n            \n\n\n            \n                \n                    Find a record and update with new values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                UpdateRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByIdAndUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdAndUpdate(id: string, req: UpdateByIdRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:181\n\n                \n            \n\n\n            \n                \n                    Find a record by ID and update with new values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                UpdateByIdRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getCollection\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCollection()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:286\n\n                \n            \n\n\n            \n                \n                    Return a collection\nIf the collection doesn't exist, it will create it with the given options\n\n\n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            invokeEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    invokeEvents(type: string, fns: string[], document: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:344\n\n                \n            \n\n\n            \n                \n                    Apply functions to a record based on the type of event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        any of the valid types, PRE_KEY POST_KEY\n\n                                    \n                                \n                                \n                                    fns\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        any of the valid functions: update, updateOne, save, create, find, findOne, findMany\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to apply functions to\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(document: Document)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:146\n\n                \n            \n\n\n            \n                \n                    Save any changes to your document\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                                Document\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            toggleId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleId(document: any, replace: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:265\n\n                \n            \n\n\n            \n                \n                    Strip off Mongo's ObjectID and replace with string representation or in reverse\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    replace\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DOC\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise>\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseRepository\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseRepository:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dbSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DBSource\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseRepository\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseRepository:21\n\n                            \n                        \n\n                \n                    \n                        Your MongoDB connection\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CollectionProps\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseRepository\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseRepository:10\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Db, MongoClient } from 'mongodb';\nimport { BaseRepository, EntityRepository, InjectClient, InjectDb } from '@juicycleff/nest-multi-tenant';\nimport { ProjectEntity } from '../entities';\n\n@Injectable()\n@EntityRepository({ name: 'project' })\nexport class ProjectRepository extends BaseRepository {\n  constructor(\n    @InjectClient() private readonly client: MongoClient,\n    @InjectDb() private readonly db: Db,\n  ) {\n    super({\n      client,\n      db,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProjectResolver.html":{"url":"classes/ProjectResolver.html","title":"class - ProjectResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProjectResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/service-project/src/project/project.resolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProject\n                            \n                            \n                                    Async\n                                owner\n                            \n                            \n                                    Async\n                                project\n                            \n                            \n                                    Async\n                                projects\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createProject(input: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation()\n                \n            \n\n            \n                \n                    Defined in apps/service-project/src/project/project.resolver.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            owner\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    owner(project: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveProperty('owner')\n                \n            \n\n            \n                \n                    Defined in apps/service-project/src/project/project.resolver.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            project\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    project(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/service-project/src/project/project.resolver.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            projects\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    projects(paginate: Paginate)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query()\n                \n            \n\n            \n                \n                    Defined in apps/service-project/src/project/project.resolver.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paginate\n                                    \n                                                Paginate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Mutation, Parent, Query, ResolveProperty, Resolver } from '@nestjs/graphql';\n// import { plainToClass } from 'class-transformer';\nimport { Paginate } from '@graphqlcqrs/repository/dtos/paginate.dto';\n\n@Resolver('Project')\nexport class ProjectResolver {\n  @Mutation()\n  async createProject(@Args('input') input: any): Promise {\n    // const result = await this.projectService.create(input, user);\n    return null; // plainToClass(, result);\n  }\n\n  @Query()\n  async project(@Args('id') id: string): Promise {\n    return null; // await this.projectService.findOne({ id });\n  }\n\n  @Query()\n  async projects(@Args('input') paginate: Paginate): Promise {\n    return null; // await this.projectService.findAll(null, paginate);\n  }\n\n  @ResolveProperty('owner')\n  async owner(@Parent() project: any): Promise {\n    // const result = await this.userRepository.findOne({ id: project.owner });\n    return null; // plainToClass(User, result);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProjectResponseDto.html":{"url":"classes/ProjectResponseDto.html","title":"class - ProjectResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProjectResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/repository/src/dtos/response/project.response.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/dtos/response/project.response.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | ObjectID\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {BaseDto} from '../base.dto';\n\nexport class ProjectResponseDto extends BaseDto {\n  // @IsNotEmpty()\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectService.html":{"url":"injectables/ProjectService.html","title":"injectable - ProjectService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/service-project/src/project/project.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ProjectService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryFailedFilter.html":{"url":"classes/QueryFailedFilter.html","title":"class - QueryFailedFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryFailedFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/filters/query-failed.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reflector\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/filters/query-failed.filter.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reflector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Reflector\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/common/src/filters/query-failed.filter.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/filters/query-failed.filter.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost, HttpStatus } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Response } from 'express';\nimport { STATUS_CODES } from 'http';\nimport { QueryFailedError } from 'typeorm';\n\nimport { ConstraintErrors } from './constraint-errors';\n\n@Catch(QueryFailedError)\nexport class QueryFailedFilter implements ExceptionFilter {\n\n  constructor(public reflector: Reflector) {}\n\n  catch(exception: any, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n\n    const errorMessage = ConstraintErrors[exception.constraint];\n\n    const status = exception.constraint &&\n    exception.constraint.startsWith('UQ') ? HttpStatus.CONFLICT : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    response.status(status).json({\n      statusCode: status,\n      error: STATUS_CODES[status],\n      message: errorMessage,\n    });\n\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReferencesExplorerService.html":{"url":"injectables/ReferencesExplorerService.html","title":"injectable - ReferencesExplorerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ReferencesExplorerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/graphql-gateway/src/services/references-explorer.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseExplorerService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                gqlParamsFactory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createContextCallback\n                            \n                            \n                                    Public\n                                explore\n                            \n                            \n                                    Private\n                                filterReferences\n                            \n                            \n                                    Private\n                                predicate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(modulesContainer: ModulesContainer, metadataScanner: MetadataScanner, externalContextCreator: ExternalContextCreator, gqlOptions: GqlModuleOptions)\n                    \n                \n                        \n                            \n                                Defined in libs/graphql-gateway/src/services/references-explorer.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modulesContainer\n                                                  \n                                                        \n                                                                    ModulesContainer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        metadataScanner\n                                                  \n                                                        \n                                                                    MetadataScanner\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        externalContextCreator\n                                                  \n                                                        \n                                                                    ExternalContextCreator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gqlOptions\n                                                  \n                                                        \n                                                                    GqlModuleOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createContextCallback\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createContextCallback(instance: T, prototype: any, wrapper: InstanceWrapper, moduleRef: Module, resolver: ResolverMetadata, isRequestScoped: boolean, transform: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/graphql-gateway/src/services/references-explorer.service.ts:103\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    instance\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    prototype\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    wrapper\n                                    \n                                            InstanceWrapper\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    moduleRef\n                                    \n                                            Module\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    resolver\n                                    \n                                            ResolverMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    isRequestScoped\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    transform\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        identity\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            explore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    explore()\n                \n            \n\n\n            \n                \n                    Defined in libs/graphql-gateway/src/services/references-explorer.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            filterReferences\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    filterReferences(wrapper: InstanceWrapper, moduleRef: Module)\n                \n            \n\n\n            \n                \n                    Defined in libs/graphql-gateway/src/services/references-explorer.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    wrapper\n                                    \n                                            InstanceWrapper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    moduleRef\n                                    \n                                            Module\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ResolverMetadata[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            predicate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    predicate(instance: object, prototype: any, methodName: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/graphql-gateway/src/services/references-explorer.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    instance\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    prototype\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    methodName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ResolverMetadata\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            gqlParamsFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new GqlParamsFactory()\n                        \n                    \n                        \n                            \n                                    Defined in libs/graphql-gateway/src/services/references-explorer.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ModulesContainer } from '@nestjs/core';\nimport { ExternalContextCreator } from '@nestjs/core/helpers/external-context-creator';\nimport { InstanceWrapper } from '@nestjs/core/injector/instance-wrapper';\nimport { Module } from '@nestjs/core/injector/module';\nimport { MetadataScanner } from '@nestjs/core/metadata-scanner';\nimport { GqlModuleOptions } from '@nestjs/graphql';\nimport { GqlParamsFactory } from '@nestjs/graphql/dist/factories/params.factory';\nimport {\n  GRAPHQL_MODULE_OPTIONS, PARAM_ARGS_METADATA,\n  RESOLVER_TYPE_METADATA,\n} from '@nestjs/graphql/dist/graphql.constants';\nimport { ResolverMetadata } from '@nestjs/graphql/dist/interfaces/resolver-metadata.interface';\nimport { BaseExplorerService } from '@nestjs/graphql/dist/services/base-explorer.service';\nimport { identity } from 'rxjs';\nimport { RESOLVE_REFERENCE_KEY, RESOLVE_REFERENCE_METADATA } from '../tokens';\n\n@Injectable()\nexport class ReferencesExplorerService extends BaseExplorerService {\n  private readonly gqlParamsFactory = new GqlParamsFactory();\n\n  constructor(\n    private readonly modulesContainer: ModulesContainer,\n    private readonly metadataScanner: MetadataScanner,\n    private readonly externalContextCreator: ExternalContextCreator,\n    @Inject(GRAPHQL_MODULE_OPTIONS)\n    private readonly gqlOptions: GqlModuleOptions,\n  ) {\n    super();\n  }\n\n  public explore() {\n    const modules = this.getModules(\n      this.modulesContainer,\n      this.gqlOptions.include || [],\n    );\n\n    const references  = this.flatMap(modules, (wrapper, moduleRef) => {\n      return wrapper.instance && this.filterReferences(wrapper, moduleRef);\n    });\n\n    return this.groupMetadata(references);\n  }\n\n  private predicate(instance: object, prototype: any, methodName: string): ResolverMetadata {\n    const callback = prototype[methodName];\n    const isResolverReference = Reflect.getMetadata(RESOLVE_REFERENCE_METADATA, callback);\n\n    if (!isResolverReference) {\n      // @ts-ignore\n      return null;\n    }\n\n    const resolverType =\n      Reflect.getMetadata(RESOLVER_TYPE_METADATA, callback) ||\n      // @ts-ignore\n      Reflect.getMetadata(RESOLVER_TYPE_METADATA, instance.constructor);\n\n    return {\n      name: RESOLVE_REFERENCE_KEY, // probably should be __resolveReference\n      type: resolverType,\n      methodName,\n    };\n  }\n\n  private filterReferences(\n    wrapper: InstanceWrapper,\n    moduleRef: Module,\n  ): ResolverMetadata[] {\n    const { instance } = wrapper;\n\n    // @ts-ignore\n    const prototype = Object.getPrototypeOf(instance);\n    const resolvers = this.metadataScanner.scanFromPrototype(\n      instance,\n      prototype,\n      (name) => this.predicate(instance, prototype, name),\n    );\n\n    return resolvers\n      // @ts-ignore\n      .filter((resolver) => !!resolver)\n      .map((resolver) => {\n        const createContext = (transform?: () => void) => {\n          return this.createContextCallback(\n            instance,\n            prototype,\n            wrapper,\n            moduleRef,\n            resolver,\n            false,\n            transform,\n          );\n        };\n\n        return {\n          ...resolver,\n          callback: createContext(),\n        };\n      });\n  }\n\n  private createContextCallback(\n    instance: T,\n    prototype: any,\n    wrapper: InstanceWrapper,\n    moduleRef: Module,\n    resolver: ResolverMetadata,\n    isRequestScoped: boolean,\n    transform: any = identity,\n  ) {\n    return this.externalContextCreator.create(\n      instance,\n      prototype[resolver.methodName],\n      resolver.methodName,\n      PARAM_ARGS_METADATA,\n      this.gqlParamsFactory,\n      undefined,\n      undefined,\n      undefined,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RepositoryModule.html":{"url":"modules/RepositoryModule.html","title":"module - RepositoryModule","body":"\n                   \n\n\n\n\n    Modules\n    RepositoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RepositoryModule\n\n\n\ncluster_RepositoryModule_exports\n\n\n\ncluster_RepositoryModule_providers\n\n\n\n\nAuthRepository \n\nAuthRepository \n\n\n\nRepositoryModule\n\nRepositoryModule\n\nAuthRepository  -->\n\nRepositoryModule->AuthRepository \n\n\n\n\n\nAuthRepository\n\nAuthRepository\n\nRepositoryModule -->\n\nAuthRepository->RepositoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/repository/src/repository.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthRepository\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthRepository } from '@graphqlcqrs/repository/repositories/auth.repository';\n\n@Module({\n  providers: [AuthRepository],\n  exports: [AuthRepository],\n})\nexport class RepositoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RepositoryService.html":{"url":"injectables/RepositoryService.html","title":"injectable - RepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/repository/src/repository.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class RepositoryService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceListItem.html":{"url":"interfaces/ServiceListItem.html","title":"interface - ServiceListItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ServiceListItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/graphql-gateway/src/interfaces/distributed-gateway-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GatewayConfig } from '@apollo/gateway';\nimport { GqlModuleOptions } from '@nestjs/graphql';\nimport { Omit } from '@nestjs/graphql/dist/interfaces/gql-module-options.interface';\n\n// tslint:disable-next-line\nexport interface IDistributedGatewayOptions extends Pick, Omit, IServiceList {}\n\ninterface IServiceList {\n  serviceList: ServiceListItem[];\n}\n\ninterface ServiceListItem {\n name: string;\n url: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SnakeNamingStrategy.html":{"url":"classes/SnakeNamingStrategy.html","title":"class - SnakeNamingStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SnakeNamingStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/strategies/snake-naming.strategy.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DefaultNamingStrategy\n            \n\n            \n                Implements\n            \n            \n                        NamingStrategyInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                classTableInheritanceParentColumnName\n                            \n                            \n                                columnName\n                            \n                            \n                                joinColumnName\n                            \n                            \n                                joinTableColumnName\n                            \n                            \n                                joinTableName\n                            \n                            \n                                relationName\n                            \n                            \n                                tableName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            classTableInheritanceParentColumnName\n                        \n                        \n                    \n                \n            \n            \n                \nclassTableInheritanceParentColumnName(parentTableName: any, parentTableIdPropertyName: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/strategies/snake-naming.strategy.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentTableName\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentTableIdPropertyName\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            columnName\n                        \n                        \n                    \n                \n            \n            \n                \ncolumnName(propertyName: string, customName: string, embeddedPrefixes: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/strategies/snake-naming.strategy.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    propertyName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    customName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    embeddedPrefixes\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            joinColumnName\n                        \n                        \n                    \n                \n            \n            \n                \njoinColumnName(relationName: string, referencedColumnName: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/strategies/snake-naming.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    relationName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    referencedColumnName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            joinTableColumnName\n                        \n                        \n                    \n                \n            \n            \n                \njoinTableColumnName(tableName: string, propertyName: string, columnName?: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/strategies/snake-naming.strategy.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tableName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propertyName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    columnName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            joinTableName\n                        \n                        \n                    \n                \n            \n            \n                \njoinTableName(firstTableName: string, secondTableName: string, firstPropertyName: string, _secondPropertyName: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/strategies/snake-naming.strategy.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    firstTableName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    secondTableName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    firstPropertyName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _secondPropertyName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            relationName\n                        \n                        \n                    \n                \n            \n            \n                \nrelationName(propertyName: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/strategies/snake-naming.strategy.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    propertyName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tableName\n                        \n                        \n                    \n                \n            \n            \n                \ntableName(className: string, customName: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/strategies/snake-naming.strategy.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    customName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NamingStrategyInterface, DefaultNamingStrategy } from 'typeorm';\nimport { snakeCase } from 'typeorm/util/StringUtils';\n\nexport class SnakeNamingStrategy extends DefaultNamingStrategy implements NamingStrategyInterface {\n  tableName(className: string, customName: string): string {\n    return customName ? customName : snakeCase(className);\n  }\n\n  columnName(propertyName: string, customName: string, embeddedPrefixes: string[]): string {\n    return snakeCase(embeddedPrefixes.join('_')) + (customName ? customName : snakeCase(propertyName));\n  }\n\n  relationName(propertyName: string): string {\n    return snakeCase(propertyName);\n  }\n\n  joinColumnName(relationName: string, referencedColumnName: string): string {\n    return snakeCase(relationName + '_' + referencedColumnName);\n  }\n\n  joinTableName(firstTableName: string,\n                secondTableName: string,\n                firstPropertyName: string,\n                // tslint:disable-next-line:variable-name\n                _secondPropertyName: string,\n  ): string {\n    return snakeCase(firstTableName + '_' + firstPropertyName.replace(/\\./gi, '_') + '_' + secondTableName);\n  }\n\n  joinTableColumnName(tableName: string, propertyName: string, columnName?: string): string {\n    return snakeCase(tableName + '_' + (columnName ? columnName : propertyName));\n  }\n\n  classTableInheritanceParentColumnName(parentTableName: any, parentTableIdPropertyName: any): string {\n    return snakeCase(parentTableName + '_' + parentTableIdPropertyName);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TenantInfo.html":{"url":"interfaces/TenantInfo.html","title":"interface - TenantInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TenantInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nest-multi-tenant/src/interfaces/tenant-config.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        accessToken\n                                \n                                \n                                            Optional\n                                        config\n                                \n                                \n                                            Optional\n                                        connectionString\n                                \n                                \n                                            Optional\n                                        tenant\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                    \n                                \n                                \n                                    \n                                        accessToken:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         MultiTenancyConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MultiTenancyConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        connectionString\n                                    \n                                \n                                \n                                    \n                                        connectionString:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tenant\n                                    \n                                \n                                \n                                    \n                                        tenant:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TenantDatabaseStrategy, TenantResolverType } from '../tenant.enum';\n\nexport interface MultiTenancyConfig {\n  enabled?: boolean;\n  resolverType?: TenantResolverType;\n  databaseStrategy?: TenantDatabaseStrategy;\n}\n\nexport interface TenantInfo {\n  config?: MultiTenancyConfig;\n  tenant?: string;\n  connectionString?: string;\n  accessToken?: {\n    key: string;\n    secret: string;\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TenantMiddleware.html":{"url":"injectables/TenantMiddleware.html","title":"injectable - TenantMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TenantMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nest-multi-tenant/src/middleware/tenant.middleware.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                option\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(option: MultiTenancyConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/nest-multi-tenant/src/middleware/tenant.middleware.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        option\n                                                  \n                                                        \n                                                                        MultiTenancyConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            use\n                        \n                        \n                    \n                \n            \n            \n                \nuse(req: any, res: any, next: () => void)\n                \n            \n\n\n            \n                \n                    Defined in libs/nest-multi-tenant/src/middleware/tenant.middleware.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            option\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MultiTenancyConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/nest-multi-tenant/src/middleware/tenant.middleware.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { tenantNamespace } from './multi-tenancy-global.middleware';\nimport { MultiTenancyConfig, TenantResolverType } from '../';\n\n@Injectable()\nexport class TenantMiddleware implements NestMiddleware {\n  private option: MultiTenancyConfig;\n  constructor(option: MultiTenancyConfig) {\n    this.option = option;\n  }\n\n  use(req: any, res: any, next: () => void) {\n    if (!this.option.enabled) {\n      next();\n    }\n\n    const tenant = {\n      id: null,\n    };\n\n    if (this.option.resolverType === TenantResolverType.Domain) {\n      tenant.id = req.subdomains.length && req.subdomains[0];\n    }\n\n    if (this.option.resolverType === TenantResolverType.Domain && req.subdomains.length) {\n      tenant.id = req.subdomains[0];\n      tenantNamespace.run(() => {\n        tenantNamespace.set('tenant', tenant);\n        next();\n      });\n    }\n\n    if (this.option.resolverType === TenantResolverType.Cookie) {\n      // tenant.id = req.cookie\n    }\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TenantRepository.html":{"url":"injectables/TenantRepository.html","title":"injectable - TenantRepository","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TenantRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/repository/src/repositories/tenant.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collection\n                            \n                            \n                                    Public\n                                dbSource\n                            \n                            \n                                    Readonly\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteMany\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                deleteOneById\n                            \n                            \n                                    Private\n                                exec\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                findById\n                            \n                            \n                                    Async\n                                findManyById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneAndUpdate\n                            \n                            \n                                    Async\n                                findOneByIdAndUpdate\n                            \n                            \n                                    Private\n                                getCollection\n                            \n                            \n                                    Private\n                                    Async\n                                invokeEvents\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Protected\n                                toggleId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dbc: MongoClient, db: Db)\n                    \n                \n                        \n                            \n                                Defined in libs/repository/src/repositories/tenant.repository.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dbc\n                                                  \n                                                        \n                                                                    MongoClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    Db\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: DTO)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:126\n\n                \n            \n\n\n            \n                \n                    Create a document of type T\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            DTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteMany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMany(conditions: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:246\n\n                \n            \n\n\n            \n                \n                    Delete multiple records\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(conditions: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:229\n\n                \n            \n\n\n            \n                \n                    Delete a record\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:218\n\n                \n            \n\n\n            \n                \n                    Delete a record by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            exec\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    exec()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:358\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(req: FindRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:85\n\n                \n            \n\n\n            \n                \n                    Find records by a list of conditions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                FindRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        { conditions: {} }\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:36\n\n                \n            \n\n\n            \n                \n                    Finds a record by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyById(ids: string[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:47\n\n                \n            \n\n\n            \n                \n                    Find multiple documents by a list of ids\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(conditions: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:67\n\n                \n            \n\n\n            \n                \n                    Finds a record by a list of conditions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneAndUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneAndUpdate(req: UpdateRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:196\n\n                \n            \n\n\n            \n                \n                    Find a record and update with new values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                UpdateRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByIdAndUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdAndUpdate(id: string, req: UpdateByIdRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:181\n\n                \n            \n\n\n            \n                \n                    Find a record by ID and update with new values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                UpdateByIdRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getCollection\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCollection()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:286\n\n                \n            \n\n\n            \n                \n                    Return a collection\nIf the collection doesn't exist, it will create it with the given options\n\n\n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            invokeEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    invokeEvents(type: string, fns: string[], document: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:344\n\n                \n            \n\n\n            \n                \n                    Apply functions to a record based on the type of event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        any of the valid types, PRE_KEY POST_KEY\n\n                                    \n                                \n                                \n                                    fns\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        any of the valid functions: update, updateOne, save, create, find, findOne, findMany\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to apply functions to\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(document: Document)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:146\n\n                \n            \n\n\n            \n                \n                    Save any changes to your document\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                                Document\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            toggleId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleId(document: any, replace: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:265\n\n                \n            \n\n\n            \n                \n                    Strip off Mongo's ObjectID and replace with string representation or in reverse\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    replace\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DOC\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise>\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseRepository\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseRepository:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dbSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DBSource\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseRepository\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseRepository:21\n\n                            \n                        \n\n                \n                    \n                        Your MongoDB connection\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CollectionProps\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseRepository\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseRepository:10\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Db, MongoClient } from 'mongodb';\nimport { BaseRepository, EntityRepository, InjectClient, InjectDb } from '@juicycleff/nest-multi-tenant';\nimport {UserEntity} from '../entities';\n\n@Injectable()\n@EntityRepository({ name: 'tenant' })\nexport class TenantRepository extends BaseRepository {\n  constructor(\n    @InjectClient() private readonly dbc: MongoClient,\n    @InjectDb() private readonly db: Db,\n  ) {\n    super({\n      client: dbc,\n      db,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/interceptors/timeout.interceptors.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/interceptors/timeout.interceptors.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { timeout } from 'rxjs/operators';\n\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next.handle().pipe(timeout(5000));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateByIdRequest.html":{"url":"interfaces/UpdateByIdRequest.html","title":"interface - UpdateByIdRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UpdateByIdRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nest-multi-tenant/src/database/mongo/interfaces/types.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        updates\n                                \n                                \n                                            Optional\n                                        upsert\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        updates\n                                    \n                                \n                                \n                                    \n                                        updates:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        upsert\n                                    \n                                \n                                \n                                    \n                                        upsert:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Db, ObjectID, MongoClient, IndexOptions } from 'mongodb';\n\nexport const COLLECTION_KEY = 'collection';\nexport const ENTITY_KEY = 'entity';\nexport const COLUMN_KEY = 'column';\nexport const PRE_KEY = 'pre';\nexport const POST_KEY = 'post';\n\nexport interface UpdateByIdRequest {\n  updates: any;\n  upsert?: boolean;\n}\n\nexport interface UpdateRequest extends UpdateByIdRequest {\n  conditions: any;\n}\n\nexport interface FindRequest {\n  conditions: any;\n  limit?: number;\n  projection?: any;\n  sort?: any;\n  skip?: number;\n}\n\nexport interface CollectionProps {\n  name: string;\n  capped?: boolean;\n  size?: number;\n  max?: number;\n  supportTenant?: boolean;\n  indexes?: IndexDefinition[];\n}\n\nexport interface IndexDefinition {\n  // The fields to index on\n  fields: { [fieldName: string]: string | any };\n\n  // index options\n  options?: IndexOptions;\n\n  // overwrite the index if it exists and isn't the same\n  overwrite?: boolean;\n}\n\nexport interface Document {\n  id?: string | ObjectID;\n  [key: string]: any;\n}\n\nexport interface DBSource {\n  client: Promise | MongoClient;\n  db: Promise | Db;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateRequest.html":{"url":"interfaces/UpdateRequest.html","title":"interface - UpdateRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UpdateRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nest-multi-tenant/src/database/mongo/interfaces/types.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        UpdateByIdRequest\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        conditions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        conditions\n                                    \n                                \n                                \n                                    \n                                        conditions:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Db, ObjectID, MongoClient, IndexOptions } from 'mongodb';\n\nexport const COLLECTION_KEY = 'collection';\nexport const ENTITY_KEY = 'entity';\nexport const COLUMN_KEY = 'column';\nexport const PRE_KEY = 'pre';\nexport const POST_KEY = 'post';\n\nexport interface UpdateByIdRequest {\n  updates: any;\n  upsert?: boolean;\n}\n\nexport interface UpdateRequest extends UpdateByIdRequest {\n  conditions: any;\n}\n\nexport interface FindRequest {\n  conditions: any;\n  limit?: number;\n  projection?: any;\n  sort?: any;\n  skip?: number;\n}\n\nexport interface CollectionProps {\n  name: string;\n  capped?: boolean;\n  size?: number;\n  max?: number;\n  supportTenant?: boolean;\n  indexes?: IndexDefinition[];\n}\n\nexport interface IndexDefinition {\n  // The fields to index on\n  fields: { [fieldName: string]: string | any };\n\n  // index options\n  options?: IndexOptions;\n\n  // overwrite the index if it exists and isn't the same\n  overwrite?: boolean;\n}\n\nexport interface Document {\n  id?: string | ObjectID;\n  [key: string]: any;\n}\n\nexport interface DBSource {\n  client: Promise | MongoClient;\n  db: Promise | Db;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserEntity.html":{"url":"classes/UserEntity.html","title":"class - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/repository/src/entities/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                auth\n                            \n                            \n                                email\n                            \n                            \n                                firstname\n                            \n                            \n                                lastname\n                            \n                            \n                                    Optional\n                                projects\n                            \n                            \n                                    Optional\n                                toDtoClass\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                deleted\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                    Abstract\n                                    Optional\n                                toDtoClass\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                beforeInsert\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                toDto\n                            \n                            \n                                updateDates\n                            \n                            \n                                updateRemove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/entities/user.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({unique: true, nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/entities/user.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({unique: false, nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/entities/user.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({unique: false, nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/entities/user.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            projects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectEntity[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/entities/user.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            toDtoClass\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in libs/repository/src/entities/user.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectID\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ObjectIdColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Optional\n                            toDtoClass\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:31\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            beforeInsert\n                        \n                        \n                    \n                \n            \n            \n                \nbeforeInsert()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Before('update')\n                \n            \n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:42\n\n                \n            \n\n\n            \n                \n                    Soft delete\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toDto\n                        \n                        \n                    \n                \n            \n            \n                \ntoDto(options?: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateDates\n                        \n                        \n                    \n                \n            \n            \n                \nupdateDates()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Before('update')\n                \n            \n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateRemove\n                        \n                        \n                    \n                \n            \n            \n                \nupdateRemove()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Before('remove')\n                \n            \n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:57\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {UserResponseDto} from '../dtos/response';\nimport {AuthEntity} from './auth.entity';\nimport {BaseEntity} from './base-entity';\nimport { ProjectEntity } from './project.entity';\nimport { Entity } from '@juicycleff/nest-multi-tenant/database/mongo/decorators/entity.decorator';\nimport { Column } from 'typeorm';\n\n@Entity({ name: 'user' })\nexport class UserEntity extends BaseEntity {\n\n  @Column({ unique: false, nullable: false })\n  firstname: string;\n\n  @Column({ unique: false, nullable: false  })\n  lastname: string;\n\n  @Column({ unique: true, nullable: false  })\n  email: string;\n\n  @Column(type => AuthEntity)\n  auth?: AuthEntity;\n\n  @Column(type => ProjectEntity)\n  projects?: ProjectEntity[];\n\n  toDtoClass?: new(entity: BaseEntity, options?: any) => UserResponseDto;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/service-user/src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserResolver } from './user.resolver';\n\n@Module({\n  providers: [UserService, UserResolver],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepository.html":{"url":"injectables/UserRepository.html","title":"injectable - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/repository/src/repositories/user.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collection\n                            \n                            \n                                    Public\n                                dbSource\n                            \n                            \n                                    Readonly\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteMany\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                deleteOneById\n                            \n                            \n                                    Private\n                                exec\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                findById\n                            \n                            \n                                    Async\n                                findManyById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneAndUpdate\n                            \n                            \n                                    Async\n                                findOneByIdAndUpdate\n                            \n                            \n                                    Private\n                                getCollection\n                            \n                            \n                                    Private\n                                    Async\n                                invokeEvents\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Protected\n                                toggleId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dbc: MongoClient, db: Db)\n                    \n                \n                        \n                            \n                                Defined in libs/repository/src/repositories/user.repository.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dbc\n                                                  \n                                                        \n                                                                    MongoClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    Db\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(document: DTO)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:126\n\n                \n            \n\n\n            \n                \n                    Create a document of type T\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                            DTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteMany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMany(conditions: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:246\n\n                \n            \n\n\n            \n                \n                    Delete multiple records\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(conditions: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:229\n\n                \n            \n\n\n            \n                \n                    Delete a record\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOneById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:218\n\n                \n            \n\n\n            \n                \n                    Delete a record by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            exec\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    exec()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:358\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(req: FindRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:85\n\n                \n            \n\n\n            \n                \n                    Find records by a list of conditions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                FindRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        { conditions: {} }\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:36\n\n                \n            \n\n\n            \n                \n                    Finds a record by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findManyById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findManyById(ids: string[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:47\n\n                \n            \n\n\n            \n                \n                    Find multiple documents by a list of ids\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(conditions: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:67\n\n                \n            \n\n\n            \n                \n                    Finds a record by a list of conditions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneAndUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneAndUpdate(req: UpdateRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:196\n\n                \n            \n\n\n            \n                \n                    Find a record and update with new values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                UpdateRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByIdAndUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdAndUpdate(id: string, req: UpdateByIdRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:181\n\n                \n            \n\n\n            \n                \n                    Find a record by ID and update with new values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                UpdateByIdRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getCollection\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCollection()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:286\n\n                \n            \n\n\n            \n                \n                    Return a collection\nIf the collection doesn't exist, it will create it with the given options\n\n\n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            invokeEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    invokeEvents(type: string, fns: string[], document: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:344\n\n                \n            \n\n\n            \n                \n                    Apply functions to a record based on the type of event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        any of the valid types, PRE_KEY POST_KEY\n\n                                    \n                                \n                                \n                                    fns\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        any of the valid functions: update, updateOne, save, create, find, findOne, findMany\n\n                                    \n                                \n                                \n                                    document\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The document to apply functions to\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(document: Document)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:146\n\n                \n            \n\n\n            \n                \n                    Save any changes to your document\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                                Document\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            toggleId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleId(document: any, replace: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepository\n\n                \n            \n            \n                \n                        Defined in         BaseRepository:265\n\n                \n            \n\n\n            \n                \n                    Strip off Mongo's ObjectID and replace with string representation or in reverse\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    replace\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DOC\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise>\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseRepository\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseRepository:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dbSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DBSource\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseRepository\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseRepository:21\n\n                            \n                        \n\n                \n                    \n                        Your MongoDB connection\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CollectionProps\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseRepository\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseRepository:10\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Db, MongoClient } from 'mongodb';\nimport { BaseRepository, EntityRepository, InjectClient, InjectDb } from '@juicycleff/nest-multi-tenant';\nimport {UserEntity} from '../entities';\n\n@Injectable()\n@EntityRepository({ name: 'user' })\nexport class UserRepository extends BaseRepository {\n  constructor(\n    @InjectClient() private readonly dbc: MongoClient,\n    @InjectDb() private readonly db: Db,\n  ) {\n    super({\n      client: dbc,\n      db,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver.html":{"url":"classes/UserResolver.html","title":"class - UserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/service-user/src/user/user.resolver.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver } from '@nestjs/graphql';\n\n@Resolver('User')\nexport class UserResolver {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResponseDto.html":{"url":"classes/UserResponseDto.html","title":"class - UserResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/repository/src/dtos/response/user.response.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstname\n                            \n                            \n                                lastname\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/dtos/response/user.response.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/dtos/response/user.response.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/repository/src/dtos/response/user.response.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | ObjectID\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {BaseDto} from '../base.dto';\n\nexport class UserResponseDto extends BaseDto {\n  // @IsNotEmpty()\n  firstname: string;\n\n  // @IsNotEmpty()\n  lastname: string;\n\n  // @IsNotEmpty()\n  email: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/service-user/src/user/user.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class UserService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationError.html":{"url":"classes/ValidationError.html","title":"class - ValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/exceptions/validation.exception.ts\n        \n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                messages\n                            \n                            \n                                    Public\n                                    Optional\n                                metaData\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(messages: string[], metaData?: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/exceptions/validation.exception.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        messages\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        metaData\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/common/src/exceptions/validation.exception.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            metaData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/common/src/exceptions/validation.exception.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {HttpException, HttpStatus} from '@nestjs/common';\nimport {ValidatorOptions} from '@nestjs/common/interfaces/external/validator-options.interface';\n\nexport class ValidationError extends HttpException {\n  public messages: string[];\n\n  constructor(messages: string[], public metaData?: { target?: any; options: ValidatorOptions; data: any }) {\n    super(messages && messages.length > 0 ? messages[0] : 'Validation Error', HttpStatus.BAD_REQUEST);\n    this.messages = messages;\n    // tslint:disable-next-line:no-console\n    console.log(JSON.stringify(metaData, null, 2));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidatorService.html":{"url":"injectables/ValidatorService.html","title":"injectable - ValidatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/services/validator.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isImage(mimeType: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/common/src/services/validator.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mimeType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class ValidatorService {\n  public isImage(mimeType: string): boolean {\n    const imageMimeTypes = ['image/jpeg', 'image/png'];\n\n    return _.includes(imageMimeTypes, mimeType);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/gateway-admin/src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/gateway-admin/src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/gateway-admin/src/headers.datasource.ts\n            \n            class\n            HeadersDatasource\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/gateway-admin/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/service-auth/src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/service-auth/src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/service-auth/src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/service-auth/src/auth/auth.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/service-auth/src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/service-auth/src/auth/strategy/facebook.strategy.ts\n            \n            injectable\n            FacebookStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/service-auth/src/auth/strategy/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/service-auth/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/service-project/src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/service-project/src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/service-project/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/service-project/src/project/project.resolver.ts\n            \n            class\n            ProjectResolver\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/service-project/src/project/project.service.ts\n            \n            injectable\n            ProjectService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/service-user/src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/service-user/src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/service-user/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/service-user/src/user/user.resolver.ts\n            \n            class\n            UserResolver\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/service-user/src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/common.module.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/common.service.ts\n            \n            injectable\n            CommonService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/decorators/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/decorators/permission.decorator.ts\n            \n            function\n            Permission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/decorators/permission.decorator.ts\n            \n            variable\n            PERMISSION_DEFINITION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/decorators/resource.decorator.ts\n            \n            function\n            Resource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/decorators/resource.decorator.ts\n            \n            variable\n            RESOURCE_DEFINITION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/errors/index.ts\n            \n            class\n            GraphqlErrors\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/errors/not-found.error.ts\n            \n            class\n            NotFoundError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/exceptions/app.exception.ts\n            \n            class\n            AppError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/common/src/exceptions/validation.exception.ts\n            \n            class\n            ValidationError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/common/src/filters/bad-request.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/common/src/filters/constraint-errors.ts\n            \n            interface\n            IConstraintErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/filters/constraint-errors.ts\n            \n            variable\n            ConstraintErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/filters/query-failed.filter.ts\n            \n            class\n            QueryFailedFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/common/src/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/guards/gql-auth.guard.ts\n            \n            guard\n            GqlAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/interceptors/app-exit.interceptor.ts\n            \n            injectable\n            ExitInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/interceptors/errors.interceptor.ts\n            \n            injectable\n            ErrorsInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/interceptors/timeout.interceptors.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/interfaces/aws-config.interface.ts\n            \n            interface\n            IAwsConfigInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/common/src/interfaces/event-source-config.interface.ts\n            \n            interface\n            IEventSourceConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/common/src/interfaces/event-source-config.interface.ts\n            \n            interface\n            IGosipConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/common/src/interfaces/file.interface.ts\n            \n            interface\n            IFile\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/common/src/middlewares/blood-tears.middleware.ts\n            \n            variable\n            bloodTearsMiddleware\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/middlewares/context.middelware.ts\n            \n            variable\n            contextMiddleware\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/providers/context.provider.ts\n            \n            class\n            ContextProvider\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/common/src/providers/cookie.serializer.ts\n            \n            injectable\n            CookieSerializer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/common/src/services/aws-s3.service.ts\n            \n            injectable\n            AwsS3Service\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                libs/common/src/services/config.service.ts\n            \n            class\n            ConfigService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                libs/common/src/services/generator.service.ts\n            \n            injectable\n            GeneratorService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/common/src/services/validator.service.ts\n            \n            injectable\n            ValidatorService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/setup/auth.setup.ts\n            \n            function\n            authSetup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/setup/auth.setup.ts\n            \n            variable\n            MongoDBStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/setup/auth.setup.ts\n            \n            variable\n            passportMiddleware\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/setup/auth.setup.ts\n            \n            variable\n            passportSessionMiddleware\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/setup/auth.setup.ts\n            \n            variable\n            sessionMiddleware\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/setup/auth.setup.ts\n            \n            variable\n            store\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/setup/swagger.setup.ts\n            \n            function\n            setupSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/strategies/snake-naming.strategy.ts\n            \n            class\n            SnakeNamingStrategy\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                libs/common/src/utils/app.utils.ts\n            \n            class\n            AppUtils\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/utils/dto-mapper.utils.ts\n            \n            class\n            DtoMapperUtils\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                libs/common/src/utils/encryption.util.ts\n            \n            variable\n            generateHashedPassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/utils/encryption.util.ts\n            \n            variable\n            validPassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/utils/hash.utils.ts\n            \n            function\n            hash\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/utils/key.shared.utils.ts\n            \n            function\n            extractKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/core/src/core.service.ts\n            \n            injectable\n            CoreService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/core/src/cqrs/commands/handlers/auth/create-auth.handler.ts\n            \n            class\n            CreateAuthHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/core/src/cqrs/commands/handlers/auth/index.ts\n            \n            variable\n            AuthCommandHandlers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/core/src/cqrs/commands/impl/auth/create-auth.command.ts\n            \n            class\n            CreateAuthCommand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/core/src/cqrs/events/handlers/auth/auth-created.handler.ts\n            \n            class\n            AuthCreatedHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/core/src/cqrs/events/handlers/auth/auth-deleted.handler.ts\n            \n            class\n            AuthDeletedHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/core/src/cqrs/events/handlers/auth/auth-updated.handler.ts\n            \n            class\n            AuthUpdatedHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/core/src/cqrs/events/handlers/auth/index.ts\n            \n            variable\n            AuthEventHandlers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/core/src/cqrs/events/impl/auth/auth-created.event.ts\n            \n            class\n            AuthCreatedEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/core/src/cqrs/events/impl/auth/auth-deleted.event.ts\n            \n            class\n            AuthDeletedEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/core/src/cqrs/events/impl/auth/auth-updated.event.ts\n            \n            class\n            AuthUpdatedEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/core/src/cqrs/queries/handlers/auth/auth-exist.handler.ts\n            \n            class\n            AuthExistHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/core/src/cqrs/queries/handlers/auth/get-auth.handler.ts\n            \n            class\n            GetAuthHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/core/src/cqrs/queries/handlers/auth/index.ts\n            \n            variable\n            AuthQueryHandlers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/core/src/cqrs/queries/impl/auth/auth-exist.query.ts\n            \n            class\n            AuthExistQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/core/src/cqrs/queries/impl/auth/get-auth.query.ts\n            \n            class\n            GetAuthQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/graphql-gateway/src/decorators/resolve-reference.decorator.ts\n            \n            function\n            ResolveReference\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/graphql-gateway/src/graphql-distributed.factory.ts\n            \n            injectable\n            GraphqlDistributedFactory\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/graphql-gateway/src/graphql-types.loader.ts\n            \n            injectable\n            GraphQLTypesLoader\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/graphql-gateway/src/graphql-types.loader.ts\n            \n            variable\n            readFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/graphql-gateway/src/interfaces/distributed-gateway-options.interface.ts\n            \n            interface\n            IDistributedGatewayOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/graphql-gateway/src/interfaces/distributed-gateway-options.interface.ts\n            \n            interface\n            IServiceList\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/graphql-gateway/src/interfaces/distributed-gateway-options.interface.ts\n            \n            interface\n            ServiceListItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/graphql-gateway/src/services/references-explorer.service.ts\n            \n            injectable\n            ReferencesExplorerService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/graphql-gateway/src/tokens.ts\n            \n            variable\n            DISTRIBUTED_GATEWAY_BUILD_SERVICE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/graphql-gateway/src/tokens.ts\n            \n            variable\n            DISTRIBUTED_GATEWAY_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/graphql-gateway/src/tokens.ts\n            \n            variable\n            RESOLVE_REFERENCE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/graphql-gateway/src/tokens.ts\n            \n            variable\n            RESOLVE_REFERENCE_METADATA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/nest-casbin/src/nest-casbin.constants.ts\n            \n            variable\n            CASBIN_ENFORCER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/nest-casbin/src/nest-casbin.service.ts\n            \n            injectable\n            NestCasbinService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/decorators/entity-repository.decorator.ts\n            \n            variable\n            EntityRepository\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/decorators/entity.decorator.ts\n            \n            function\n            Entity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/decorators/entity.decorator.ts\n            \n            function\n            Entity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/decorators/entity.decorator.ts\n            \n            function\n            Entity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/decorators/hooks.decorator.ts\n            \n            variable\n            After\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/decorators/hooks.decorator.ts\n            \n            variable\n            Before\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/decorators/mongo.decorator.ts\n            \n            variable\n            InjectClient\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/decorators/mongo.decorator.ts\n            \n            variable\n            InjectCollection\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/decorators/mongo.decorator.ts\n            \n            variable\n            InjectDb\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/decorators/mongo.decorator.ts\n            \n            variable\n            InjectReactiveClient\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/decorators/object-id-column.decorator.ts\n            \n            function\n            ObjectIdColumn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/interfaces/column-options.ts\n            \n            interface\n            ColumnCommonOptions\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/interfaces/column-options.ts\n            \n            interface\n            ColumnOptions\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/interfaces/entity-option.interface.ts\n            \n            interface\n            EntityOptions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/interfaces/mongo-options.interface.ts\n            \n            interface\n            MongoModuleAsyncOptions\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/interfaces/mongo-options.interface.ts\n            \n            interface\n            MongoModuleOptions\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/interfaces/mongo-options.interface.ts\n            \n            interface\n            MongoOptionsFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/interfaces/types.interface.ts\n            \n            interface\n            CollectionProps\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/interfaces/types.interface.ts\n            \n            interface\n            DBSource\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/interfaces/types.interface.ts\n            \n            interface\n            Document\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/interfaces/types.interface.ts\n            \n            interface\n            FindRequest\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/interfaces/types.interface.ts\n            \n            interface\n            IndexDefinition\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/interfaces/types.interface.ts\n            \n            interface\n            UpdateByIdRequest\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/interfaces/types.interface.ts\n            \n            interface\n            UpdateRequest\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/interfaces/types.interface.ts\n            \n            variable\n            COLLECTION_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/interfaces/types.interface.ts\n            \n            variable\n            COLUMN_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/interfaces/types.interface.ts\n            \n            variable\n            ENTITY_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/interfaces/types.interface.ts\n            \n            variable\n            POST_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/interfaces/types.interface.ts\n            \n            variable\n            PRE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/mongo.client.ts\n            \n            class\n            DatabaseClient\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/mongo.constants.ts\n            \n            variable\n            DEFAULT_MONGO_CLIENT_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/mongo.constants.ts\n            \n            variable\n            DEFAULT_MONGO_CONNECTION_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/mongo.constants.ts\n            \n            variable\n            DEFAULT_MONGO_CONTAINER_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/mongo.constants.ts\n            \n            variable\n            MONGO_CONNECTION_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/mongo.constants.ts\n            \n            variable\n            MONGO_CONNECTIONS_CONTAINER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/mongo.constants.ts\n            \n            variable\n            MONGO_CONTAINER_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/mongo.constants.ts\n            \n            variable\n            MONGO_MODULE_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/mongo.provider.ts\n            \n            function\n            createMongoProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/mongo.util.ts\n            \n            function\n            getClientToken\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/mongo.util.ts\n            \n            function\n            getCollectionToken\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/mongo.util.ts\n            \n            function\n            getContainerToken\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/mongo.util.ts\n            \n            function\n            getDbToken\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/mongo.util.ts\n            \n            function\n            getReactiveClientToken\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/database/mongo/repository/base.repository.ts\n            \n            class\n            BaseRepository\n            \n                80 %\n                (16/20)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/interfaces/multi-tenant-module.options.ts\n            \n            interface\n            MultiTenantModuleOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/interfaces/tenant-config.interface.ts\n            \n            interface\n            MultiTenancyConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/interfaces/tenant-config.interface.ts\n            \n            interface\n            TenantInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/middleware/multi-tenancy-global.middleware.ts\n            \n            function\n            enableMultiTenancy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/middleware/multi-tenancy-global.middleware.ts\n            \n            variable\n            tenantNamespace\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/middleware/tenant.middleware.ts\n            \n            injectable\n            TenantMiddleware\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/nest-multi-tenant.service.ts\n            \n            injectable\n            NestMultiTenantService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/tenant.constant.ts\n            \n            variable\n            CONTINUATION_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/nest-multi-tenant/src/utils/deferred.ts\n            \n            class\n            Deferred\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                libs/nestjs-event-store/src/contract/event-store-connect-config.interface.ts\n            \n            interface\n            IEventStoreConnectConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/nestjs-event-store/src/contract/event-store-connect-config.interface.ts\n            \n            interface\n            IGosipConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/nestjs-event-store/src/contract/nestjs-event-store.interface.ts\n            \n            interface\n            IEventStoreMessage\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                libs/nestjs-event-store/src/event-store-option.config.ts\n            \n            interface\n            EventStoreOptionConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/nestjs-event-store/src/event-store.ts\n            \n            injectable\n            EventStore\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                libs/nestjs-event-store/src/nestjs-event-store.class.ts\n            \n            class\n            NestjsEventStore\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                libs/nestjs-event-store/src/nestjs-event-store.constant.ts\n            \n            variable\n            ProvidersConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/nestjs-event-store/src/nestjs-event-store.service.ts\n            \n            injectable\n            NestjsEventStoreService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/nestjs-event-store/src/nestjs-store-config.provider.ts\n            \n            class\n            NestStoreConfigProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/repository/src/db.constants.ts\n            \n            variable\n            DbConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/repository/src/dtos/base-search.dto.ts\n            \n            class\n            BaseSearchDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/repository/src/dtos/base.dto.ts\n            \n            class\n            BaseDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/repository/src/dtos/page-meta.dto.ts\n            \n            class\n            PageMetaDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                libs/repository/src/dtos/page-meta.dto.ts\n            \n            interface\n            IPageMetaDtoParameters\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/repository/src/dtos/page-options.dto.ts\n            \n            class\n            PageOptionsDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/repository/src/dtos/paginate.dto.ts\n            \n            class\n            Paginate\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/repository/src/dtos/response/auth.response.ts\n            \n            class\n            AuthResponseDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/repository/src/dtos/response/project.response.ts\n            \n            class\n            ProjectResponseDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/repository/src/dtos/response/user.response.ts\n            \n            class\n            UserResponseDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/repository/src/entities/auth.entity.ts\n            \n            class\n            AuthEntity\n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                libs/repository/src/entities/base-entity.ts\n            \n            class\n            BaseEntity\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                libs/repository/src/entities/embeded/social.ts\n            \n            class\n            FacebookAuth\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/repository/src/entities/embeded/social.ts\n            \n            class\n            GoogleAuth\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/repository/src/entities/embeded/social.ts\n            \n            class\n            LocalAuth\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/repository/src/entities/project.entity.ts\n            \n            class\n            ProjectEntity\n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                \n                libs/repository/src/entities/user.entity.ts\n            \n            class\n            UserEntity\n            \n                5 %\n                (1/19)\n            \n        \n        \n            \n                \n                libs/repository/src/providers/auth-repo.provider.ts\n            \n            variable\n            authRepoProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/repository/src/providers/project-repo.provider.ts\n            \n            variable\n            projectRepoProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/repository/src/providers/user-repo.provider.ts\n            \n            variable\n            userRepoProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/repository/src/repositories/auth.repository.ts\n            \n            injectable\n            AuthRepository\n            \n                75 %\n                (15/20)\n            \n        \n        \n            \n                \n                libs/repository/src/repositories/contracts/auth-repo.interface.ts\n            \n            interface\n            IAuthRepo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/repository/src/repositories/contracts/project-repo.interface.ts\n            \n            interface\n            ITenantRepo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/repository/src/repositories/contracts/user-repo.interface.ts\n            \n            interface\n            IUserRepo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/repository/src/repositories/project.repository.ts\n            \n            injectable\n            ProjectRepository\n            \n                75 %\n                (15/20)\n            \n        \n        \n            \n                \n                libs/repository/src/repositories/tenant.repository.ts\n            \n            injectable\n            TenantRepository\n            \n                75 %\n                (15/20)\n            \n        \n        \n            \n                \n                libs/repository/src/repositories/user.repository.ts\n            \n            injectable\n            UserRepository\n            \n                75 %\n                (15/20)\n            \n        \n        \n            \n                \n                libs/repository/src/repository.service.ts\n            \n            injectable\n            RepositoryService\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @apollo/gateway : ^0.10.6\n        \n            @compodoc/compodoc : ^1.1.11\n        \n            @nestjs/common : ^6.7.2\n        \n            @nestjs/core : ^6.7.2\n        \n            @nestjs/cqrs : ^6.0.1\n        \n            @nestjs/graphql : ^6.5.3\n        \n            @nestjs/jwt : ^6.1.1\n        \n            @nestjs/passport : ^6.1.0\n        \n            @nestjs/platform-express : ^6.7.2\n        \n            @nestjs/swagger : ^3.1.0\n        \n            @nestjs/typeorm : ^6.2.0\n        \n            @types/continuation-local-storage : ^3.2.2\n        \n            @types/express-session : ^1.15.15\n        \n            apollo-server : ^2.9.6\n        \n            apollo-server-express : ^2.9.5\n        \n            aws-sdk : ^2.546.0\n        \n            axios : ^0.19.0\n        \n            bcrypt : ^3.0.6\n        \n            casbin : ^3.0.4\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.10.2\n        \n            connect-mongodb-session : ^2.2.0\n        \n            continuation-local-storage : ^3.2.1\n        \n            cookie-parser : ^1.4.4\n        \n            dotenv : ^8.1.0\n        \n            express-session : ^1.17.0\n        \n            fastify-swagger : ^2.4.0\n        \n            geteventstore-promise2 : ^3.1.2\n        \n            graphql : ^14.5.8\n        \n            graphql-passport : ^0.4.0\n        \n            graphql-tools : ^4.0.5\n        \n            greenlock-express : 2.x\n        \n            greenlock-store-fs : 3\n        \n            influx : ^5.4.2\n        \n            lodash : ^4.17.15\n        \n            mongo-cursor-pagination : ^7.1.0\n        \n            mongodb : ^3.3.3\n        \n            node-eventstore-client : ^0.2.13\n        \n            passport : ^0.4.0\n        \n            passport-facebook : ^3.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-context : ^2.0.0\n        \n            rimraf : ^3.0.0\n        \n            rxjs : ^6.5.3\n        \n            set-cookie-parser : ^2.4.0\n        \n            swagger-ui-express : ^4.1.2\n        \n            typeorm : ^0.2.19\n        \n            typeorm-adapter : ^1.0.4\n        \n            typeorm-linq-repository : ^1.0.1\n        \n            typeorm-transactional-cls-hooked : ^0.1.8\n        \n            ursa-optional : ^0.10.1\n        \n            uuid : ^3.3.3\n        \n            vhost : ^3.0.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Order   (libs/.../order.edum.ts)\n                        \n                        \n                            TenantDatabaseStrategy   (libs/.../tenant.enum.ts)\n                        \n                        \n                            TenantResolverType   (libs/.../tenant.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/repository/src/enums/order.edum.ts\n    \n        \n            \n                \n                    \n                        \n                        Order\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n            \n        \n\n    libs/nest-multi-tenant/src/tenant.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TenantDatabaseStrategy\n                    \n                \n                        \n                            \n                                 DataIsolation\n                            \n                        \n                        \n                            \n                                 DatabaseIsolation\n                            \n                        \n                        \n                            \n                                 Both\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TenantResolverType\n                    \n                \n                        \n                            \n                                 Domain\n                            \n                        \n                        \n                            \n                                 QueryString\n                            \n                        \n                        \n                            \n                                 Cookie\n                            \n                        \n                        \n                            \n                                 Header\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            authSetup   (libs/.../auth.setup.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            createMongoProviders   (libs/.../mongo.provider.ts)\n                        \n                        \n                            enableMultiTenancy   (libs/.../multi-tenancy-global.middleware.ts)\n                        \n                        \n                            Entity   (libs/.../entity.decorator.ts)\n                        \n                        \n                            Entity   (libs/.../entity.decorator.ts)\n                        \n                        \n                            Entity   (libs/.../entity.decorator.ts)\n                        \n                        \n                            extractKey   (libs/.../key.shared.utils.ts)\n                        \n                        \n                            getClientToken   (libs/.../mongo.util.ts)\n                        \n                        \n                            getCollectionToken   (libs/.../mongo.util.ts)\n                        \n                        \n                            getContainerToken   (libs/.../mongo.util.ts)\n                        \n                        \n                            getDbToken   (libs/.../mongo.util.ts)\n                        \n                        \n                            getReactiveClientToken   (libs/.../mongo.util.ts)\n                        \n                        \n                            hash   (libs/.../hash.utils.ts)\n                        \n                        \n                            ObjectIdColumn   (libs/.../object-id-column.decorator.ts)\n                        \n                        \n                            Permission   (libs/.../permission.decorator.ts)\n                        \n                        \n                            ResolveReference   (libs/.../resolve-reference.decorator.ts)\n                        \n                        \n                            Resource   (libs/.../resource.decorator.ts)\n                        \n                        \n                            setupSwagger   (libs/.../swagger.setup.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/common/src/setup/auth.setup.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            authSetup\n                        \n                        \n                    \n                \n            \n            \n                \nauthSetup(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    apps/gateway-admin/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/service-auth/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/service-project/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/service-user/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    libs/nest-multi-tenant/src/database/mongo/mongo.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createMongoProviders\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMongoProviders(connectionName?, collections)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    connectionName\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    collections\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    libs/nest-multi-tenant/src/middleware/multi-tenancy-global.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            enableMultiTenancy\n                        \n                        \n                    \n                \n            \n            \n                \nenableMultiTenancy(option)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    option\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    libs/nest-multi-tenant/src/database/mongo/decorators/entity.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Entity\n                        \n                        \n                    \n                \n            \n            \n                \nEntity(options?)\n                \n            \n\n\n\n\n            \n                \n                    This decorator is used to mark classes that will be an entity (table or document depend on database type).\nDatabase schema will be created for all classes decorated with it, and Repository can be retrieved and used for it.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Entity\n                        \n                        \n                    \n                \n            \n            \n                \nEntity(name?, options?)\n                \n            \n\n\n\n\n            \n                \n                    This decorator is used to mark classes that will be an entity (table or document depend on database type).\nDatabase schema will be created for all classes decorated with it, and Repository can be retrieved and used for it.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Entity\n                        \n                        \n                    \n                \n            \n            \n                \nEntity(nameOrOptions?, maybeOptions?)\n                \n            \n\n\n\n\n            \n                \n                    This decorator is used to mark classes that will be an entity (table or document depend on database type).\nDatabase schema will be created for all classes decorated with it, and Repository can be retrieved and used for it.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nameOrOptions\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    maybeOptions\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/common/src/utils/key.shared.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            extractKey\n                        \n                        \n                    \n                \n            \n            \n                \nextractKey(path)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    libs/nest-multi-tenant/src/database/mongo/mongo.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getClientToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetClientToken(containerName)\n                \n            \n\n\n\n\n            \n                \n                    Get a token for the MongoClient object for the given connection name\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    containerName\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The unique name for the container\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCollectionToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetCollectionToken(containerName)\n                \n            \n\n\n\n\n            \n                \n                    Get a token for the Mongo Db object for the given connection name\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    containerName\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The unique name for the container\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getContainerToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetContainerToken(containerName)\n                \n            \n\n\n\n\n            \n                \n                    Get a token for the Map object for the given container name\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    containerName\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The unique name for the container\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDbToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetDbToken(containerName)\n                \n            \n\n\n\n\n            \n                \n                    Get a token for the Mongo Db object for the given connection name\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    containerName\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The unique name for the container\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReactiveClientToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetReactiveClientToken(containerName)\n                \n            \n\n\n\n\n            \n                \n                    Get a token for the MongoClient object for the given connection name\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    containerName\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The unique name for the container\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    libs/common/src/utils/hash.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            hash\n                        \n                        \n                    \n                \n            \n            \n                \nhash(str)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    libs/nest-multi-tenant/src/database/mongo/decorators/object-id-column.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ObjectIdColumn\n                        \n                        \n                    \n                \n            \n            \n                \nObjectIdColumn(options?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/common/src/decorators/permission.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Permission\n                        \n                        \n                    \n                \n            \n            \n                \nPermission(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    libs/graphql-gateway/src/decorators/resolve-reference.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ResolveReference\n                        \n                        \n                    \n                \n            \n            \n                \nResolveReference()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     MethodDecorator\n\n                    \n                \n            \n        \n    \n    libs/common/src/decorators/resource.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Resource\n                        \n                        \n                    \n                \n            \n            \n                \nResource(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    libs/common/src/setup/swagger.setup.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            setupSwagger\n                        \n                        \n                    \n                \n            \n            \n                \nsetupSwagger(title, description, version, tag)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tag\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SwaggerBaseConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\nULTIMATE BACKEND\n\n\n\n  (WiP): This is an enterprise scale advanced microservice pattern with GraphQL, based on Domain  (DDD) using the command query responsibility segregation (CQRS) design pattern. This is a proof of concept project designed to be extremly slim and scalable, with distributed data request and process handling and built from the ground up for production use.\n\n    \n\n\nDescription\nThis should be the go to backend base for your next scalable project. It comes with Multi-Tenancy, following different multi-tenancy database strategy as well as different resolver patterns\nto identify your tenants. The goal is to give your next big project that extra leap to awesomeness.\nFeatures\nSoftware features\n\n✅ CQRS\n✅ Authentication by stateful session\n✅ User\n✅ Event Sourcing\n✅ Federated GraphQL Microservice\n❌ Emailing Queue\n❌ Authentication by session\n✅ Role Based Access Control (WiP)\n❌ Security\n✅ Multi Tenancy (WiP)\n❌ React Website\n\nRequirements\n\n\n\nStore and Cache\nStack and frameworks\nDeployment\n\n\n\n\nEvent Store (Event Source Store)\nTypeORM\nDocker\n\n\nRedis (cache)\nNodeJS (System runtime)\nKubernetes\n\n\nMongoDB (Database)\nTypescript\nAzure Pipeline\n\n\n\nApollo Server\n\n\n\n\nNestJS (Server Framework)\n\n\n\n\nApollo Gateway\n\n\n\n\nExpress JS\n\n\n\n\nFastify\n\n\n\n\nInstallation\n$ yarnRunning the admin gateway microservice\n# development for admin gateway\n$ yarn run start gateway-admin\n\n# watch mode for admin gateway\n$ yarn run start:dev gateway-admin\n\n# production mode for admin gateway\n$ yarn run start:prodTest\n# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSystem\nThe Problem\nSystem Architecture & Design\nSystem requirements\nSystem Benefits\nLicense\n  This project is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphqlDistributedGatewayModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphqlDistributedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NestCasbinModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NestjsEventStoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NestMultiTenantModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProjectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RepositoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_GraphqlDistributedModule\n\n\n\ncluster_GraphqlDistributedModule_exports\n\n\n\ncluster_GraphqlDistributedModule_providers\n\n\n\ncluster_MongoCoreModule\n\n\n\ncluster_MongoCoreModule_imports\n\n\n\ncluster_NestCasbinModule\n\n\n\ncluster_NestCasbinModule_exports\n\n\n\ncluster_NestCasbinModule_providers\n\n\n\ncluster_NestjsEventStoreModule\n\n\n\ncluster_NestjsEventStoreModule_exports\n\n\n\ncluster_NestjsEventStoreModule_providers\n\n\n\ncluster_NestMultiTenantModule\n\n\n\ncluster_NestMultiTenantModule_exports\n\n\n\ncluster_NestMultiTenantModule_providers\n\n\n\ncluster_ProjectModule\n\n\n\ncluster_ProjectModule_providers\n\n\n\ncluster_RepositoryModule\n\n\n\ncluster_RepositoryModule_exports\n\n\n\ncluster_RepositoryModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nGraphqlDistributedGatewayModule\n\nGraphqlDistributedGatewayModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nGraphqlDistributedGatewayModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\nAppModule -->\n\nAppService->AppModule\n\n\n\nAppModule -->\n\nAppService->AppModule\n\n\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nGraphqlDistributedModule\n\nGraphqlDistributedModule\n\nAppModule -->\n\nGraphqlDistributedModule->AppModule\n\n\n\nAppModule -->\n\nGraphqlDistributedModule->AppModule\n\n\n\nAppModule -->\n\nGraphqlDistributedModule->AppModule\n\n\n\n\n\nGraphQLAstExplorer \n\nGraphQLAstExplorer \n\nGraphQLAstExplorer  -->\n\nGraphqlDistributedModule->GraphQLAstExplorer \n\n\n\n\n\nGraphQLTypesLoader \n\nGraphQLTypesLoader \n\nGraphQLTypesLoader  -->\n\nGraphqlDistributedModule->GraphQLTypesLoader \n\n\n\n\n\nMongoModule\n\nMongoModule\n\nAppModule -->\n\nMongoModule->AppModule\n\n\n\n\n\nProjectModule\n\nProjectModule\n\nAppModule -->\n\nProjectModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nRepositoryModule\n\nRepositoryModule\n\nAuthModule -->\n\nRepositoryModule->AuthModule\n\n\n\n\n\nAuthRepository \n\nAuthRepository \n\nAuthRepository  -->\n\nRepositoryModule->AuthRepository \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nCookieSerializer\n\nCookieSerializer\n\nAuthModule -->\n\nCookieSerializer->AuthModule\n\n\n\n\n\nFacebookStrategy\n\nFacebookStrategy\n\nAuthModule -->\n\nFacebookStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nAwsS3Service \n\nAwsS3Service \n\n\n\nCommonService \n\nCommonService \n\n\n\nConfigService \n\nConfigService \n\n\n\nGeneratorService \n\nGeneratorService \n\n\n\nValidatorService \n\nValidatorService \n\n\n\nCommonModule\n\nCommonModule\n\nAwsS3Service  -->\n\nCommonModule->AwsS3Service \n\n\n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\nConfigService  -->\n\nCommonModule->ConfigService \n\n\n\nGeneratorService  -->\n\nCommonModule->GeneratorService \n\n\n\nValidatorService  -->\n\nCommonModule->ValidatorService \n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\nCoreService \n\nCoreService \n\n\n\nCoreModule\n\nCoreModule\n\nCoreService  -->\n\nCoreModule->CoreService \n\n\n\n\n\nCoreService\n\nCoreService\n\nCoreModule -->\n\nCoreService->CoreModule\n\n\n\n\n\nGraphQLTypesLoader\n\nGraphQLTypesLoader\n\nGraphqlDistributedModule -->\n\nGraphQLTypesLoader->GraphqlDistributedModule\n\n\n\n\n\nGraphqlDistributedFactory\n\nGraphqlDistributedFactory\n\nGraphqlDistributedModule -->\n\nGraphqlDistributedFactory->GraphqlDistributedModule\n\n\n\n\n\nReferencesExplorerService\n\nReferencesExplorerService\n\nGraphqlDistributedModule -->\n\nReferencesExplorerService->GraphqlDistributedModule\n\n\n\n\n\nNestMultiTenantModule\n\nNestMultiTenantModule\n\n\n\nMongoCoreModule\n\nMongoCoreModule\n\nMongoCoreModule -->\n\nNestMultiTenantModule->MongoCoreModule\n\n\n\n\n\nNestMultiTenantService \n\nNestMultiTenantService \n\nNestMultiTenantService  -->\n\nNestMultiTenantModule->NestMultiTenantService \n\n\n\n\n\nNestCasbinService \n\nNestCasbinService \n\n\n\nNestCasbinModule\n\nNestCasbinModule\n\nNestCasbinService  -->\n\nNestCasbinModule->NestCasbinService \n\n\n\n\n\nNestCasbinService\n\nNestCasbinService\n\nNestCasbinModule -->\n\nNestCasbinService->NestCasbinModule\n\n\n\n\n\nNestjsEventStoreService \n\nNestjsEventStoreService \n\n\n\nNestjsEventStoreModule\n\nNestjsEventStoreModule\n\nNestjsEventStoreService  -->\n\nNestjsEventStoreModule->NestjsEventStoreService \n\n\n\n\n\nNestjsEventStoreService\n\nNestjsEventStoreService\n\nNestjsEventStoreModule -->\n\nNestjsEventStoreService->NestjsEventStoreModule\n\n\n\n\n\nNestMultiTenantService\n\nNestMultiTenantService\n\nNestMultiTenantModule -->\n\nNestMultiTenantService->NestMultiTenantModule\n\n\n\n\n\nProjectService\n\nProjectService\n\nProjectModule -->\n\nProjectService->ProjectModule\n\n\n\n\n\nAuthRepository\n\nAuthRepository\n\nRepositoryModule -->\n\nAuthRepository->RepositoryModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    31 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    47 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    32 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            After   (libs/.../hooks.decorator.ts)\n                        \n                        \n                            AuthCommandHandlers   (libs/.../index.ts)\n                        \n                        \n                            AuthEventHandlers   (libs/.../index.ts)\n                        \n                        \n                            AuthQueryHandlers   (libs/.../index.ts)\n                        \n                        \n                            authRepoProvider   (libs/.../auth-repo.provider.ts)\n                        \n                        \n                            Before   (libs/.../hooks.decorator.ts)\n                        \n                        \n                            bloodTearsMiddleware   (libs/.../blood-tears.middleware.ts)\n                        \n                        \n                            CASBIN_ENFORCER   (libs/.../nest-casbin.constants.ts)\n                        \n                        \n                            COLLECTION_KEY   (libs/.../types.interface.ts)\n                        \n                        \n                            COLUMN_KEY   (libs/.../types.interface.ts)\n                        \n                        \n                            ConstraintErrors   (libs/.../constraint-errors.ts)\n                        \n                        \n                            contextMiddleware   (libs/.../context.middelware.ts)\n                        \n                        \n                            CONTINUATION_KEY   (libs/.../tenant.constant.ts)\n                        \n                        \n                            CurrentUser   (libs/.../current-user.decorator.ts)\n                        \n                        \n                            DbConstants   (libs/.../db.constants.ts)\n                        \n                        \n                            DEFAULT_MONGO_CLIENT_OPTIONS   (libs/.../mongo.constants.ts)\n                        \n                        \n                            DEFAULT_MONGO_CONNECTION_NAME   (libs/.../mongo.constants.ts)\n                        \n                        \n                            DEFAULT_MONGO_CONTAINER_NAME   (libs/.../mongo.constants.ts)\n                        \n                        \n                            DISTRIBUTED_GATEWAY_BUILD_SERVICE   (libs/.../tokens.ts)\n                        \n                        \n                            DISTRIBUTED_GATEWAY_OPTIONS   (libs/.../tokens.ts)\n                        \n                        \n                            ENTITY_KEY   (libs/.../types.interface.ts)\n                        \n                        \n                            EntityRepository   (libs/.../entity-repository.decorator.ts)\n                        \n                        \n                            generateHashedPassword   (libs/.../encryption.util.ts)\n                        \n                        \n                            InjectClient   (libs/.../mongo.decorator.ts)\n                        \n                        \n                            InjectCollection   (libs/.../mongo.decorator.ts)\n                        \n                        \n                            InjectDb   (libs/.../mongo.decorator.ts)\n                        \n                        \n                            InjectReactiveClient   (libs/.../mongo.decorator.ts)\n                        \n                        \n                            MONGO_CONNECTION_NAME   (libs/.../mongo.constants.ts)\n                        \n                        \n                            MONGO_CONNECTIONS_CONTAINER   (libs/.../mongo.constants.ts)\n                        \n                        \n                            MONGO_CONTAINER_NAME   (libs/.../mongo.constants.ts)\n                        \n                        \n                            MONGO_MODULE_OPTIONS   (libs/.../mongo.constants.ts)\n                        \n                        \n                            MongoDBStore   (libs/.../auth.setup.ts)\n                        \n                        \n                            passportMiddleware   (libs/.../auth.setup.ts)\n                        \n                        \n                            passportSessionMiddleware   (libs/.../auth.setup.ts)\n                        \n                        \n                            PERMISSION_DEFINITION   (libs/.../permission.decorator.ts)\n                        \n                        \n                            POST_KEY   (libs/.../types.interface.ts)\n                        \n                        \n                            PRE_KEY   (libs/.../types.interface.ts)\n                        \n                        \n                            projectRepoProvider   (libs/.../project-repo.provider.ts)\n                        \n                        \n                            providers   (libs/.../common.module.ts)\n                        \n                        \n                            ProvidersConstants   (libs/.../nestjs-event-store.constant.ts)\n                        \n                        \n                            readFile   (libs/.../graphql-types.loader.ts)\n                        \n                        \n                            RESOLVE_REFERENCE_KEY   (libs/.../tokens.ts)\n                        \n                        \n                            RESOLVE_REFERENCE_METADATA   (libs/.../tokens.ts)\n                        \n                        \n                            RESOURCE_DEFINITION   (libs/.../resource.decorator.ts)\n                        \n                        \n                            sessionMiddleware   (libs/.../auth.setup.ts)\n                        \n                        \n                            store   (libs/.../auth.setup.ts)\n                        \n                        \n                            tenantNamespace   (libs/.../multi-tenancy-global.middleware.ts)\n                        \n                        \n                            userRepoProvider   (libs/.../user-repo.provider.ts)\n                        \n                        \n                            validPassword   (libs/.../encryption.util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/nest-multi-tenant/src/database/mongo/decorators/hooks.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            After\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...events: string[]) =>  (target: any, name: string, descriptor: TypedPropertyDescriptor) => {\n  for (const event of events) {\n    const fns = Reflect.getMetadata(`${POST_KEY}_${event}`, target) || [];\n    // you must create new array so you don't push fn into siblings\n    // see https://github.com/rbuckton/reflect-metadata/issues/53#issuecomment-274906502\n    const result = fns ? fns.concat([target[name]]) : [target[name]];\n    Reflect.defineMetadata(`${POST_KEY}_${event}`, result, target);\n  }\n}\n                        \n                    \n\n                \n                    \n                        Run this function after an event occurs\n\ncreate\ndelete\ndeleteMany\ndeleteOne\nfind\nfindMany\nfindOne\nsave\nupdate\nupdateOne\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Before\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...events: string[]) => (target: any, name: string, descriptor: TypedPropertyDescriptor) => {\n  for (const event of events) {\n    const fns = Reflect.getMetadata(`${PRE_KEY}_${event}`, target) || [];\n    // you must create new array so you don't push fn into siblings\n    // see https://github.com/rbuckton/reflect-metadata/issues/53#issuecomment-274906502\n    const result = fns ? fns.concat([target[name]]) : [target[name]];\n    Reflect.defineMetadata(`${PRE_KEY}_${event}`, result, target);\n  }\n}\n                        \n                    \n\n                \n                    \n                        Run this function before an event occurs\n\ncreate\ndelete\ndeleteMany\ndeleteOne\nfind\nfindMany\nfindOne\nsave\nupdate\nupdateOne\n\n\n                    \n                \n\n            \n        \n\n    libs/core/src/cqrs/commands/handlers/auth/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AuthCommandHandlers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [CreateAuthHandler]\n                        \n                    \n\n\n            \n        \n\n    libs/core/src/cqrs/events/handlers/auth/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AuthEventHandlers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  AuthCreatedHandler,\n  AuthUpdatedHandler,\n  AuthDeletedHandler,\n]\n                        \n                    \n\n\n            \n        \n\n    libs/core/src/cqrs/queries/handlers/auth/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AuthQueryHandlers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  GetAuthHandler,\n  AuthExistHandler,\n]\n                        \n                    \n\n\n            \n        \n\n    libs/repository/src/providers/auth-repo.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            authRepoProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: DbConstants.auth,\n    useFactory: (connection: Connection) => connection.getCustomRepository(AuthRepository),\n    inject: [DbConstants.db],\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    libs/common/src/middlewares/blood-tears.middleware.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bloodTearsMiddleware\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (req, res, next) => {\n  res.header('x-powered-by', 'Blood, sweat, and tears.');\n  next();\n}\n                        \n                    \n\n\n            \n        \n\n    libs/nest-casbin/src/nest-casbin.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CASBIN_ENFORCER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'CASBIN_ENFORCER'\n                        \n                    \n\n\n            \n        \n\n    libs/nest-multi-tenant/src/database/mongo/interfaces/types.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COLLECTION_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'collection'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            COLUMN_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'column'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ENTITY_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'entity'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            POST_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'post'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PRE_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'pre'\n                        \n                    \n\n\n            \n        \n\n    libs/common/src/filters/constraint-errors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ConstraintErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IConstraintErrors\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  UQ_97672ac88f789774dd47f7c8be3: 'error.unique.email',\n}\n                        \n                    \n\n\n            \n        \n\n    libs/common/src/middlewares/context.middelware.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            contextMiddleware\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : requestContext.middleware('request')\n                        \n                    \n\n\n            \n        \n\n    libs/nest-multi-tenant/src/tenant.constant.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CONTINUATION_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'MULTI_CON_XXX-KEY'\n                        \n                    \n\n\n            \n        \n\n    libs/common/src/decorators/current-user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CurrentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator(\n  (data, [root, args, ctx, info]) => ctx.req.user,\n)\n                        \n                    \n\n\n            \n        \n\n    libs/repository/src/db.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DbConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  project: 'ProjectRepository',\n  auth: 'AuthRepository',\n  db: 'Database',\n  user: 'UserRepository',\n}\n                        \n                    \n\n\n            \n        \n\n    libs/nest-multi-tenant/src/database/mongo/mongo.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_MONGO_CLIENT_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MongoClientOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_MONGO_CONNECTION_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'DefaultMongo'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_MONGO_CONTAINER_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'DefaultMongo'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MONGO_CONNECTION_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'MongoConnectionName'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MONGO_CONNECTIONS_CONTAINER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'MongoConnectionsContainer'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MONGO_CONTAINER_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'MongoContainerName'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MONGO_MODULE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'MongoModuleOptions'\n                        \n                    \n\n\n            \n        \n\n    libs/graphql-gateway/src/tokens.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DISTRIBUTED_GATEWAY_BUILD_SERVICE\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Symbol('DISTRIBUTED_GATEWAY_BUILD_SERVICE')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DISTRIBUTED_GATEWAY_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Symbol('DISTRIBUTED_GATEWAY_OPTIONS')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RESOLVE_REFERENCE_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '__resolveReference'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RESOLVE_REFERENCE_METADATA\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Symbol('RESOLVE_REFERENCE_METADATA')\n                        \n                    \n\n\n            \n        \n\n    libs/nest-multi-tenant/src/database/mongo/decorators/entity-repository.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EntityRepository\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (props: CollectionProps) =>  (target: any) => {\n  Reflect.defineMetadata(COLLECTION_KEY, props, target.prototype);\n}\n                        \n                    \n\n                \n                    \n                        Indicate the class represents a collection\n\n                    \n                \n\n            \n        \n\n    libs/common/src/utils/encryption.util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            generateHashedPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : password => {\n  return bcrypt.hashSync(password, bcrypt.genSaltSync(8));\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (password, passwordHash) => {\n  return bcrypt.compareSync(password, passwordHash);\n}\n                        \n                    \n\n\n            \n        \n\n    libs/nest-multi-tenant/src/database/mongo/decorators/mongo.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InjectClient\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (connectionName?: string) => Inject(getClientToken(connectionName))\n                        \n                    \n\n                \n                    \n                        Inject the MongoClient object associated with a connection\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            InjectCollection\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (collectionName: string) =>\n  Inject(getCollectionToken(collectionName))\n                        \n                    \n\n                \n                    \n                        Inject the Mongo Collection object associated with a Db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            InjectDb\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (connectionName?: string) => Inject(getDbToken(connectionName))\n                        \n                    \n\n                \n                    \n                        Inject the Mongo Db object associated with a connection\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            InjectReactiveClient\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (connectionName?: string) => Inject(getReactiveClientToken(connectionName))\n                        \n                    \n\n                \n                    \n                        Inject the MongoClient object associated with a connection\n\n                    \n                \n\n            \n        \n\n    libs/common/src/setup/auth.setup.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MongoDBStore\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : connectMongodbSession(session)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passportMiddleware\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : passport.initialize()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passportSessionMiddleware\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : passport.session()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionMiddleware\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : session({\n  secret: '46565-GHTJ-GHGGG-665655',\n  resave: false,\n  rolling: true,\n  saveUninitialized: false,\n  cookie: {\n    maxAge: 1000 * 60 * 60 * 24 * 7,\n    secure: false,\n  },\n  store,\n  name: 'session.app',\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MongoDBStore({\n  uri: 'mongodb://localhost:27017/test',\n  collection: 'session',\n})\n                        \n                    \n\n\n            \n        \n\n    libs/common/src/decorators/permission.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PERMISSION_DEFINITION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '__permission_definition__'\n                        \n                    \n\n\n            \n        \n\n    libs/repository/src/providers/project-repo.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            projectRepoProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: DbConstants.project,\n    useFactory: (connection: Connection) => connection.getCustomRepository(ProjectRepository),\n    inject: [DbConstants.db],\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    libs/common/src/common.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ConfigService, ValidatorService, AwsS3Service, GeneratorService]\n                        \n                    \n\n\n            \n        \n\n    libs/nestjs-event-store/src/nestjs-event-store.constant.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ProvidersConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  EVENT_STORE_PROVIDER: 'EVENT_STORE_PROVIDER',\n  EVENT_STORE_STREAM_CONFIG_PROVIDER: 'EsStreamConfig',\n  EVENT_STORE_CONNECTION_CONFIG_PROVIDER: 'EsConnectionConfig',\n}\n                        \n                    \n\n\n            \n        \n\n    libs/graphql-gateway/src/graphql-types.loader.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            readFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : util.promisify(fs.readFile)\n                        \n                    \n\n\n            \n        \n\n    libs/common/src/decorators/resource.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RESOURCE_DEFINITION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '__resource_definition__'\n                        \n                    \n\n\n            \n        \n\n    libs/nest-multi-tenant/src/middleware/multi-tenancy-global.middleware.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            tenantNamespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createNamespace(CONTINUATION_KEY)\n                        \n                    \n\n\n            \n        \n\n    libs/repository/src/providers/user-repo.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            userRepoProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: DbConstants.user,\n    useFactory: (connection: Connection) => connection.getCustomRepository(UserRepository),\n    inject: [DbConstants.db],\n  },\n]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
