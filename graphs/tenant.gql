# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

directive @key(fields: String!) on OBJECT | INTERFACE

directive @extends on OBJECT | INTERFACE

directive @external on OBJECT | FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

directive @provides(fields: String!) on FIELD_DEFINITION

input CreateTenantInput {
  name: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input FilterMongoClass {
  total: Int!
}

type Mutation {
  createTenant(input: CreateTenantInput!): Tenant!
  removeTenant(id: String!): Tenant!
  updateTenant(id: String!): Tenant!
  generateAccessToken(id: String!): Tenant!
  retireAccessToken(id: String!): Tenant!
  inviteTenantMember(id: String!): TenantMember!
  updateTenantMember(id: String!): TenantMember!
  removeTenantMember(id: String!): TenantMember!
}

input PaginationInput {
  skip: Int = 0
  limit: Int = 10
}

type Query {
  tenant(where: FilterMongoClass!): Tenant!
  tenants: Tenant!
  tenantMember(id: String!): TenantMember!
  tenantMembers(paginate: PaginationInput!): TenantMember!
}

type Tenant {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  normalizedName: String!
  tokens: [TenantAccessToken!]!
  members: [TenantMember!]!
}

type TenantAccessToken {
  key: String!
  secret: String!
  active: Boolean
  createdAt: DateTime
}

type TenantMember {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  status: String!
  role: String!
  tenant: Tenant!
}

type User {
  id: ID!
  tenants: [Tenant!]!
}
