# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

directive @extends on INTERFACE | OBJECT

directive @external on FIELD_DEFINITION | OBJECT

directive @key(fields: String!) on INTERFACE | OBJECT

directive @provides(fields: String!) on FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

"""The App roles for authorization"""
enum AppRole {
  ADMIN
  DEVELOPER
  MEMBER
  OWNER
  SUPER
}

input CreateTenantInput {
  couponId: String
  name: String!
  planId: String
}

input CreateTenantMemberInput {
  email: String
  role: AppRole!
  userId: ID
}

input DateComparisonFilter {
  _EQ: DateTime
  _GT: DateTime
  _GTE: DateTime
  _LT: DateTime
  _LTE: DateTime
  _NE: DateTime
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input FilterTenantInput {
  _AND: [FilterTenantInput!]
  _NOR: [FilterTenantInput!]
  _OR: [FilterTenantInput!]
  createdAt: DateComparisonFilter
  id: StringComparisonFilter
  name: StringComparisonFilter
  normalizedName: StringComparisonFilter
  updatedAt: DateComparisonFilter
}

input FilterTenantMemberInput {
  _AND: [FilterTenantMemberInput!]
  _NOR: [FilterTenantMemberInput!]
  _OR: [FilterTenantMemberInput!]
  createdAt: DateComparisonFilter
  email: StringComparisonFilter
  id: StringComparisonFilter
  role: StringComparisonFilter
  status: StringComparisonFilter
  updatedAt: DateComparisonFilter
}

type Mutation {
  generateAccessToken(id: String!): Tenant!
  tenant(create: CreateTenantInput, remove: RemoveTenantInput, removeAccessToken: RemoveTenantAccessTokenInput, update: UpdateTenantInput, updateAccessToken: UpdateTenantAccessTokenInput): Tenant!
  tenantMember(create: CreateTenantMemberInput, remove: RemoveTenantMemberInput, update: UpdateTenantMemberInput): TenantMember!
}

input PaginationInput {
  limit: Int = 10
  skip: Int = 0
}

type Query {
  tenant(paginate: PaginationInput, where: FilterTenantInput): Tenant!
  tenantMember(id: String!): TenantMember!
  tenantMembers(paginate: PaginationInput, where: FilterTenantMemberInput): [TenantMember!]!
  tenants(paginate: PaginationInput, where: FilterTenantInput): [Tenant!]!
}

input RemoveTenantAccessTokenInput {
  """Key of the access token to remove"""
  key: String!

  """Secret of the access token to remove"""
  secret: String!
}

input RemoveTenantInput {
  id: ID!
}

input RemoveTenantMemberInput {
  id: ID!
}

input StringComparisonFilter {
  _EQ: String
  _GT: String
  _GTE: String
  _LT: String
  _LTE: String
  _NE: String
}

type Tenant {
  createdAt: DateTime!
  id: ID!
  members: [TenantMember!]
  name: String
  normalizedName: String
  tokens: [TenantAccessToken!]
  updatedAt: DateTime!
}

type TenantAccessToken {
  active: Boolean
  createdAt: DateTime
  key: String!
  secret: String!
}

type TenantMember {
  createdAt: DateTime!
  email: String!
  id: ID!
  role: String!
  status: String!
  tenant: Tenant!
  updatedAt: DateTime!
}

input UpdateTenantAccessTokenInput {
  active: Boolean!

  """Key of the access token to update"""
  key: String!

  """Secret of the access token to update"""
  secret: String!
}

input UpdateTenantInput {
  id: String!
}

input UpdateTenantMemberInput {
  id: String
  role: AppRole!
}

type User {
  id: ID!
  tenants: [Tenant!]!
}
