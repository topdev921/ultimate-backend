# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

directive @extends on INTERFACE | OBJECT

directive @external on FIELD_DEFINITION | OBJECT

directive @key(fields: String!) on INTERFACE | OBJECT

directive @provides(fields: String!) on FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

type AuthPayload {
  id: ID!
  sessionId: String!
  tokens: Tokens!
}

type BooleanPayload {
  success: Boolean!
}

input CreateRoleInput {
  action: RoleAction!
  name: String!
  resource: String!
  tenant: String
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input LoginInput {
  params: LoginParamsInput!
  service: ServiceTypes!
}

input LoginParamsInput {
  """Access token for social (Service: Twitter, Github, Email)"""
  accessToken: String

  """Access token for social (Service: Twitter, Github, Email)"""
  accessTokenSecret: String

  """Primary email of the user (Service: Password)"""
  email: String

  """User password (Service: Password)"""
  password: String
}

type Mutation {
  changePassword(newPassword: String!, newPasswordConfirm: String!, oldPassword: String!): BooleanPayload!
  login(input: LoginInput!): AuthPayload!
  logout: BooleanPayload!
  refreshTokens(accessToken: String!, refreshToken: String!): AuthPayload!
  register(input: RegisterInput!): BooleanPayload!
  role(create: CreateRoleInput, remove: RemoveRoleInput): Role!
  sendResetPasswordEmail(email: String!): BooleanPayload!
  sendVerificationEmail(email: String!): BooleanPayload!
  verifyEmail(email: String!, token: Float!): BooleanPayload!
}

type Query {
  role(id: String!): Role!
  roles: [Role!]!
}

input RegisterInput {
  email: String!
  firstname: String!
  lastname: String!
  password: String!
}

input RemoveRoleInput {
  id: ID!
}

type Role {
  createdAt: DateTime!
  id: ID!
  name: String!
  normalizedName: String!
  updatedAt: DateTime!
}

"""Role action enum types"""
enum RoleAction {
  Read
  ReadAll
  Write
  WriteAll
}

"""Authentication service types"""
enum ServiceTypes {
  Facebook
  Github
  Google
  Password
}

type Tokens {
  accessToken: String!
  refreshToken: String!
}
